

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 09 16:53:27 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	swtext1,local,class=CONST,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 1.42
    38                           ; Generated 13/04/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F18855 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  001C                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0110                     	;# 
   126  0110                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011C                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011E                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  018E                     	;# 
   165  018F                     	;# 
   166  0190                     	;# 
   167  0191                     	;# 
   168  0192                     	;# 
   169  0196                     	;# 
   170  0197                     	;# 
   171  0198                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  020C                     	;# 
   177  020C                     	;# 
   178  020D                     	;# 
   179  020E                     	;# 
   180  020F                     	;# 
   181  020F                     	;# 
   182  0210                     	;# 
   183  0210                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  0218                     	;# 
   197  0218                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021B                     	;# 
   202  021C                     	;# 
   203  021C                     	;# 
   204  021D                     	;# 
   205  021D                     	;# 
   206  021E                     	;# 
   207  021F                     	;# 
   208  028C                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  028D                     	;# 
   212  028E                     	;# 
   213  028F                     	;# 
   214  0290                     	;# 
   215  0290                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0293                     	;# 
   221  0294                     	;# 
   222  0295                     	;# 
   223  0296                     	;# 
   224  0296                     	;# 
   225  0297                     	;# 
   226  0298                     	;# 
   227  0298                     	;# 
   228  0299                     	;# 
   229  0299                     	;# 
   230  029A                     	;# 
   231  029B                     	;# 
   232  029C                     	;# 
   233  029C                     	;# 
   234  029D                     	;# 
   235  030C                     	;# 
   236  030C                     	;# 
   237  030D                     	;# 
   238  030E                     	;# 
   239  030F                     	;# 
   240  0310                     	;# 
   241  0310                     	;# 
   242  0311                     	;# 
   243  0312                     	;# 
   244  0313                     	;# 
   245  0314                     	;# 
   246  0314                     	;# 
   247  0315                     	;# 
   248  0316                     	;# 
   249  0317                     	;# 
   250  0318                     	;# 
   251  0318                     	;# 
   252  0319                     	;# 
   253  031A                     	;# 
   254  031B                     	;# 
   255  031C                     	;# 
   256  031C                     	;# 
   257  031D                     	;# 
   258  031E                     	;# 
   259  031F                     	;# 
   260  038C                     	;# 
   261  038D                     	;# 
   262  038E                     	;# 
   263  0390                     	;# 
   264  0391                     	;# 
   265  0392                     	;# 
   266  040C                     	;# 
   267  040D                     	;# 
   268  040E                     	;# 
   269  040F                     	;# 
   270  0410                     	;# 
   271  0411                     	;# 
   272  0416                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  0418                     	;# 
   277  0419                     	;# 
   278  041A                     	;# 
   279  041A                     	;# 
   280  041B                     	;# 
   281  041C                     	;# 
   282  041C                     	;# 
   283  041D                     	;# 
   284  041E                     	;# 
   285  041F                     	;# 
   286  048C                     	;# 
   287  048C                     	;# 
   288  048D                     	;# 
   289  048E                     	;# 
   290  048F                     	;# 
   291  048F                     	;# 
   292  0490                     	;# 
   293  0491                     	;# 
   294  0492                     	;# 
   295  0492                     	;# 
   296  0493                     	;# 
   297  0494                     	;# 
   298  0495                     	;# 
   299  0495                     	;# 
   300  0496                     	;# 
   301  0497                     	;# 
   302  0498                     	;# 
   303  0499                     	;# 
   304  049A                     	;# 
   305  049B                     	;# 
   306  049C                     	;# 
   307  049D                     	;# 
   308  050C                     	;# 
   309  050C                     	;# 
   310  050D                     	;# 
   311  050E                     	;# 
   312  050F                     	;# 
   313  050F                     	;# 
   314  0510                     	;# 
   315  0511                     	;# 
   316  0512                     	;# 
   317  0512                     	;# 
   318  0513                     	;# 
   319  0514                     	;# 
   320  0515                     	;# 
   321  0515                     	;# 
   322  0516                     	;# 
   323  0517                     	;# 
   324  0518                     	;# 
   325  0519                     	;# 
   326  051A                     	;# 
   327  051B                     	;# 
   328  051C                     	;# 
   329  051D                     	;# 
   330  058C                     	;# 
   331  058C                     	;# 
   332  058D                     	;# 
   333  058E                     	;# 
   334  058F                     	;# 
   335  058F                     	;# 
   336  0590                     	;# 
   337  0591                     	;# 
   338  0592                     	;# 
   339  0593                     	;# 
   340  060C                     	;# 
   341  060D                     	;# 
   342  060E                     	;# 
   343  060F                     	;# 
   344  0610                     	;# 
   345  0611                     	;# 
   346  0612                     	;# 
   347  0613                     	;# 
   348  0614                     	;# 
   349  0616                     	;# 
   350  0617                     	;# 
   351  0618                     	;# 
   352  0619                     	;# 
   353  061A                     	;# 
   354  061B                     	;# 
   355  061C                     	;# 
   356  061D                     	;# 
   357  061E                     	;# 
   358  068C                     	;# 
   359  068D                     	;# 
   360  068E                     	;# 
   361  068F                     	;# 
   362  0690                     	;# 
   363  0691                     	;# 
   364  0692                     	;# 
   365  0693                     	;# 
   366  0694                     	;# 
   367  070C                     	;# 
   368  070D                     	;# 
   369  070E                     	;# 
   370  070F                     	;# 
   371  0710                     	;# 
   372  0711                     	;# 
   373  0712                     	;# 
   374  0713                     	;# 
   375  0714                     	;# 
   376  0716                     	;# 
   377  0717                     	;# 
   378  0718                     	;# 
   379  0719                     	;# 
   380  071A                     	;# 
   381  071B                     	;# 
   382  071C                     	;# 
   383  071D                     	;# 
   384  071E                     	;# 
   385  0796                     	;# 
   386  0797                     	;# 
   387  0798                     	;# 
   388  0799                     	;# 
   389  079A                     	;# 
   390  079B                     	;# 
   391  080C                     	;# 
   392  080D                     	;# 
   393  080E                     	;# 
   394  080F                     	;# 
   395  0810                     	;# 
   396  0811                     	;# 
   397  0812                     	;# 
   398  0813                     	;# 
   399  0814                     	;# 
   400  081A                     	;# 
   401  081B                     	;# 
   402  081C                     	;# 
   403  081D                     	;# 
   404  081E                     	;# 
   405  081F                     	;# 
   406  088C                     	;# 
   407  088D                     	;# 
   408  088E                     	;# 
   409  088F                     	;# 
   410  0890                     	;# 
   411  0891                     	;# 
   412  0892                     	;# 
   413  0893                     	;# 
   414  0895                     	;# 
   415  0896                     	;# 
   416  0897                     	;# 
   417  0898                     	;# 
   418  0899                     	;# 
   419  089A                     	;# 
   420  089B                     	;# 
   421  090C                     	;# 
   422  090E                     	;# 
   423  090F                     	;# 
   424  091F                     	;# 
   425  091F                     	;# 
   426  098F                     	;# 
   427  098F                     	;# 
   428  0990                     	;# 
   429  0991                     	;# 
   430  0992                     	;# 
   431  0993                     	;# 
   432  0994                     	;# 
   433  0995                     	;# 
   434  0996                     	;# 
   435  0997                     	;# 
   436  0E0F                     	;# 
   437  0E10                     	;# 
   438  0E11                     	;# 
   439  0E12                     	;# 
   440  0E13                     	;# 
   441  0E14                     	;# 
   442  0E15                     	;# 
   443  0E16                     	;# 
   444  0E17                     	;# 
   445  0E18                     	;# 
   446  0E19                     	;# 
   447  0E1A                     	;# 
   448  0E1B                     	;# 
   449  0E1C                     	;# 
   450  0E1D                     	;# 
   451  0E1E                     	;# 
   452  0E1F                     	;# 
   453  0E20                     	;# 
   454  0E21                     	;# 
   455  0E22                     	;# 
   456  0E23                     	;# 
   457  0E24                     	;# 
   458  0E25                     	;# 
   459  0E26                     	;# 
   460  0E27                     	;# 
   461  0E28                     	;# 
   462  0E29                     	;# 
   463  0E2A                     	;# 
   464  0E2B                     	;# 
   465  0E2C                     	;# 
   466  0E2D                     	;# 
   467  0E2E                     	;# 
   468  0E2F                     	;# 
   469  0E30                     	;# 
   470  0E31                     	;# 
   471  0E32                     	;# 
   472  0E33                     	;# 
   473  0E34                     	;# 
   474  0E35                     	;# 
   475  0E36                     	;# 
   476  0E37                     	;# 
   477  0E8F                     	;# 
   478  0E90                     	;# 
   479  0E91                     	;# 
   480  0E92                     	;# 
   481  0E93                     	;# 
   482  0E94                     	;# 
   483  0E95                     	;# 
   484  0E96                     	;# 
   485  0E97                     	;# 
   486  0E9C                     	;# 
   487  0E9D                     	;# 
   488  0E9E                     	;# 
   489  0EA1                     	;# 
   490  0EA2                     	;# 
   491  0EA3                     	;# 
   492  0EA4                     	;# 
   493  0EA5                     	;# 
   494  0EA9                     	;# 
   495  0EAA                     	;# 
   496  0EAB                     	;# 
   497  0EAC                     	;# 
   498  0EB1                     	;# 
   499  0EB2                     	;# 
   500  0EB3                     	;# 
   501  0EB8                     	;# 
   502  0EB9                     	;# 
   503  0EBA                     	;# 
   504  0EBB                     	;# 
   505  0EBC                     	;# 
   506  0EBD                     	;# 
   507  0EBE                     	;# 
   508  0EC3                     	;# 
   509  0EC5                     	;# 
   510  0EC6                     	;# 
   511  0EC7                     	;# 
   512  0EC8                     	;# 
   513  0EC9                     	;# 
   514  0ECA                     	;# 
   515  0ECB                     	;# 
   516  0ECC                     	;# 
   517  0F10                     	;# 
   518  0F11                     	;# 
   519  0F12                     	;# 
   520  0F13                     	;# 
   521  0F14                     	;# 
   522  0F15                     	;# 
   523  0F16                     	;# 
   524  0F17                     	;# 
   525  0F18                     	;# 
   526  0F19                     	;# 
   527  0F1A                     	;# 
   528  0F1B                     	;# 
   529  0F1C                     	;# 
   530  0F1D                     	;# 
   531  0F1E                     	;# 
   532  0F1F                     	;# 
   533  0F20                     	;# 
   534  0F21                     	;# 
   535  0F22                     	;# 
   536  0F23                     	;# 
   537  0F24                     	;# 
   538  0F25                     	;# 
   539  0F26                     	;# 
   540  0F27                     	;# 
   541  0F38                     	;# 
   542  0F39                     	;# 
   543  0F3A                     	;# 
   544  0F3B                     	;# 
   545  0F3C                     	;# 
   546  0F3D                     	;# 
   547  0F3E                     	;# 
   548  0F3F                     	;# 
   549  0F40                     	;# 
   550  0F41                     	;# 
   551  0F43                     	;# 
   552  0F44                     	;# 
   553  0F45                     	;# 
   554  0F46                     	;# 
   555  0F47                     	;# 
   556  0F48                     	;# 
   557  0F49                     	;# 
   558  0F4A                     	;# 
   559  0F4B                     	;# 
   560  0F4C                     	;# 
   561  0F4E                     	;# 
   562  0F4F                     	;# 
   563  0F50                     	;# 
   564  0F51                     	;# 
   565  0F52                     	;# 
   566  0F53                     	;# 
   567  0F54                     	;# 
   568  0F55                     	;# 
   569  0F56                     	;# 
   570  0F57                     	;# 
   571  0F65                     	;# 
   572  0F68                     	;# 
   573  0F69                     	;# 
   574  0F6A                     	;# 
   575  0F6B                     	;# 
   576  0FE4                     	;# 
   577  0FE5                     	;# 
   578  0FE6                     	;# 
   579  0FE7                     	;# 
   580  0FE8                     	;# 
   581  0FE9                     	;# 
   582  0FEA                     	;# 
   583  0FEB                     	;# 
   584  0FED                     	;# 
   585  0FEE                     	;# 
   586  0FEF                     	;# 
   587  0000                     	;# 
   588  0001                     	;# 
   589  0002                     	;# 
   590  0003                     	;# 
   591  0004                     	;# 
   592  0005                     	;# 
   593  0006                     	;# 
   594  0007                     	;# 
   595  0008                     	;# 
   596  0009                     	;# 
   597  000A                     	;# 
   598  000B                     	;# 
   599  000C                     	;# 
   600  000D                     	;# 
   601  000E                     	;# 
   602  0010                     	;# 
   603  0011                     	;# 
   604  0012                     	;# 
   605  0013                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  001C                     	;# 
   610  001C                     	;# 
   611  001D                     	;# 
   612  001D                     	;# 
   613  001E                     	;# 
   614  001F                     	;# 
   615  008C                     	;# 
   616  008C                     	;# 
   617  008D                     	;# 
   618  008E                     	;# 
   619  008E                     	;# 
   620  008F                     	;# 
   621  0090                     	;# 
   622  0090                     	;# 
   623  0091                     	;# 
   624  0093                     	;# 
   625  0094                     	;# 
   626  0095                     	;# 
   627  0096                     	;# 
   628  0097                     	;# 
   629  0098                     	;# 
   630  0099                     	;# 
   631  009A                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0110                     	;# 
   642  0110                     	;# 
   643  0111                     	;# 
   644  0112                     	;# 
   645  0112                     	;# 
   646  0113                     	;# 
   647  0114                     	;# 
   648  0114                     	;# 
   649  0115                     	;# 
   650  0116                     	;# 
   651  0116                     	;# 
   652  0117                     	;# 
   653  0119                     	;# 
   654  0119                     	;# 
   655  0119                     	;# 
   656  011A                     	;# 
   657  011A                     	;# 
   658  011A                     	;# 
   659  011B                     	;# 
   660  011B                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011C                     	;# 
   665  011C                     	;# 
   666  011C                     	;# 
   667  011D                     	;# 
   668  011D                     	;# 
   669  011D                     	;# 
   670  011E                     	;# 
   671  011E                     	;# 
   672  011E                     	;# 
   673  011F                     	;# 
   674  011F                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  018C                     	;# 
   679  018D                     	;# 
   680  018E                     	;# 
   681  018F                     	;# 
   682  0190                     	;# 
   683  0191                     	;# 
   684  0192                     	;# 
   685  0196                     	;# 
   686  0197                     	;# 
   687  0198                     	;# 
   688  0199                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019C                     	;# 
   692  020C                     	;# 
   693  020C                     	;# 
   694  020D                     	;# 
   695  020E                     	;# 
   696  020F                     	;# 
   697  020F                     	;# 
   698  0210                     	;# 
   699  0210                     	;# 
   700  0211                     	;# 
   701  0211                     	;# 
   702  0212                     	;# 
   703  0212                     	;# 
   704  0213                     	;# 
   705  0214                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0216                     	;# 
   709  0216                     	;# 
   710  0217                     	;# 
   711  0217                     	;# 
   712  0218                     	;# 
   713  0218                     	;# 
   714  0219                     	;# 
   715  021A                     	;# 
   716  021B                     	;# 
   717  021B                     	;# 
   718  021C                     	;# 
   719  021C                     	;# 
   720  021D                     	;# 
   721  021D                     	;# 
   722  021E                     	;# 
   723  021F                     	;# 
   724  028C                     	;# 
   725  028C                     	;# 
   726  028D                     	;# 
   727  028D                     	;# 
   728  028E                     	;# 
   729  028F                     	;# 
   730  0290                     	;# 
   731  0290                     	;# 
   732  0291                     	;# 
   733  0292                     	;# 
   734  0292                     	;# 
   735  0293                     	;# 
   736  0293                     	;# 
   737  0294                     	;# 
   738  0295                     	;# 
   739  0296                     	;# 
   740  0296                     	;# 
   741  0297                     	;# 
   742  0298                     	;# 
   743  0298                     	;# 
   744  0299                     	;# 
   745  0299                     	;# 
   746  029A                     	;# 
   747  029B                     	;# 
   748  029C                     	;# 
   749  029C                     	;# 
   750  029D                     	;# 
   751  030C                     	;# 
   752  030C                     	;# 
   753  030D                     	;# 
   754  030E                     	;# 
   755  030F                     	;# 
   756  0310                     	;# 
   757  0310                     	;# 
   758  0311                     	;# 
   759  0312                     	;# 
   760  0313                     	;# 
   761  0314                     	;# 
   762  0314                     	;# 
   763  0315                     	;# 
   764  0316                     	;# 
   765  0317                     	;# 
   766  0318                     	;# 
   767  0318                     	;# 
   768  0319                     	;# 
   769  031A                     	;# 
   770  031B                     	;# 
   771  031C                     	;# 
   772  031C                     	;# 
   773  031D                     	;# 
   774  031E                     	;# 
   775  031F                     	;# 
   776  038C                     	;# 
   777  038D                     	;# 
   778  038E                     	;# 
   779  0390                     	;# 
   780  0391                     	;# 
   781  0392                     	;# 
   782  040C                     	;# 
   783  040D                     	;# 
   784  040E                     	;# 
   785  040F                     	;# 
   786  0410                     	;# 
   787  0411                     	;# 
   788  0416                     	;# 
   789  0416                     	;# 
   790  0417                     	;# 
   791  0418                     	;# 
   792  0418                     	;# 
   793  0419                     	;# 
   794  041A                     	;# 
   795  041A                     	;# 
   796  041B                     	;# 
   797  041C                     	;# 
   798  041C                     	;# 
   799  041D                     	;# 
   800  041E                     	;# 
   801  041F                     	;# 
   802  048C                     	;# 
   803  048C                     	;# 
   804  048D                     	;# 
   805  048E                     	;# 
   806  048F                     	;# 
   807  048F                     	;# 
   808  0490                     	;# 
   809  0491                     	;# 
   810  0492                     	;# 
   811  0492                     	;# 
   812  0493                     	;# 
   813  0494                     	;# 
   814  0495                     	;# 
   815  0495                     	;# 
   816  0496                     	;# 
   817  0497                     	;# 
   818  0498                     	;# 
   819  0499                     	;# 
   820  049A                     	;# 
   821  049B                     	;# 
   822  049C                     	;# 
   823  049D                     	;# 
   824  050C                     	;# 
   825  050C                     	;# 
   826  050D                     	;# 
   827  050E                     	;# 
   828  050F                     	;# 
   829  050F                     	;# 
   830  0510                     	;# 
   831  0511                     	;# 
   832  0512                     	;# 
   833  0512                     	;# 
   834  0513                     	;# 
   835  0514                     	;# 
   836  0515                     	;# 
   837  0515                     	;# 
   838  0516                     	;# 
   839  0517                     	;# 
   840  0518                     	;# 
   841  0519                     	;# 
   842  051A                     	;# 
   843  051B                     	;# 
   844  051C                     	;# 
   845  051D                     	;# 
   846  058C                     	;# 
   847  058C                     	;# 
   848  058D                     	;# 
   849  058E                     	;# 
   850  058F                     	;# 
   851  058F                     	;# 
   852  0590                     	;# 
   853  0591                     	;# 
   854  0592                     	;# 
   855  0593                     	;# 
   856  060C                     	;# 
   857  060D                     	;# 
   858  060E                     	;# 
   859  060F                     	;# 
   860  0610                     	;# 
   861  0611                     	;# 
   862  0612                     	;# 
   863  0613                     	;# 
   864  0614                     	;# 
   865  0616                     	;# 
   866  0617                     	;# 
   867  0618                     	;# 
   868  0619                     	;# 
   869  061A                     	;# 
   870  061B                     	;# 
   871  061C                     	;# 
   872  061D                     	;# 
   873  061E                     	;# 
   874  068C                     	;# 
   875  068D                     	;# 
   876  068E                     	;# 
   877  068F                     	;# 
   878  0690                     	;# 
   879  0691                     	;# 
   880  0692                     	;# 
   881  0693                     	;# 
   882  0694                     	;# 
   883  070C                     	;# 
   884  070D                     	;# 
   885  070E                     	;# 
   886  070F                     	;# 
   887  0710                     	;# 
   888  0711                     	;# 
   889  0712                     	;# 
   890  0713                     	;# 
   891  0714                     	;# 
   892  0716                     	;# 
   893  0717                     	;# 
   894  0718                     	;# 
   895  0719                     	;# 
   896  071A                     	;# 
   897  071B                     	;# 
   898  071C                     	;# 
   899  071D                     	;# 
   900  071E                     	;# 
   901  0796                     	;# 
   902  0797                     	;# 
   903  0798                     	;# 
   904  0799                     	;# 
   905  079A                     	;# 
   906  079B                     	;# 
   907  080C                     	;# 
   908  080D                     	;# 
   909  080E                     	;# 
   910  080F                     	;# 
   911  0810                     	;# 
   912  0811                     	;# 
   913  0812                     	;# 
   914  0813                     	;# 
   915  0814                     	;# 
   916  081A                     	;# 
   917  081B                     	;# 
   918  081C                     	;# 
   919  081D                     	;# 
   920  081E                     	;# 
   921  081F                     	;# 
   922  088C                     	;# 
   923  088D                     	;# 
   924  088E                     	;# 
   925  088F                     	;# 
   926  0890                     	;# 
   927  0891                     	;# 
   928  0892                     	;# 
   929  0893                     	;# 
   930  0895                     	;# 
   931  0896                     	;# 
   932  0897                     	;# 
   933  0898                     	;# 
   934  0899                     	;# 
   935  089A                     	;# 
   936  089B                     	;# 
   937  090C                     	;# 
   938  090E                     	;# 
   939  090F                     	;# 
   940  091F                     	;# 
   941  091F                     	;# 
   942  098F                     	;# 
   943  098F                     	;# 
   944  0990                     	;# 
   945  0991                     	;# 
   946  0992                     	;# 
   947  0993                     	;# 
   948  0994                     	;# 
   949  0995                     	;# 
   950  0996                     	;# 
   951  0997                     	;# 
   952  0E0F                     	;# 
   953  0E10                     	;# 
   954  0E11                     	;# 
   955  0E12                     	;# 
   956  0E13                     	;# 
   957  0E14                     	;# 
   958  0E15                     	;# 
   959  0E16                     	;# 
   960  0E17                     	;# 
   961  0E18                     	;# 
   962  0E19                     	;# 
   963  0E1A                     	;# 
   964  0E1B                     	;# 
   965  0E1C                     	;# 
   966  0E1D                     	;# 
   967  0E1E                     	;# 
   968  0E1F                     	;# 
   969  0E20                     	;# 
   970  0E21                     	;# 
   971  0E22                     	;# 
   972  0E23                     	;# 
   973  0E24                     	;# 
   974  0E25                     	;# 
   975  0E26                     	;# 
   976  0E27                     	;# 
   977  0E28                     	;# 
   978  0E29                     	;# 
   979  0E2A                     	;# 
   980  0E2B                     	;# 
   981  0E2C                     	;# 
   982  0E2D                     	;# 
   983  0E2E                     	;# 
   984  0E2F                     	;# 
   985  0E30                     	;# 
   986  0E31                     	;# 
   987  0E32                     	;# 
   988  0E33                     	;# 
   989  0E34                     	;# 
   990  0E35                     	;# 
   991  0E36                     	;# 
   992  0E37                     	;# 
   993  0E8F                     	;# 
   994  0E90                     	;# 
   995  0E91                     	;# 
   996  0E92                     	;# 
   997  0E93                     	;# 
   998  0E94                     	;# 
   999  0E95                     	;# 
  1000  0E96                     	;# 
  1001  0E97                     	;# 
  1002  0E9C                     	;# 
  1003  0E9D                     	;# 
  1004  0E9E                     	;# 
  1005  0EA1                     	;# 
  1006  0EA2                     	;# 
  1007  0EA3                     	;# 
  1008  0EA4                     	;# 
  1009  0EA5                     	;# 
  1010  0EA9                     	;# 
  1011  0EAA                     	;# 
  1012  0EAB                     	;# 
  1013  0EAC                     	;# 
  1014  0EB1                     	;# 
  1015  0EB2                     	;# 
  1016  0EB3                     	;# 
  1017  0EB8                     	;# 
  1018  0EB9                     	;# 
  1019  0EBA                     	;# 
  1020  0EBB                     	;# 
  1021  0EBC                     	;# 
  1022  0EBD                     	;# 
  1023  0EBE                     	;# 
  1024  0EC3                     	;# 
  1025  0EC5                     	;# 
  1026  0EC6                     	;# 
  1027  0EC7                     	;# 
  1028  0EC8                     	;# 
  1029  0EC9                     	;# 
  1030  0ECA                     	;# 
  1031  0ECB                     	;# 
  1032  0ECC                     	;# 
  1033  0F10                     	;# 
  1034  0F11                     	;# 
  1035  0F12                     	;# 
  1036  0F13                     	;# 
  1037  0F14                     	;# 
  1038  0F15                     	;# 
  1039  0F16                     	;# 
  1040  0F17                     	;# 
  1041  0F18                     	;# 
  1042  0F19                     	;# 
  1043  0F1A                     	;# 
  1044  0F1B                     	;# 
  1045  0F1C                     	;# 
  1046  0F1D                     	;# 
  1047  0F1E                     	;# 
  1048  0F1F                     	;# 
  1049  0F20                     	;# 
  1050  0F21                     	;# 
  1051  0F22                     	;# 
  1052  0F23                     	;# 
  1053  0F24                     	;# 
  1054  0F25                     	;# 
  1055  0F26                     	;# 
  1056  0F27                     	;# 
  1057  0F38                     	;# 
  1058  0F39                     	;# 
  1059  0F3A                     	;# 
  1060  0F3B                     	;# 
  1061  0F3C                     	;# 
  1062  0F3D                     	;# 
  1063  0F3E                     	;# 
  1064  0F3F                     	;# 
  1065  0F40                     	;# 
  1066  0F41                     	;# 
  1067  0F43                     	;# 
  1068  0F44                     	;# 
  1069  0F45                     	;# 
  1070  0F46                     	;# 
  1071  0F47                     	;# 
  1072  0F48                     	;# 
  1073  0F49                     	;# 
  1074  0F4A                     	;# 
  1075  0F4B                     	;# 
  1076  0F4C                     	;# 
  1077  0F4E                     	;# 
  1078  0F4F                     	;# 
  1079  0F50                     	;# 
  1080  0F51                     	;# 
  1081  0F52                     	;# 
  1082  0F53                     	;# 
  1083  0F54                     	;# 
  1084  0F55                     	;# 
  1085  0F56                     	;# 
  1086  0F57                     	;# 
  1087  0F65                     	;# 
  1088  0F68                     	;# 
  1089  0F69                     	;# 
  1090  0F6A                     	;# 
  1091  0F6B                     	;# 
  1092  0FE4                     	;# 
  1093  0FE5                     	;# 
  1094  0FE6                     	;# 
  1095  0FE7                     	;# 
  1096  0FE8                     	;# 
  1097  0FE9                     	;# 
  1098  0FEA                     	;# 
  1099  0FEB                     	;# 
  1100  0FED                     	;# 
  1101  0FEE                     	;# 
  1102  0FEF                     	;# 
  1103  0000                     	;# 
  1104  0001                     	;# 
  1105  0002                     	;# 
  1106  0003                     	;# 
  1107  0004                     	;# 
  1108  0005                     	;# 
  1109  0006                     	;# 
  1110  0007                     	;# 
  1111  0008                     	;# 
  1112  0009                     	;# 
  1113  000A                     	;# 
  1114  000B                     	;# 
  1115  000C                     	;# 
  1116  000D                     	;# 
  1117  000E                     	;# 
  1118  0010                     	;# 
  1119  0011                     	;# 
  1120  0012                     	;# 
  1121  0013                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  001C                     	;# 
  1126  001C                     	;# 
  1127  001D                     	;# 
  1128  001D                     	;# 
  1129  001E                     	;# 
  1130  001F                     	;# 
  1131  008C                     	;# 
  1132  008C                     	;# 
  1133  008D                     	;# 
  1134  008E                     	;# 
  1135  008E                     	;# 
  1136  008F                     	;# 
  1137  0090                     	;# 
  1138  0090                     	;# 
  1139  0091                     	;# 
  1140  0093                     	;# 
  1141  0094                     	;# 
  1142  0095                     	;# 
  1143  0096                     	;# 
  1144  0097                     	;# 
  1145  0098                     	;# 
  1146  0099                     	;# 
  1147  009A                     	;# 
  1148  009B                     	;# 
  1149  009C                     	;# 
  1150  009D                     	;# 
  1151  009E                     	;# 
  1152  010C                     	;# 
  1153  010D                     	;# 
  1154  010E                     	;# 
  1155  010E                     	;# 
  1156  010F                     	;# 
  1157  0110                     	;# 
  1158  0110                     	;# 
  1159  0111                     	;# 
  1160  0112                     	;# 
  1161  0112                     	;# 
  1162  0113                     	;# 
  1163  0114                     	;# 
  1164  0114                     	;# 
  1165  0115                     	;# 
  1166  0116                     	;# 
  1167  0116                     	;# 
  1168  0117                     	;# 
  1169  0119                     	;# 
  1170  0119                     	;# 
  1171  0119                     	;# 
  1172  011A                     	;# 
  1173  011A                     	;# 
  1174  011A                     	;# 
  1175  011B                     	;# 
  1176  011B                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011C                     	;# 
  1181  011C                     	;# 
  1182  011C                     	;# 
  1183  011D                     	;# 
  1184  011D                     	;# 
  1185  011D                     	;# 
  1186  011E                     	;# 
  1187  011E                     	;# 
  1188  011E                     	;# 
  1189  011F                     	;# 
  1190  011F                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  018C                     	;# 
  1195  018D                     	;# 
  1196  018E                     	;# 
  1197  018F                     	;# 
  1198  0190                     	;# 
  1199  0191                     	;# 
  1200  0192                     	;# 
  1201  0196                     	;# 
  1202  0197                     	;# 
  1203  0198                     	;# 
  1204  0199                     	;# 
  1205  019A                     	;# 
  1206  019B                     	;# 
  1207  019C                     	;# 
  1208  020C                     	;# 
  1209  020C                     	;# 
  1210  020D                     	;# 
  1211  020E                     	;# 
  1212  020F                     	;# 
  1213  020F                     	;# 
  1214  0210                     	;# 
  1215  0210                     	;# 
  1216  0211                     	;# 
  1217  0211                     	;# 
  1218  0212                     	;# 
  1219  0212                     	;# 
  1220  0213                     	;# 
  1221  0214                     	;# 
  1222  0215                     	;# 
  1223  0215                     	;# 
  1224  0216                     	;# 
  1225  0216                     	;# 
  1226  0217                     	;# 
  1227  0217                     	;# 
  1228  0218                     	;# 
  1229  0218                     	;# 
  1230  0219                     	;# 
  1231  021A                     	;# 
  1232  021B                     	;# 
  1233  021B                     	;# 
  1234  021C                     	;# 
  1235  021C                     	;# 
  1236  021D                     	;# 
  1237  021D                     	;# 
  1238  021E                     	;# 
  1239  021F                     	;# 
  1240  028C                     	;# 
  1241  028C                     	;# 
  1242  028D                     	;# 
  1243  028D                     	;# 
  1244  028E                     	;# 
  1245  028F                     	;# 
  1246  0290                     	;# 
  1247  0290                     	;# 
  1248  0291                     	;# 
  1249  0292                     	;# 
  1250  0292                     	;# 
  1251  0293                     	;# 
  1252  0293                     	;# 
  1253  0294                     	;# 
  1254  0295                     	;# 
  1255  0296                     	;# 
  1256  0296                     	;# 
  1257  0297                     	;# 
  1258  0298                     	;# 
  1259  0298                     	;# 
  1260  0299                     	;# 
  1261  0299                     	;# 
  1262  029A                     	;# 
  1263  029B                     	;# 
  1264  029C                     	;# 
  1265  029C                     	;# 
  1266  029D                     	;# 
  1267  030C                     	;# 
  1268  030C                     	;# 
  1269  030D                     	;# 
  1270  030E                     	;# 
  1271  030F                     	;# 
  1272  0310                     	;# 
  1273  0310                     	;# 
  1274  0311                     	;# 
  1275  0312                     	;# 
  1276  0313                     	;# 
  1277  0314                     	;# 
  1278  0314                     	;# 
  1279  0315                     	;# 
  1280  0316                     	;# 
  1281  0317                     	;# 
  1282  0318                     	;# 
  1283  0318                     	;# 
  1284  0319                     	;# 
  1285  031A                     	;# 
  1286  031B                     	;# 
  1287  031C                     	;# 
  1288  031C                     	;# 
  1289  031D                     	;# 
  1290  031E                     	;# 
  1291  031F                     	;# 
  1292  038C                     	;# 
  1293  038D                     	;# 
  1294  038E                     	;# 
  1295  0390                     	;# 
  1296  0391                     	;# 
  1297  0392                     	;# 
  1298  040C                     	;# 
  1299  040D                     	;# 
  1300  040E                     	;# 
  1301  040F                     	;# 
  1302  0410                     	;# 
  1303  0411                     	;# 
  1304  0416                     	;# 
  1305  0416                     	;# 
  1306  0417                     	;# 
  1307  0418                     	;# 
  1308  0418                     	;# 
  1309  0419                     	;# 
  1310  041A                     	;# 
  1311  041A                     	;# 
  1312  041B                     	;# 
  1313  041C                     	;# 
  1314  041C                     	;# 
  1315  041D                     	;# 
  1316  041E                     	;# 
  1317  041F                     	;# 
  1318  048C                     	;# 
  1319  048C                     	;# 
  1320  048D                     	;# 
  1321  048E                     	;# 
  1322  048F                     	;# 
  1323  048F                     	;# 
  1324  0490                     	;# 
  1325  0491                     	;# 
  1326  0492                     	;# 
  1327  0492                     	;# 
  1328  0493                     	;# 
  1329  0494                     	;# 
  1330  0495                     	;# 
  1331  0495                     	;# 
  1332  0496                     	;# 
  1333  0497                     	;# 
  1334  0498                     	;# 
  1335  0499                     	;# 
  1336  049A                     	;# 
  1337  049B                     	;# 
  1338  049C                     	;# 
  1339  049D                     	;# 
  1340  050C                     	;# 
  1341  050C                     	;# 
  1342  050D                     	;# 
  1343  050E                     	;# 
  1344  050F                     	;# 
  1345  050F                     	;# 
  1346  0510                     	;# 
  1347  0511                     	;# 
  1348  0512                     	;# 
  1349  0512                     	;# 
  1350  0513                     	;# 
  1351  0514                     	;# 
  1352  0515                     	;# 
  1353  0515                     	;# 
  1354  0516                     	;# 
  1355  0517                     	;# 
  1356  0518                     	;# 
  1357  0519                     	;# 
  1358  051A                     	;# 
  1359  051B                     	;# 
  1360  051C                     	;# 
  1361  051D                     	;# 
  1362  058C                     	;# 
  1363  058C                     	;# 
  1364  058D                     	;# 
  1365  058E                     	;# 
  1366  058F                     	;# 
  1367  058F                     	;# 
  1368  0590                     	;# 
  1369  0591                     	;# 
  1370  0592                     	;# 
  1371  0593                     	;# 
  1372  060C                     	;# 
  1373  060D                     	;# 
  1374  060E                     	;# 
  1375  060F                     	;# 
  1376  0610                     	;# 
  1377  0611                     	;# 
  1378  0612                     	;# 
  1379  0613                     	;# 
  1380  0614                     	;# 
  1381  0616                     	;# 
  1382  0617                     	;# 
  1383  0618                     	;# 
  1384  0619                     	;# 
  1385  061A                     	;# 
  1386  061B                     	;# 
  1387  061C                     	;# 
  1388  061D                     	;# 
  1389  061E                     	;# 
  1390  068C                     	;# 
  1391  068D                     	;# 
  1392  068E                     	;# 
  1393  068F                     	;# 
  1394  0690                     	;# 
  1395  0691                     	;# 
  1396  0692                     	;# 
  1397  0693                     	;# 
  1398  0694                     	;# 
  1399  070C                     	;# 
  1400  070D                     	;# 
  1401  070E                     	;# 
  1402  070F                     	;# 
  1403  0710                     	;# 
  1404  0711                     	;# 
  1405  0712                     	;# 
  1406  0713                     	;# 
  1407  0714                     	;# 
  1408  0716                     	;# 
  1409  0717                     	;# 
  1410  0718                     	;# 
  1411  0719                     	;# 
  1412  071A                     	;# 
  1413  071B                     	;# 
  1414  071C                     	;# 
  1415  071D                     	;# 
  1416  071E                     	;# 
  1417  0796                     	;# 
  1418  0797                     	;# 
  1419  0798                     	;# 
  1420  0799                     	;# 
  1421  079A                     	;# 
  1422  079B                     	;# 
  1423  080C                     	;# 
  1424  080D                     	;# 
  1425  080E                     	;# 
  1426  080F                     	;# 
  1427  0810                     	;# 
  1428  0811                     	;# 
  1429  0812                     	;# 
  1430  0813                     	;# 
  1431  0814                     	;# 
  1432  081A                     	;# 
  1433  081B                     	;# 
  1434  081C                     	;# 
  1435  081D                     	;# 
  1436  081E                     	;# 
  1437  081F                     	;# 
  1438  088C                     	;# 
  1439  088D                     	;# 
  1440  088E                     	;# 
  1441  088F                     	;# 
  1442  0890                     	;# 
  1443  0891                     	;# 
  1444  0892                     	;# 
  1445  0893                     	;# 
  1446  0895                     	;# 
  1447  0896                     	;# 
  1448  0897                     	;# 
  1449  0898                     	;# 
  1450  0899                     	;# 
  1451  089A                     	;# 
  1452  089B                     	;# 
  1453  090C                     	;# 
  1454  090E                     	;# 
  1455  090F                     	;# 
  1456  091F                     	;# 
  1457  091F                     	;# 
  1458  098F                     	;# 
  1459  098F                     	;# 
  1460  0990                     	;# 
  1461  0991                     	;# 
  1462  0992                     	;# 
  1463  0993                     	;# 
  1464  0994                     	;# 
  1465  0995                     	;# 
  1466  0996                     	;# 
  1467  0997                     	;# 
  1468  0E0F                     	;# 
  1469  0E10                     	;# 
  1470  0E11                     	;# 
  1471  0E12                     	;# 
  1472  0E13                     	;# 
  1473  0E14                     	;# 
  1474  0E15                     	;# 
  1475  0E16                     	;# 
  1476  0E17                     	;# 
  1477  0E18                     	;# 
  1478  0E19                     	;# 
  1479  0E1A                     	;# 
  1480  0E1B                     	;# 
  1481  0E1C                     	;# 
  1482  0E1D                     	;# 
  1483  0E1E                     	;# 
  1484  0E1F                     	;# 
  1485  0E20                     	;# 
  1486  0E21                     	;# 
  1487  0E22                     	;# 
  1488  0E23                     	;# 
  1489  0E24                     	;# 
  1490  0E25                     	;# 
  1491  0E26                     	;# 
  1492  0E27                     	;# 
  1493  0E28                     	;# 
  1494  0E29                     	;# 
  1495  0E2A                     	;# 
  1496  0E2B                     	;# 
  1497  0E2C                     	;# 
  1498  0E2D                     	;# 
  1499  0E2E                     	;# 
  1500  0E2F                     	;# 
  1501  0E30                     	;# 
  1502  0E31                     	;# 
  1503  0E32                     	;# 
  1504  0E33                     	;# 
  1505  0E34                     	;# 
  1506  0E35                     	;# 
  1507  0E36                     	;# 
  1508  0E37                     	;# 
  1509  0E8F                     	;# 
  1510  0E90                     	;# 
  1511  0E91                     	;# 
  1512  0E92                     	;# 
  1513  0E93                     	;# 
  1514  0E94                     	;# 
  1515  0E95                     	;# 
  1516  0E96                     	;# 
  1517  0E97                     	;# 
  1518  0E9C                     	;# 
  1519  0E9D                     	;# 
  1520  0E9E                     	;# 
  1521  0EA1                     	;# 
  1522  0EA2                     	;# 
  1523  0EA3                     	;# 
  1524  0EA4                     	;# 
  1525  0EA5                     	;# 
  1526  0EA9                     	;# 
  1527  0EAA                     	;# 
  1528  0EAB                     	;# 
  1529  0EAC                     	;# 
  1530  0EB1                     	;# 
  1531  0EB2                     	;# 
  1532  0EB3                     	;# 
  1533  0EB8                     	;# 
  1534  0EB9                     	;# 
  1535  0EBA                     	;# 
  1536  0EBB                     	;# 
  1537  0EBC                     	;# 
  1538  0EBD                     	;# 
  1539  0EBE                     	;# 
  1540  0EC3                     	;# 
  1541  0EC5                     	;# 
  1542  0EC6                     	;# 
  1543  0EC7                     	;# 
  1544  0EC8                     	;# 
  1545  0EC9                     	;# 
  1546  0ECA                     	;# 
  1547  0ECB                     	;# 
  1548  0ECC                     	;# 
  1549  0F10                     	;# 
  1550  0F11                     	;# 
  1551  0F12                     	;# 
  1552  0F13                     	;# 
  1553  0F14                     	;# 
  1554  0F15                     	;# 
  1555  0F16                     	;# 
  1556  0F17                     	;# 
  1557  0F18                     	;# 
  1558  0F19                     	;# 
  1559  0F1A                     	;# 
  1560  0F1B                     	;# 
  1561  0F1C                     	;# 
  1562  0F1D                     	;# 
  1563  0F1E                     	;# 
  1564  0F1F                     	;# 
  1565  0F20                     	;# 
  1566  0F21                     	;# 
  1567  0F22                     	;# 
  1568  0F23                     	;# 
  1569  0F24                     	;# 
  1570  0F25                     	;# 
  1571  0F26                     	;# 
  1572  0F27                     	;# 
  1573  0F38                     	;# 
  1574  0F39                     	;# 
  1575  0F3A                     	;# 
  1576  0F3B                     	;# 
  1577  0F3C                     	;# 
  1578  0F3D                     	;# 
  1579  0F3E                     	;# 
  1580  0F3F                     	;# 
  1581  0F40                     	;# 
  1582  0F41                     	;# 
  1583  0F43                     	;# 
  1584  0F44                     	;# 
  1585  0F45                     	;# 
  1586  0F46                     	;# 
  1587  0F47                     	;# 
  1588  0F48                     	;# 
  1589  0F49                     	;# 
  1590  0F4A                     	;# 
  1591  0F4B                     	;# 
  1592  0F4C                     	;# 
  1593  0F4E                     	;# 
  1594  0F4F                     	;# 
  1595  0F50                     	;# 
  1596  0F51                     	;# 
  1597  0F52                     	;# 
  1598  0F53                     	;# 
  1599  0F54                     	;# 
  1600  0F55                     	;# 
  1601  0F56                     	;# 
  1602  0F57                     	;# 
  1603  0F65                     	;# 
  1604  0F68                     	;# 
  1605  0F69                     	;# 
  1606  0F6A                     	;# 
  1607  0F6B                     	;# 
  1608  0FE4                     	;# 
  1609  0FE5                     	;# 
  1610  0FE6                     	;# 
  1611  0FE7                     	;# 
  1612  0FE8                     	;# 
  1613  0FE9                     	;# 
  1614  0FEA                     	;# 
  1615  0FEB                     	;# 
  1616  0FED                     	;# 
  1617  0FEE                     	;# 
  1618  0FEF                     	;# 
  1619  0000                     	;# 
  1620  0001                     	;# 
  1621  0002                     	;# 
  1622  0003                     	;# 
  1623  0004                     	;# 
  1624  0005                     	;# 
  1625  0006                     	;# 
  1626  0007                     	;# 
  1627  0008                     	;# 
  1628  0009                     	;# 
  1629  000A                     	;# 
  1630  000B                     	;# 
  1631  000C                     	;# 
  1632  000D                     	;# 
  1633  000E                     	;# 
  1634  0010                     	;# 
  1635  0011                     	;# 
  1636  0012                     	;# 
  1637  0013                     	;# 
  1638  0016                     	;# 
  1639  0017                     	;# 
  1640  0018                     	;# 
  1641  001C                     	;# 
  1642  001C                     	;# 
  1643  001D                     	;# 
  1644  001D                     	;# 
  1645  001E                     	;# 
  1646  001F                     	;# 
  1647  008C                     	;# 
  1648  008C                     	;# 
  1649  008D                     	;# 
  1650  008E                     	;# 
  1651  008E                     	;# 
  1652  008F                     	;# 
  1653  0090                     	;# 
  1654  0090                     	;# 
  1655  0091                     	;# 
  1656  0093                     	;# 
  1657  0094                     	;# 
  1658  0095                     	;# 
  1659  0096                     	;# 
  1660  0097                     	;# 
  1661  0098                     	;# 
  1662  0099                     	;# 
  1663  009A                     	;# 
  1664  009B                     	;# 
  1665  009C                     	;# 
  1666  009D                     	;# 
  1667  009E                     	;# 
  1668  010C                     	;# 
  1669  010D                     	;# 
  1670  010E                     	;# 
  1671  010E                     	;# 
  1672  010F                     	;# 
  1673  0110                     	;# 
  1674  0110                     	;# 
  1675  0111                     	;# 
  1676  0112                     	;# 
  1677  0112                     	;# 
  1678  0113                     	;# 
  1679  0114                     	;# 
  1680  0114                     	;# 
  1681  0115                     	;# 
  1682  0116                     	;# 
  1683  0116                     	;# 
  1684  0117                     	;# 
  1685  0119                     	;# 
  1686  0119                     	;# 
  1687  0119                     	;# 
  1688  011A                     	;# 
  1689  011A                     	;# 
  1690  011A                     	;# 
  1691  011B                     	;# 
  1692  011B                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011B                     	;# 
  1696  011C                     	;# 
  1697  011C                     	;# 
  1698  011C                     	;# 
  1699  011D                     	;# 
  1700  011D                     	;# 
  1701  011D                     	;# 
  1702  011E                     	;# 
  1703  011E                     	;# 
  1704  011E                     	;# 
  1705  011F                     	;# 
  1706  011F                     	;# 
  1707  011F                     	;# 
  1708  011F                     	;# 
  1709  011F                     	;# 
  1710  018C                     	;# 
  1711  018D                     	;# 
  1712  018E                     	;# 
  1713  018F                     	;# 
  1714  0190                     	;# 
  1715  0191                     	;# 
  1716  0192                     	;# 
  1717  0196                     	;# 
  1718  0197                     	;# 
  1719  0198                     	;# 
  1720  0199                     	;# 
  1721  019A                     	;# 
  1722  019B                     	;# 
  1723  019C                     	;# 
  1724  020C                     	;# 
  1725  020C                     	;# 
  1726  020D                     	;# 
  1727  020E                     	;# 
  1728  020F                     	;# 
  1729  020F                     	;# 
  1730  0210                     	;# 
  1731  0210                     	;# 
  1732  0211                     	;# 
  1733  0211                     	;# 
  1734  0212                     	;# 
  1735  0212                     	;# 
  1736  0213                     	;# 
  1737  0214                     	;# 
  1738  0215                     	;# 
  1739  0215                     	;# 
  1740  0216                     	;# 
  1741  0216                     	;# 
  1742  0217                     	;# 
  1743  0217                     	;# 
  1744  0218                     	;# 
  1745  0218                     	;# 
  1746  0219                     	;# 
  1747  021A                     	;# 
  1748  021B                     	;# 
  1749  021B                     	;# 
  1750  021C                     	;# 
  1751  021C                     	;# 
  1752  021D                     	;# 
  1753  021D                     	;# 
  1754  021E                     	;# 
  1755  021F                     	;# 
  1756  028C                     	;# 
  1757  028C                     	;# 
  1758  028D                     	;# 
  1759  028D                     	;# 
  1760  028E                     	;# 
  1761  028F                     	;# 
  1762  0290                     	;# 
  1763  0290                     	;# 
  1764  0291                     	;# 
  1765  0292                     	;# 
  1766  0292                     	;# 
  1767  0293                     	;# 
  1768  0293                     	;# 
  1769  0294                     	;# 
  1770  0295                     	;# 
  1771  0296                     	;# 
  1772  0296                     	;# 
  1773  0297                     	;# 
  1774  0298                     	;# 
  1775  0298                     	;# 
  1776  0299                     	;# 
  1777  0299                     	;# 
  1778  029A                     	;# 
  1779  029B                     	;# 
  1780  029C                     	;# 
  1781  029C                     	;# 
  1782  029D                     	;# 
  1783  030C                     	;# 
  1784  030C                     	;# 
  1785  030D                     	;# 
  1786  030E                     	;# 
  1787  030F                     	;# 
  1788  0310                     	;# 
  1789  0310                     	;# 
  1790  0311                     	;# 
  1791  0312                     	;# 
  1792  0313                     	;# 
  1793  0314                     	;# 
  1794  0314                     	;# 
  1795  0315                     	;# 
  1796  0316                     	;# 
  1797  0317                     	;# 
  1798  0318                     	;# 
  1799  0318                     	;# 
  1800  0319                     	;# 
  1801  031A                     	;# 
  1802  031B                     	;# 
  1803  031C                     	;# 
  1804  031C                     	;# 
  1805  031D                     	;# 
  1806  031E                     	;# 
  1807  031F                     	;# 
  1808  038C                     	;# 
  1809  038D                     	;# 
  1810  038E                     	;# 
  1811  0390                     	;# 
  1812  0391                     	;# 
  1813  0392                     	;# 
  1814  040C                     	;# 
  1815  040D                     	;# 
  1816  040E                     	;# 
  1817  040F                     	;# 
  1818  0410                     	;# 
  1819  0411                     	;# 
  1820  0416                     	;# 
  1821  0416                     	;# 
  1822  0417                     	;# 
  1823  0418                     	;# 
  1824  0418                     	;# 
  1825  0419                     	;# 
  1826  041A                     	;# 
  1827  041A                     	;# 
  1828  041B                     	;# 
  1829  041C                     	;# 
  1830  041C                     	;# 
  1831  041D                     	;# 
  1832  041E                     	;# 
  1833  041F                     	;# 
  1834  048C                     	;# 
  1835  048C                     	;# 
  1836  048D                     	;# 
  1837  048E                     	;# 
  1838  048F                     	;# 
  1839  048F                     	;# 
  1840  0490                     	;# 
  1841  0491                     	;# 
  1842  0492                     	;# 
  1843  0492                     	;# 
  1844  0493                     	;# 
  1845  0494                     	;# 
  1846  0495                     	;# 
  1847  0495                     	;# 
  1848  0496                     	;# 
  1849  0497                     	;# 
  1850  0498                     	;# 
  1851  0499                     	;# 
  1852  049A                     	;# 
  1853  049B                     	;# 
  1854  049C                     	;# 
  1855  049D                     	;# 
  1856  050C                     	;# 
  1857  050C                     	;# 
  1858  050D                     	;# 
  1859  050E                     	;# 
  1860  050F                     	;# 
  1861  050F                     	;# 
  1862  0510                     	;# 
  1863  0511                     	;# 
  1864  0512                     	;# 
  1865  0512                     	;# 
  1866  0513                     	;# 
  1867  0514                     	;# 
  1868  0515                     	;# 
  1869  0515                     	;# 
  1870  0516                     	;# 
  1871  0517                     	;# 
  1872  0518                     	;# 
  1873  0519                     	;# 
  1874  051A                     	;# 
  1875  051B                     	;# 
  1876  051C                     	;# 
  1877  051D                     	;# 
  1878  058C                     	;# 
  1879  058C                     	;# 
  1880  058D                     	;# 
  1881  058E                     	;# 
  1882  058F                     	;# 
  1883  058F                     	;# 
  1884  0590                     	;# 
  1885  0591                     	;# 
  1886  0592                     	;# 
  1887  0593                     	;# 
  1888  060C                     	;# 
  1889  060D                     	;# 
  1890  060E                     	;# 
  1891  060F                     	;# 
  1892  0610                     	;# 
  1893  0611                     	;# 
  1894  0612                     	;# 
  1895  0613                     	;# 
  1896  0614                     	;# 
  1897  0616                     	;# 
  1898  0617                     	;# 
  1899  0618                     	;# 
  1900  0619                     	;# 
  1901  061A                     	;# 
  1902  061B                     	;# 
  1903  061C                     	;# 
  1904  061D                     	;# 
  1905  061E                     	;# 
  1906  068C                     	;# 
  1907  068D                     	;# 
  1908  068E                     	;# 
  1909  068F                     	;# 
  1910  0690                     	;# 
  1911  0691                     	;# 
  1912  0692                     	;# 
  1913  0693                     	;# 
  1914  0694                     	;# 
  1915  070C                     	;# 
  1916  070D                     	;# 
  1917  070E                     	;# 
  1918  070F                     	;# 
  1919  0710                     	;# 
  1920  0711                     	;# 
  1921  0712                     	;# 
  1922  0713                     	;# 
  1923  0714                     	;# 
  1924  0716                     	;# 
  1925  0717                     	;# 
  1926  0718                     	;# 
  1927  0719                     	;# 
  1928  071A                     	;# 
  1929  071B                     	;# 
  1930  071C                     	;# 
  1931  071D                     	;# 
  1932  071E                     	;# 
  1933  0796                     	;# 
  1934  0797                     	;# 
  1935  0798                     	;# 
  1936  0799                     	;# 
  1937  079A                     	;# 
  1938  079B                     	;# 
  1939  080C                     	;# 
  1940  080D                     	;# 
  1941  080E                     	;# 
  1942  080F                     	;# 
  1943  0810                     	;# 
  1944  0811                     	;# 
  1945  0812                     	;# 
  1946  0813                     	;# 
  1947  0814                     	;# 
  1948  081A                     	;# 
  1949  081B                     	;# 
  1950  081C                     	;# 
  1951  081D                     	;# 
  1952  081E                     	;# 
  1953  081F                     	;# 
  1954  088C                     	;# 
  1955  088D                     	;# 
  1956  088E                     	;# 
  1957  088F                     	;# 
  1958  0890                     	;# 
  1959  0891                     	;# 
  1960  0892                     	;# 
  1961  0893                     	;# 
  1962  0895                     	;# 
  1963  0896                     	;# 
  1964  0897                     	;# 
  1965  0898                     	;# 
  1966  0899                     	;# 
  1967  089A                     	;# 
  1968  089B                     	;# 
  1969  090C                     	;# 
  1970  090E                     	;# 
  1971  090F                     	;# 
  1972  091F                     	;# 
  1973  091F                     	;# 
  1974  098F                     	;# 
  1975  098F                     	;# 
  1976  0990                     	;# 
  1977  0991                     	;# 
  1978  0992                     	;# 
  1979  0993                     	;# 
  1980  0994                     	;# 
  1981  0995                     	;# 
  1982  0996                     	;# 
  1983  0997                     	;# 
  1984  0E0F                     	;# 
  1985  0E10                     	;# 
  1986  0E11                     	;# 
  1987  0E12                     	;# 
  1988  0E13                     	;# 
  1989  0E14                     	;# 
  1990  0E15                     	;# 
  1991  0E16                     	;# 
  1992  0E17                     	;# 
  1993  0E18                     	;# 
  1994  0E19                     	;# 
  1995  0E1A                     	;# 
  1996  0E1B                     	;# 
  1997  0E1C                     	;# 
  1998  0E1D                     	;# 
  1999  0E1E                     	;# 
  2000  0E1F                     	;# 
  2001  0E20                     	;# 
  2002  0E21                     	;# 
  2003  0E22                     	;# 
  2004  0E23                     	;# 
  2005  0E24                     	;# 
  2006  0E25                     	;# 
  2007  0E26                     	;# 
  2008  0E27                     	;# 
  2009  0E28                     	;# 
  2010  0E29                     	;# 
  2011  0E2A                     	;# 
  2012  0E2B                     	;# 
  2013  0E2C                     	;# 
  2014  0E2D                     	;# 
  2015  0E2E                     	;# 
  2016  0E2F                     	;# 
  2017  0E30                     	;# 
  2018  0E31                     	;# 
  2019  0E32                     	;# 
  2020  0E33                     	;# 
  2021  0E34                     	;# 
  2022  0E35                     	;# 
  2023  0E36                     	;# 
  2024  0E37                     	;# 
  2025  0E8F                     	;# 
  2026  0E90                     	;# 
  2027  0E91                     	;# 
  2028  0E92                     	;# 
  2029  0E93                     	;# 
  2030  0E94                     	;# 
  2031  0E95                     	;# 
  2032  0E96                     	;# 
  2033  0E97                     	;# 
  2034  0E9C                     	;# 
  2035  0E9D                     	;# 
  2036  0E9E                     	;# 
  2037  0EA1                     	;# 
  2038  0EA2                     	;# 
  2039  0EA3                     	;# 
  2040  0EA4                     	;# 
  2041  0EA5                     	;# 
  2042  0EA9                     	;# 
  2043  0EAA                     	;# 
  2044  0EAB                     	;# 
  2045  0EAC                     	;# 
  2046  0EB1                     	;# 
  2047  0EB2                     	;# 
  2048  0EB3                     	;# 
  2049  0EB8                     	;# 
  2050  0EB9                     	;# 
  2051  0EBA                     	;# 
  2052  0EBB                     	;# 
  2053  0EBC                     	;# 
  2054  0EBD                     	;# 
  2055  0EBE                     	;# 
  2056  0EC3                     	;# 
  2057  0EC5                     	;# 
  2058  0EC6                     	;# 
  2059  0EC7                     	;# 
  2060  0EC8                     	;# 
  2061  0EC9                     	;# 
  2062  0ECA                     	;# 
  2063  0ECB                     	;# 
  2064  0ECC                     	;# 
  2065  0F10                     	;# 
  2066  0F11                     	;# 
  2067  0F12                     	;# 
  2068  0F13                     	;# 
  2069  0F14                     	;# 
  2070  0F15                     	;# 
  2071  0F16                     	;# 
  2072  0F17                     	;# 
  2073  0F18                     	;# 
  2074  0F19                     	;# 
  2075  0F1A                     	;# 
  2076  0F1B                     	;# 
  2077  0F1C                     	;# 
  2078  0F1D                     	;# 
  2079  0F1E                     	;# 
  2080  0F1F                     	;# 
  2081  0F20                     	;# 
  2082  0F21                     	;# 
  2083  0F22                     	;# 
  2084  0F23                     	;# 
  2085  0F24                     	;# 
  2086  0F25                     	;# 
  2087  0F26                     	;# 
  2088  0F27                     	;# 
  2089  0F38                     	;# 
  2090  0F39                     	;# 
  2091  0F3A                     	;# 
  2092  0F3B                     	;# 
  2093  0F3C                     	;# 
  2094  0F3D                     	;# 
  2095  0F3E                     	;# 
  2096  0F3F                     	;# 
  2097  0F40                     	;# 
  2098  0F41                     	;# 
  2099  0F43                     	;# 
  2100  0F44                     	;# 
  2101  0F45                     	;# 
  2102  0F46                     	;# 
  2103  0F47                     	;# 
  2104  0F48                     	;# 
  2105  0F49                     	;# 
  2106  0F4A                     	;# 
  2107  0F4B                     	;# 
  2108  0F4C                     	;# 
  2109  0F4E                     	;# 
  2110  0F4F                     	;# 
  2111  0F50                     	;# 
  2112  0F51                     	;# 
  2113  0F52                     	;# 
  2114  0F53                     	;# 
  2115  0F54                     	;# 
  2116  0F55                     	;# 
  2117  0F56                     	;# 
  2118  0F57                     	;# 
  2119  0F65                     	;# 
  2120  0F68                     	;# 
  2121  0F69                     	;# 
  2122  0F6A                     	;# 
  2123  0F6B                     	;# 
  2124  0FE4                     	;# 
  2125  0FE5                     	;# 
  2126  0FE6                     	;# 
  2127  0FE7                     	;# 
  2128  0FE8                     	;# 
  2129  0FE9                     	;# 
  2130  0FEA                     	;# 
  2131  0FEB                     	;# 
  2132  0FED                     	;# 
  2133  0FEE                     	;# 
  2134  0FEF                     	;# 
  2135  0000                     	;# 
  2136  0001                     	;# 
  2137  0002                     	;# 
  2138  0003                     	;# 
  2139  0004                     	;# 
  2140  0005                     	;# 
  2141  0006                     	;# 
  2142  0007                     	;# 
  2143  0008                     	;# 
  2144  0009                     	;# 
  2145  000A                     	;# 
  2146  000B                     	;# 
  2147  000C                     	;# 
  2148  000D                     	;# 
  2149  000E                     	;# 
  2150  0010                     	;# 
  2151  0011                     	;# 
  2152  0012                     	;# 
  2153  0013                     	;# 
  2154  0016                     	;# 
  2155  0017                     	;# 
  2156  0018                     	;# 
  2157  001C                     	;# 
  2158  001C                     	;# 
  2159  001D                     	;# 
  2160  001D                     	;# 
  2161  001E                     	;# 
  2162  001F                     	;# 
  2163  008C                     	;# 
  2164  008C                     	;# 
  2165  008D                     	;# 
  2166  008E                     	;# 
  2167  008E                     	;# 
  2168  008F                     	;# 
  2169  0090                     	;# 
  2170  0090                     	;# 
  2171  0091                     	;# 
  2172  0093                     	;# 
  2173  0094                     	;# 
  2174  0095                     	;# 
  2175  0096                     	;# 
  2176  0097                     	;# 
  2177  0098                     	;# 
  2178  0099                     	;# 
  2179  009A                     	;# 
  2180  009B                     	;# 
  2181  009C                     	;# 
  2182  009D                     	;# 
  2183  009E                     	;# 
  2184  010C                     	;# 
  2185  010D                     	;# 
  2186  010E                     	;# 
  2187  010E                     	;# 
  2188  010F                     	;# 
  2189  0110                     	;# 
  2190  0110                     	;# 
  2191  0111                     	;# 
  2192  0112                     	;# 
  2193  0112                     	;# 
  2194  0113                     	;# 
  2195  0114                     	;# 
  2196  0114                     	;# 
  2197  0115                     	;# 
  2198  0116                     	;# 
  2199  0116                     	;# 
  2200  0117                     	;# 
  2201  0119                     	;# 
  2202  0119                     	;# 
  2203  0119                     	;# 
  2204  011A                     	;# 
  2205  011A                     	;# 
  2206  011A                     	;# 
  2207  011B                     	;# 
  2208  011B                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011B                     	;# 
  2212  011C                     	;# 
  2213  011C                     	;# 
  2214  011C                     	;# 
  2215  011D                     	;# 
  2216  011D                     	;# 
  2217  011D                     	;# 
  2218  011E                     	;# 
  2219  011E                     	;# 
  2220  011E                     	;# 
  2221  011F                     	;# 
  2222  011F                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  011F                     	;# 
  2226  018C                     	;# 
  2227  018D                     	;# 
  2228  018E                     	;# 
  2229  018F                     	;# 
  2230  0190                     	;# 
  2231  0191                     	;# 
  2232  0192                     	;# 
  2233  0196                     	;# 
  2234  0197                     	;# 
  2235  0198                     	;# 
  2236  0199                     	;# 
  2237  019A                     	;# 
  2238  019B                     	;# 
  2239  019C                     	;# 
  2240  020C                     	;# 
  2241  020C                     	;# 
  2242  020D                     	;# 
  2243  020E                     	;# 
  2244  020F                     	;# 
  2245  020F                     	;# 
  2246  0210                     	;# 
  2247  0210                     	;# 
  2248  0211                     	;# 
  2249  0211                     	;# 
  2250  0212                     	;# 
  2251  0212                     	;# 
  2252  0213                     	;# 
  2253  0214                     	;# 
  2254  0215                     	;# 
  2255  0215                     	;# 
  2256  0216                     	;# 
  2257  0216                     	;# 
  2258  0217                     	;# 
  2259  0217                     	;# 
  2260  0218                     	;# 
  2261  0218                     	;# 
  2262  0219                     	;# 
  2263  021A                     	;# 
  2264  021B                     	;# 
  2265  021B                     	;# 
  2266  021C                     	;# 
  2267  021C                     	;# 
  2268  021D                     	;# 
  2269  021D                     	;# 
  2270  021E                     	;# 
  2271  021F                     	;# 
  2272  028C                     	;# 
  2273  028C                     	;# 
  2274  028D                     	;# 
  2275  028D                     	;# 
  2276  028E                     	;# 
  2277  028F                     	;# 
  2278  0290                     	;# 
  2279  0290                     	;# 
  2280  0291                     	;# 
  2281  0292                     	;# 
  2282  0292                     	;# 
  2283  0293                     	;# 
  2284  0293                     	;# 
  2285  0294                     	;# 
  2286  0295                     	;# 
  2287  0296                     	;# 
  2288  0296                     	;# 
  2289  0297                     	;# 
  2290  0298                     	;# 
  2291  0298                     	;# 
  2292  0299                     	;# 
  2293  0299                     	;# 
  2294  029A                     	;# 
  2295  029B                     	;# 
  2296  029C                     	;# 
  2297  029C                     	;# 
  2298  029D                     	;# 
  2299  030C                     	;# 
  2300  030C                     	;# 
  2301  030D                     	;# 
  2302  030E                     	;# 
  2303  030F                     	;# 
  2304  0310                     	;# 
  2305  0310                     	;# 
  2306  0311                     	;# 
  2307  0312                     	;# 
  2308  0313                     	;# 
  2309  0314                     	;# 
  2310  0314                     	;# 
  2311  0315                     	;# 
  2312  0316                     	;# 
  2313  0317                     	;# 
  2314  0318                     	;# 
  2315  0318                     	;# 
  2316  0319                     	;# 
  2317  031A                     	;# 
  2318  031B                     	;# 
  2319  031C                     	;# 
  2320  031C                     	;# 
  2321  031D                     	;# 
  2322  031E                     	;# 
  2323  031F                     	;# 
  2324  038C                     	;# 
  2325  038D                     	;# 
  2326  038E                     	;# 
  2327  0390                     	;# 
  2328  0391                     	;# 
  2329  0392                     	;# 
  2330  040C                     	;# 
  2331  040D                     	;# 
  2332  040E                     	;# 
  2333  040F                     	;# 
  2334  0410                     	;# 
  2335  0411                     	;# 
  2336  0416                     	;# 
  2337  0416                     	;# 
  2338  0417                     	;# 
  2339  0418                     	;# 
  2340  0418                     	;# 
  2341  0419                     	;# 
  2342  041A                     	;# 
  2343  041A                     	;# 
  2344  041B                     	;# 
  2345  041C                     	;# 
  2346  041C                     	;# 
  2347  041D                     	;# 
  2348  041E                     	;# 
  2349  041F                     	;# 
  2350  048C                     	;# 
  2351  048C                     	;# 
  2352  048D                     	;# 
  2353  048E                     	;# 
  2354  048F                     	;# 
  2355  048F                     	;# 
  2356  0490                     	;# 
  2357  0491                     	;# 
  2358  0492                     	;# 
  2359  0492                     	;# 
  2360  0493                     	;# 
  2361  0494                     	;# 
  2362  0495                     	;# 
  2363  0495                     	;# 
  2364  0496                     	;# 
  2365  0497                     	;# 
  2366  0498                     	;# 
  2367  0499                     	;# 
  2368  049A                     	;# 
  2369  049B                     	;# 
  2370  049C                     	;# 
  2371  049D                     	;# 
  2372  050C                     	;# 
  2373  050C                     	;# 
  2374  050D                     	;# 
  2375  050E                     	;# 
  2376  050F                     	;# 
  2377  050F                     	;# 
  2378  0510                     	;# 
  2379  0511                     	;# 
  2380  0512                     	;# 
  2381  0512                     	;# 
  2382  0513                     	;# 
  2383  0514                     	;# 
  2384  0515                     	;# 
  2385  0515                     	;# 
  2386  0516                     	;# 
  2387  0517                     	;# 
  2388  0518                     	;# 
  2389  0519                     	;# 
  2390  051A                     	;# 
  2391  051B                     	;# 
  2392  051C                     	;# 
  2393  051D                     	;# 
  2394  058C                     	;# 
  2395  058C                     	;# 
  2396  058D                     	;# 
  2397  058E                     	;# 
  2398  058F                     	;# 
  2399  058F                     	;# 
  2400  0590                     	;# 
  2401  0591                     	;# 
  2402  0592                     	;# 
  2403  0593                     	;# 
  2404  060C                     	;# 
  2405  060D                     	;# 
  2406  060E                     	;# 
  2407  060F                     	;# 
  2408  0610                     	;# 
  2409  0611                     	;# 
  2410  0612                     	;# 
  2411  0613                     	;# 
  2412  0614                     	;# 
  2413  0616                     	;# 
  2414  0617                     	;# 
  2415  0618                     	;# 
  2416  0619                     	;# 
  2417  061A                     	;# 
  2418  061B                     	;# 
  2419  061C                     	;# 
  2420  061D                     	;# 
  2421  061E                     	;# 
  2422  068C                     	;# 
  2423  068D                     	;# 
  2424  068E                     	;# 
  2425  068F                     	;# 
  2426  0690                     	;# 
  2427  0691                     	;# 
  2428  0692                     	;# 
  2429  0693                     	;# 
  2430  0694                     	;# 
  2431  070C                     	;# 
  2432  070D                     	;# 
  2433  070E                     	;# 
  2434  070F                     	;# 
  2435  0710                     	;# 
  2436  0711                     	;# 
  2437  0712                     	;# 
  2438  0713                     	;# 
  2439  0714                     	;# 
  2440  0716                     	;# 
  2441  0717                     	;# 
  2442  0718                     	;# 
  2443  0719                     	;# 
  2444  071A                     	;# 
  2445  071B                     	;# 
  2446  071C                     	;# 
  2447  071D                     	;# 
  2448  071E                     	;# 
  2449  0796                     	;# 
  2450  0797                     	;# 
  2451  0798                     	;# 
  2452  0799                     	;# 
  2453  079A                     	;# 
  2454  079B                     	;# 
  2455  080C                     	;# 
  2456  080D                     	;# 
  2457  080E                     	;# 
  2458  080F                     	;# 
  2459  0810                     	;# 
  2460  0811                     	;# 
  2461  0812                     	;# 
  2462  0813                     	;# 
  2463  0814                     	;# 
  2464  081A                     	;# 
  2465  081B                     	;# 
  2466  081C                     	;# 
  2467  081D                     	;# 
  2468  081E                     	;# 
  2469  081F                     	;# 
  2470  088C                     	;# 
  2471  088D                     	;# 
  2472  088E                     	;# 
  2473  088F                     	;# 
  2474  0890                     	;# 
  2475  0891                     	;# 
  2476  0892                     	;# 
  2477  0893                     	;# 
  2478  0895                     	;# 
  2479  0896                     	;# 
  2480  0897                     	;# 
  2481  0898                     	;# 
  2482  0899                     	;# 
  2483  089A                     	;# 
  2484  089B                     	;# 
  2485  090C                     	;# 
  2486  090E                     	;# 
  2487  090F                     	;# 
  2488  091F                     	;# 
  2489  091F                     	;# 
  2490  098F                     	;# 
  2491  098F                     	;# 
  2492  0990                     	;# 
  2493  0991                     	;# 
  2494  0992                     	;# 
  2495  0993                     	;# 
  2496  0994                     	;# 
  2497  0995                     	;# 
  2498  0996                     	;# 
  2499  0997                     	;# 
  2500  0E0F                     	;# 
  2501  0E10                     	;# 
  2502  0E11                     	;# 
  2503  0E12                     	;# 
  2504  0E13                     	;# 
  2505  0E14                     	;# 
  2506  0E15                     	;# 
  2507  0E16                     	;# 
  2508  0E17                     	;# 
  2509  0E18                     	;# 
  2510  0E19                     	;# 
  2511  0E1A                     	;# 
  2512  0E1B                     	;# 
  2513  0E1C                     	;# 
  2514  0E1D                     	;# 
  2515  0E1E                     	;# 
  2516  0E1F                     	;# 
  2517  0E20                     	;# 
  2518  0E21                     	;# 
  2519  0E22                     	;# 
  2520  0E23                     	;# 
  2521  0E24                     	;# 
  2522  0E25                     	;# 
  2523  0E26                     	;# 
  2524  0E27                     	;# 
  2525  0E28                     	;# 
  2526  0E29                     	;# 
  2527  0E2A                     	;# 
  2528  0E2B                     	;# 
  2529  0E2C                     	;# 
  2530  0E2D                     	;# 
  2531  0E2E                     	;# 
  2532  0E2F                     	;# 
  2533  0E30                     	;# 
  2534  0E31                     	;# 
  2535  0E32                     	;# 
  2536  0E33                     	;# 
  2537  0E34                     	;# 
  2538  0E35                     	;# 
  2539  0E36                     	;# 
  2540  0E37                     	;# 
  2541  0E8F                     	;# 
  2542  0E90                     	;# 
  2543  0E91                     	;# 
  2544  0E92                     	;# 
  2545  0E93                     	;# 
  2546  0E94                     	;# 
  2547  0E95                     	;# 
  2548  0E96                     	;# 
  2549  0E97                     	;# 
  2550  0E9C                     	;# 
  2551  0E9D                     	;# 
  2552  0E9E                     	;# 
  2553  0EA1                     	;# 
  2554  0EA2                     	;# 
  2555  0EA3                     	;# 
  2556  0EA4                     	;# 
  2557  0EA5                     	;# 
  2558  0EA9                     	;# 
  2559  0EAA                     	;# 
  2560  0EAB                     	;# 
  2561  0EAC                     	;# 
  2562  0EB1                     	;# 
  2563  0EB2                     	;# 
  2564  0EB3                     	;# 
  2565  0EB8                     	;# 
  2566  0EB9                     	;# 
  2567  0EBA                     	;# 
  2568  0EBB                     	;# 
  2569  0EBC                     	;# 
  2570  0EBD                     	;# 
  2571  0EBE                     	;# 
  2572  0EC3                     	;# 
  2573  0EC5                     	;# 
  2574  0EC6                     	;# 
  2575  0EC7                     	;# 
  2576  0EC8                     	;# 
  2577  0EC9                     	;# 
  2578  0ECA                     	;# 
  2579  0ECB                     	;# 
  2580  0ECC                     	;# 
  2581  0F10                     	;# 
  2582  0F11                     	;# 
  2583  0F12                     	;# 
  2584  0F13                     	;# 
  2585  0F14                     	;# 
  2586  0F15                     	;# 
  2587  0F16                     	;# 
  2588  0F17                     	;# 
  2589  0F18                     	;# 
  2590  0F19                     	;# 
  2591  0F1A                     	;# 
  2592  0F1B                     	;# 
  2593  0F1C                     	;# 
  2594  0F1D                     	;# 
  2595  0F1E                     	;# 
  2596  0F1F                     	;# 
  2597  0F20                     	;# 
  2598  0F21                     	;# 
  2599  0F22                     	;# 
  2600  0F23                     	;# 
  2601  0F24                     	;# 
  2602  0F25                     	;# 
  2603  0F26                     	;# 
  2604  0F27                     	;# 
  2605  0F38                     	;# 
  2606  0F39                     	;# 
  2607  0F3A                     	;# 
  2608  0F3B                     	;# 
  2609  0F3C                     	;# 
  2610  0F3D                     	;# 
  2611  0F3E                     	;# 
  2612  0F3F                     	;# 
  2613  0F40                     	;# 
  2614  0F41                     	;# 
  2615  0F43                     	;# 
  2616  0F44                     	;# 
  2617  0F45                     	;# 
  2618  0F46                     	;# 
  2619  0F47                     	;# 
  2620  0F48                     	;# 
  2621  0F49                     	;# 
  2622  0F4A                     	;# 
  2623  0F4B                     	;# 
  2624  0F4C                     	;# 
  2625  0F4E                     	;# 
  2626  0F4F                     	;# 
  2627  0F50                     	;# 
  2628  0F51                     	;# 
  2629  0F52                     	;# 
  2630  0F53                     	;# 
  2631  0F54                     	;# 
  2632  0F55                     	;# 
  2633  0F56                     	;# 
  2634  0F57                     	;# 
  2635  0F65                     	;# 
  2636  0F68                     	;# 
  2637  0F69                     	;# 
  2638  0F6A                     	;# 
  2639  0F6B                     	;# 
  2640  0FE4                     	;# 
  2641  0FE5                     	;# 
  2642  0FE6                     	;# 
  2643  0FE7                     	;# 
  2644  0FE8                     	;# 
  2645  0FE9                     	;# 
  2646  0FEA                     	;# 
  2647  0FEB                     	;# 
  2648  0FED                     	;# 
  2649  0FEE                     	;# 
  2650  0FEF                     	;# 
  2651  0000                     	;# 
  2652  0001                     	;# 
  2653  0002                     	;# 
  2654  0003                     	;# 
  2655  0004                     	;# 
  2656  0005                     	;# 
  2657  0006                     	;# 
  2658  0007                     	;# 
  2659  0008                     	;# 
  2660  0009                     	;# 
  2661  000A                     	;# 
  2662  000B                     	;# 
  2663  000C                     	;# 
  2664  000D                     	;# 
  2665  000E                     	;# 
  2666  0010                     	;# 
  2667  0011                     	;# 
  2668  0012                     	;# 
  2669  0013                     	;# 
  2670  0016                     	;# 
  2671  0017                     	;# 
  2672  0018                     	;# 
  2673  001C                     	;# 
  2674  001C                     	;# 
  2675  001D                     	;# 
  2676  001D                     	;# 
  2677  001E                     	;# 
  2678  001F                     	;# 
  2679  008C                     	;# 
  2680  008C                     	;# 
  2681  008D                     	;# 
  2682  008E                     	;# 
  2683  008E                     	;# 
  2684  008F                     	;# 
  2685  0090                     	;# 
  2686  0090                     	;# 
  2687  0091                     	;# 
  2688  0093                     	;# 
  2689  0094                     	;# 
  2690  0095                     	;# 
  2691  0096                     	;# 
  2692  0097                     	;# 
  2693  0098                     	;# 
  2694  0099                     	;# 
  2695  009A                     	;# 
  2696  009B                     	;# 
  2697  009C                     	;# 
  2698  009D                     	;# 
  2699  009E                     	;# 
  2700  010C                     	;# 
  2701  010D                     	;# 
  2702  010E                     	;# 
  2703  010E                     	;# 
  2704  010F                     	;# 
  2705  0110                     	;# 
  2706  0110                     	;# 
  2707  0111                     	;# 
  2708  0112                     	;# 
  2709  0112                     	;# 
  2710  0113                     	;# 
  2711  0114                     	;# 
  2712  0114                     	;# 
  2713  0115                     	;# 
  2714  0116                     	;# 
  2715  0116                     	;# 
  2716  0117                     	;# 
  2717  0119                     	;# 
  2718  0119                     	;# 
  2719  0119                     	;# 
  2720  011A                     	;# 
  2721  011A                     	;# 
  2722  011A                     	;# 
  2723  011B                     	;# 
  2724  011B                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011C                     	;# 
  2729  011C                     	;# 
  2730  011C                     	;# 
  2731  011D                     	;# 
  2732  011D                     	;# 
  2733  011D                     	;# 
  2734  011E                     	;# 
  2735  011E                     	;# 
  2736  011E                     	;# 
  2737  011F                     	;# 
  2738  011F                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  018C                     	;# 
  2743  018D                     	;# 
  2744  018E                     	;# 
  2745  018F                     	;# 
  2746  0190                     	;# 
  2747  0191                     	;# 
  2748  0192                     	;# 
  2749  0196                     	;# 
  2750  0197                     	;# 
  2751  0198                     	;# 
  2752  0199                     	;# 
  2753  019A                     	;# 
  2754  019B                     	;# 
  2755  019C                     	;# 
  2756  020C                     	;# 
  2757  020C                     	;# 
  2758  020D                     	;# 
  2759  020E                     	;# 
  2760  020F                     	;# 
  2761  020F                     	;# 
  2762  0210                     	;# 
  2763  0210                     	;# 
  2764  0211                     	;# 
  2765  0211                     	;# 
  2766  0212                     	;# 
  2767  0212                     	;# 
  2768  0213                     	;# 
  2769  0214                     	;# 
  2770  0215                     	;# 
  2771  0215                     	;# 
  2772  0216                     	;# 
  2773  0216                     	;# 
  2774  0217                     	;# 
  2775  0217                     	;# 
  2776  0218                     	;# 
  2777  0218                     	;# 
  2778  0219                     	;# 
  2779  021A                     	;# 
  2780  021B                     	;# 
  2781  021B                     	;# 
  2782  021C                     	;# 
  2783  021C                     	;# 
  2784  021D                     	;# 
  2785  021D                     	;# 
  2786  021E                     	;# 
  2787  021F                     	;# 
  2788  028C                     	;# 
  2789  028C                     	;# 
  2790  028D                     	;# 
  2791  028D                     	;# 
  2792  028E                     	;# 
  2793  028F                     	;# 
  2794  0290                     	;# 
  2795  0290                     	;# 
  2796  0291                     	;# 
  2797  0292                     	;# 
  2798  0292                     	;# 
  2799  0293                     	;# 
  2800  0293                     	;# 
  2801  0294                     	;# 
  2802  0295                     	;# 
  2803  0296                     	;# 
  2804  0296                     	;# 
  2805  0297                     	;# 
  2806  0298                     	;# 
  2807  0298                     	;# 
  2808  0299                     	;# 
  2809  0299                     	;# 
  2810  029A                     	;# 
  2811  029B                     	;# 
  2812  029C                     	;# 
  2813  029C                     	;# 
  2814  029D                     	;# 
  2815  030C                     	;# 
  2816  030C                     	;# 
  2817  030D                     	;# 
  2818  030E                     	;# 
  2819  030F                     	;# 
  2820  0310                     	;# 
  2821  0310                     	;# 
  2822  0311                     	;# 
  2823  0312                     	;# 
  2824  0313                     	;# 
  2825  0314                     	;# 
  2826  0314                     	;# 
  2827  0315                     	;# 
  2828  0316                     	;# 
  2829  0317                     	;# 
  2830  0318                     	;# 
  2831  0318                     	;# 
  2832  0319                     	;# 
  2833  031A                     	;# 
  2834  031B                     	;# 
  2835  031C                     	;# 
  2836  031C                     	;# 
  2837  031D                     	;# 
  2838  031E                     	;# 
  2839  031F                     	;# 
  2840  038C                     	;# 
  2841  038D                     	;# 
  2842  038E                     	;# 
  2843  0390                     	;# 
  2844  0391                     	;# 
  2845  0392                     	;# 
  2846  040C                     	;# 
  2847  040D                     	;# 
  2848  040E                     	;# 
  2849  040F                     	;# 
  2850  0410                     	;# 
  2851  0411                     	;# 
  2852  0416                     	;# 
  2853  0416                     	;# 
  2854  0417                     	;# 
  2855  0418                     	;# 
  2856  0418                     	;# 
  2857  0419                     	;# 
  2858  041A                     	;# 
  2859  041A                     	;# 
  2860  041B                     	;# 
  2861  041C                     	;# 
  2862  041C                     	;# 
  2863  041D                     	;# 
  2864  041E                     	;# 
  2865  041F                     	;# 
  2866  048C                     	;# 
  2867  048C                     	;# 
  2868  048D                     	;# 
  2869  048E                     	;# 
  2870  048F                     	;# 
  2871  048F                     	;# 
  2872  0490                     	;# 
  2873  0491                     	;# 
  2874  0492                     	;# 
  2875  0492                     	;# 
  2876  0493                     	;# 
  2877  0494                     	;# 
  2878  0495                     	;# 
  2879  0495                     	;# 
  2880  0496                     	;# 
  2881  0497                     	;# 
  2882  0498                     	;# 
  2883  0499                     	;# 
  2884  049A                     	;# 
  2885  049B                     	;# 
  2886  049C                     	;# 
  2887  049D                     	;# 
  2888  050C                     	;# 
  2889  050C                     	;# 
  2890  050D                     	;# 
  2891  050E                     	;# 
  2892  050F                     	;# 
  2893  050F                     	;# 
  2894  0510                     	;# 
  2895  0511                     	;# 
  2896  0512                     	;# 
  2897  0512                     	;# 
  2898  0513                     	;# 
  2899  0514                     	;# 
  2900  0515                     	;# 
  2901  0515                     	;# 
  2902  0516                     	;# 
  2903  0517                     	;# 
  2904  0518                     	;# 
  2905  0519                     	;# 
  2906  051A                     	;# 
  2907  051B                     	;# 
  2908  051C                     	;# 
  2909  051D                     	;# 
  2910  058C                     	;# 
  2911  058C                     	;# 
  2912  058D                     	;# 
  2913  058E                     	;# 
  2914  058F                     	;# 
  2915  058F                     	;# 
  2916  0590                     	;# 
  2917  0591                     	;# 
  2918  0592                     	;# 
  2919  0593                     	;# 
  2920  060C                     	;# 
  2921  060D                     	;# 
  2922  060E                     	;# 
  2923  060F                     	;# 
  2924  0610                     	;# 
  2925  0611                     	;# 
  2926  0612                     	;# 
  2927  0613                     	;# 
  2928  0614                     	;# 
  2929  0616                     	;# 
  2930  0617                     	;# 
  2931  0618                     	;# 
  2932  0619                     	;# 
  2933  061A                     	;# 
  2934  061B                     	;# 
  2935  061C                     	;# 
  2936  061D                     	;# 
  2937  061E                     	;# 
  2938  068C                     	;# 
  2939  068D                     	;# 
  2940  068E                     	;# 
  2941  068F                     	;# 
  2942  0690                     	;# 
  2943  0691                     	;# 
  2944  0692                     	;# 
  2945  0693                     	;# 
  2946  0694                     	;# 
  2947  070C                     	;# 
  2948  070D                     	;# 
  2949  070E                     	;# 
  2950  070F                     	;# 
  2951  0710                     	;# 
  2952  0711                     	;# 
  2953  0712                     	;# 
  2954  0713                     	;# 
  2955  0714                     	;# 
  2956  0716                     	;# 
  2957  0717                     	;# 
  2958  0718                     	;# 
  2959  0719                     	;# 
  2960  071A                     	;# 
  2961  071B                     	;# 
  2962  071C                     	;# 
  2963  071D                     	;# 
  2964  071E                     	;# 
  2965  0796                     	;# 
  2966  0797                     	;# 
  2967  0798                     	;# 
  2968  0799                     	;# 
  2969  079A                     	;# 
  2970  079B                     	;# 
  2971  080C                     	;# 
  2972  080D                     	;# 
  2973  080E                     	;# 
  2974  080F                     	;# 
  2975  0810                     	;# 
  2976  0811                     	;# 
  2977  0812                     	;# 
  2978  0813                     	;# 
  2979  0814                     	;# 
  2980  081A                     	;# 
  2981  081B                     	;# 
  2982  081C                     	;# 
  2983  081D                     	;# 
  2984  081E                     	;# 
  2985  081F                     	;# 
  2986  088C                     	;# 
  2987  088D                     	;# 
  2988  088E                     	;# 
  2989  088F                     	;# 
  2990  0890                     	;# 
  2991  0891                     	;# 
  2992  0892                     	;# 
  2993  0893                     	;# 
  2994  0895                     	;# 
  2995  0896                     	;# 
  2996  0897                     	;# 
  2997  0898                     	;# 
  2998  0899                     	;# 
  2999  089A                     	;# 
  3000  089B                     	;# 
  3001  090C                     	;# 
  3002  090E                     	;# 
  3003  090F                     	;# 
  3004  091F                     	;# 
  3005  091F                     	;# 
  3006  098F                     	;# 
  3007  098F                     	;# 
  3008  0990                     	;# 
  3009  0991                     	;# 
  3010  0992                     	;# 
  3011  0993                     	;# 
  3012  0994                     	;# 
  3013  0995                     	;# 
  3014  0996                     	;# 
  3015  0997                     	;# 
  3016  0E0F                     	;# 
  3017  0E10                     	;# 
  3018  0E11                     	;# 
  3019  0E12                     	;# 
  3020  0E13                     	;# 
  3021  0E14                     	;# 
  3022  0E15                     	;# 
  3023  0E16                     	;# 
  3024  0E17                     	;# 
  3025  0E18                     	;# 
  3026  0E19                     	;# 
  3027  0E1A                     	;# 
  3028  0E1B                     	;# 
  3029  0E1C                     	;# 
  3030  0E1D                     	;# 
  3031  0E1E                     	;# 
  3032  0E1F                     	;# 
  3033  0E20                     	;# 
  3034  0E21                     	;# 
  3035  0E22                     	;# 
  3036  0E23                     	;# 
  3037  0E24                     	;# 
  3038  0E25                     	;# 
  3039  0E26                     	;# 
  3040  0E27                     	;# 
  3041  0E28                     	;# 
  3042  0E29                     	;# 
  3043  0E2A                     	;# 
  3044  0E2B                     	;# 
  3045  0E2C                     	;# 
  3046  0E2D                     	;# 
  3047  0E2E                     	;# 
  3048  0E2F                     	;# 
  3049  0E30                     	;# 
  3050  0E31                     	;# 
  3051  0E32                     	;# 
  3052  0E33                     	;# 
  3053  0E34                     	;# 
  3054  0E35                     	;# 
  3055  0E36                     	;# 
  3056  0E37                     	;# 
  3057  0E8F                     	;# 
  3058  0E90                     	;# 
  3059  0E91                     	;# 
  3060  0E92                     	;# 
  3061  0E93                     	;# 
  3062  0E94                     	;# 
  3063  0E95                     	;# 
  3064  0E96                     	;# 
  3065  0E97                     	;# 
  3066  0E9C                     	;# 
  3067  0E9D                     	;# 
  3068  0E9E                     	;# 
  3069  0EA1                     	;# 
  3070  0EA2                     	;# 
  3071  0EA3                     	;# 
  3072  0EA4                     	;# 
  3073  0EA5                     	;# 
  3074  0EA9                     	;# 
  3075  0EAA                     	;# 
  3076  0EAB                     	;# 
  3077  0EAC                     	;# 
  3078  0EB1                     	;# 
  3079  0EB2                     	;# 
  3080  0EB3                     	;# 
  3081  0EB8                     	;# 
  3082  0EB9                     	;# 
  3083  0EBA                     	;# 
  3084  0EBB                     	;# 
  3085  0EBC                     	;# 
  3086  0EBD                     	;# 
  3087  0EBE                     	;# 
  3088  0EC3                     	;# 
  3089  0EC5                     	;# 
  3090  0EC6                     	;# 
  3091  0EC7                     	;# 
  3092  0EC8                     	;# 
  3093  0EC9                     	;# 
  3094  0ECA                     	;# 
  3095  0ECB                     	;# 
  3096  0ECC                     	;# 
  3097  0F10                     	;# 
  3098  0F11                     	;# 
  3099  0F12                     	;# 
  3100  0F13                     	;# 
  3101  0F14                     	;# 
  3102  0F15                     	;# 
  3103  0F16                     	;# 
  3104  0F17                     	;# 
  3105  0F18                     	;# 
  3106  0F19                     	;# 
  3107  0F1A                     	;# 
  3108  0F1B                     	;# 
  3109  0F1C                     	;# 
  3110  0F1D                     	;# 
  3111  0F1E                     	;# 
  3112  0F1F                     	;# 
  3113  0F20                     	;# 
  3114  0F21                     	;# 
  3115  0F22                     	;# 
  3116  0F23                     	;# 
  3117  0F24                     	;# 
  3118  0F25                     	;# 
  3119  0F26                     	;# 
  3120  0F27                     	;# 
  3121  0F38                     	;# 
  3122  0F39                     	;# 
  3123  0F3A                     	;# 
  3124  0F3B                     	;# 
  3125  0F3C                     	;# 
  3126  0F3D                     	;# 
  3127  0F3E                     	;# 
  3128  0F3F                     	;# 
  3129  0F40                     	;# 
  3130  0F41                     	;# 
  3131  0F43                     	;# 
  3132  0F44                     	;# 
  3133  0F45                     	;# 
  3134  0F46                     	;# 
  3135  0F47                     	;# 
  3136  0F48                     	;# 
  3137  0F49                     	;# 
  3138  0F4A                     	;# 
  3139  0F4B                     	;# 
  3140  0F4C                     	;# 
  3141  0F4E                     	;# 
  3142  0F4F                     	;# 
  3143  0F50                     	;# 
  3144  0F51                     	;# 
  3145  0F52                     	;# 
  3146  0F53                     	;# 
  3147  0F54                     	;# 
  3148  0F55                     	;# 
  3149  0F56                     	;# 
  3150  0F57                     	;# 
  3151  0F65                     	;# 
  3152  0F68                     	;# 
  3153  0F69                     	;# 
  3154  0F6A                     	;# 
  3155  0F6B                     	;# 
  3156  0FE4                     	;# 
  3157  0FE5                     	;# 
  3158  0FE6                     	;# 
  3159  0FE7                     	;# 
  3160  0FE8                     	;# 
  3161  0FE9                     	;# 
  3162  0FEA                     	;# 
  3163  0FEB                     	;# 
  3164  0FED                     	;# 
  3165  0FEE                     	;# 
  3166  0FEF                     	;# 
  3167                           
  3168                           	psect	idataBANK1
  3169  04F0                     __pidataBANK1:	
  3170                           
  3171                           ;initializer for MYI2C_Write2LEDBytes@F14421
  3172  04F0  34A0               	retlw	160
  3173  04F1  34A1               	retlw	161
  3174  04F2  34A2               	retlw	162
  3175  04F3  34A3               	retlw	163
  3176  04F4  34A4               	retlw	164
  3177  04F5  34A5               	retlw	165
  3178  04F6  34A6               	retlw	166
  3179  04F7  34A7               	retlw	167
  3180  04F8  34A8               	retlw	168
  3181  04F9  34A9               	retlw	169
  3182  04FA  34AA               	retlw	170
  3183  04FB  34AB               	retlw	171
  3184  04FC  34AC               	retlw	172
  3185  04FD  34AD               	retlw	173
  3186  04FE  34AE               	retlw	174
  3187  04FF  34AF               	retlw	175
  3188                           
  3189                           	psect	stringtext1
  3190  0521                     __pstringtext1:	
  3191  0521                     _cMstrClkAdjust:	
  3192  0521  3420               	retlw	32
  3193  0522  3400               	retlw	0
  3194  0523                     __end_of_cMstrClkAdjust:	
  3195  000E                     _PORTC	set	14
  3196  000D                     _PORTB	set	13
  3197  000B                     _INTCONbits	set	11
  3198  0013                     _TRISC	set	19
  3199  0012                     _TRISB	set	18
  3200  0011                     _TRISA	set	17
  3201  0018                     _LATC	set	24
  3202  0017                     _LATB	set	23
  3203  0016                     _LATA	set	22
  3204  005F                     _GIE	set	95
  3205  0094                     _ADCON1bits	set	148
  3206  008E                     _ADPREVL	set	142
  3207  008F                     _ADPREVH	set	143
  3208  0097                     _ADSTATbits	set	151
  3209  0090                     _ADACCL	set	144
  3210  0091                     _ADACCH	set	145
  3211  0095                     _ADCON2bits	set	149
  3212  0096                     _ADCON3bits	set	150
  3213  008C                     _ADRESL	set	140
  3214  008D                     _ADRESH	set	141
  3215  0093                     _ADCON0bits	set	147
  3216  0093                     _ADCON0	set	147
  3217  009E                     _ADPCH	set	158
  3218  009D                     _ADACQ	set	157
  3219  009C                     _ADPRE	set	156
  3220  009B                     _ADCAP	set	155
  3221  009A                     _ADREF	set	154
  3222  0098                     _ADCLK	set	152
  3223  0097                     _ADSTAT	set	151
  3224  0099                     _ADACT	set	153
  3225  0096                     _ADCON3	set	150
  3226  0095                     _ADCON2	set	149
  3227  0094                     _ADCON1	set	148
  3228  0116                     _ADERRL	set	278
  3229  0117                     _ADERRH	set	279
  3230  0114                     _ADFLTRL	set	276
  3231  0115                     _ADFLTRH	set	277
  3232  010C                     _ADCNT	set	268
  3233  0113                     _ADSTPTH	set	275
  3234  0112                     _ADSTPTL	set	274
  3235  0111                     _ADUTHH	set	273
  3236  0110                     _ADUTHL	set	272
  3237  010F                     _ADLTHH	set	271
  3238  010E                     _ADLTHL	set	270
  3239  010D                     _ADRPT	set	269
  3240  018C                     _SSP1BUF	set	396
  3241  0191                     _SSP1CON2bits	set	401
  3242  0190                     _SSP1CON1bits	set	400
  3243  018D                     _SSP1ADD	set	397
  3244  0192                     _SSP1CON3	set	402
  3245  0190                     _SSP1CON1	set	400
  3246  018F                     _SSP1STAT	set	399
  3247  0719                     _PIE3bits	set	1817
  3248  070F                     _PIR3bits	set	1807
  3249  0892                     _OSCTUNE	set	2194
  3250  0893                     _OSCFRQ	set	2195
  3251  0891                     _OSCEN	set	2193
  3252  088F                     _OSCCON3	set	2191
  3253  088D                     _OSCCON1	set	2189
  3254  0EC5                     _SSP1CLKPPSbits	set	3781
  3255  0EC6                     _SSP1DATPPSbits	set	3782
  3256  0E8F                     _PPSLOCKbits	set	3727
  3257  0E8F                     _PPSLOCK	set	3727
  3258  0F24                     _RC4PPS	set	3876
  3259  0F23                     _RC3PPS	set	3875
  3260  0F50                     _ODCONC	set	3920
  3261  0F45                     _ODCONB	set	3909
  3262  0F3A                     _ODCONA	set	3898
  3263  0F4F                     _WPUC	set	3919
  3264  0F39                     _WPUA	set	3897
  3265  0F44                     _WPUB	set	3908
  3266  0F65                     _WPUE	set	3941
  3267  0F38                     _ANSELA	set	3896
  3268  0F43                     _ANSELB	set	3907
  3269  0F4E                     _ANSELC	set	3918
  3270                           
  3271                           ; #config settings
  3272  0000                     
  3273                           	psect	cinit
  3274  0022                     start_initialization:	
  3275  0022                     __initialization:	
  3276                           
  3277                           ; Initialize objects allocated to BANK1
  3278  0022  30F0               	movlw	low __pidataBANK1
  3279  0023  0084               	movwf	4
  3280  0024  3084               	movlw	(high __pidataBANK1)| (0+128)
  3281  0025  0085               	movwf	5
  3282  0026  30A0               	movlw	low __pdataBANK1
  3283  0027  0086               	movwf	6
  3284  0028  3000               	movlw	high __pdataBANK1
  3285  0029  0087               	movwf	7
  3286  002A  3010               	movlw	16
  3287  002B  3185  2515  3180   	fcall	init_ram
  3288                           
  3289                           ; Clear objects allocated to COMMON
  3290  002E  01F0               	clrf	__pbssCOMMON& (0+127)
  3291  002F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3292  0030  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3293  0031  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3294  0032  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3295  0033  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3296  0034  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3297                           
  3298                           ; Clear objects allocated to BANK0
  3299  0035  3061               	movlw	low __pbssBANK0
  3300  0036  0084               	movwf	4
  3301  0037  3000               	movlw	high __pbssBANK0
  3302  0038  0085               	movwf	5
  3303  0039  300E               	movlw	14
  3304  003A  3185  251B         	fcall	clear_ram0
  3305                           
  3306                           ; Clear objects allocated to BANK1
  3307  003C  0021               	movlb	1	; select bank1
  3308  003D  01B0               	clrf	__pbssBANK1& (0+127)
  3309  003E  01B1               	clrf	(__pbssBANK1+1)& (0+127)
  3310  003F  01B2               	clrf	(__pbssBANK1+2)& (0+127)
  3311  0040  01B3               	clrf	(__pbssBANK1+3)& (0+127)
  3312  0041                     end_of_initialization:	
  3313                           ;End of C runtime variable initialization code
  3314                           
  3315  0041                     __end_of__initialization:	
  3316  0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3317  0042  0020               	movlb	0
  3318  0043  3181  2980         	ljmp	_main	;jump to C main() function
  3319                           
  3320                           	psect	bssCOMMON
  3321  0070                     __pbssCOMMON:	
  3322  0070                     I2C1_ISR@i2c_bytes_left:	
  3323  0070                     	ds	1
  3324  0071                     I2C1_ISR@pi2c_buf_ptr:	
  3325  0071                     	ds	1
  3326  0072                     _p_i2c1_current:	
  3327  0072                     	ds	1
  3328  0073                     _p_i2c1_trb_current:	
  3329  0073                     	ds	1
  3330  0074                     _i2c1_trb_count:	
  3331  0074                     	ds	1
  3332  0075                     I2C1_ISR@i2c_address:	
  3333  0075                     	ds	2
  3334                           
  3335                           	psect	bssBANK0
  3336  0061                     __pbssBANK0:	
  3337  0061                     _i2c1_object:	
  3338  0061                     	ds	5
  3339  0066                     I2C1_ISR@i2c_10bit_address_restart:	
  3340  0066                     	ds	1
  3341  0067                     _i2c1_state:	
  3342  0067                     	ds	1
  3343  0068                     I2C1_MasterWrite@trBlock:	
  3344  0068                     	ds	4
  3345  006C                     _i2c1_tr_queue:	
  3346  006C                     	ds	3
  3347                           
  3348                           	psect	bssBANK1
  3349  00B0                     __pbssBANK1:	
  3350  00B0                     I2C1_MasterRead@trBlock:	
  3351  00B0                     	ds	4
  3352                           
  3353                           	psect	dataBANK1
  3354  00A0                     __pdataBANK1:	
  3355  00A0                     MYI2C_Write2LEDBytes@F14421:	
  3356  00A0                     	ds	16
  3357                           
  3358                           	psect	inittext
  3359  0515                     init_ram:	
  3360  0515  00FE               	movwf	126
  3361  0516                     initloop:	
  3362  0516  0012               	moviw fsr0++
  3363  0517  001E               	movwi fsr1++
  3364  0518  0BFE               	decfsz	126,f
  3365  0519  2D16               	goto	initloop
  3366  051A  3400               	retlw	0
  3367                           
  3368                           	psect	clrtext
  3369  051B                     clear_ram0:	
  3370                           ;	Called with FSR0 containing the base address, and
  3371                           ;	WREG with the size to clear
  3372                           
  3373  051B  0064               	clrwdt	;clear the watchdog before getting into this loop
  3374  051C                     clrloop0:	
  3375  051C  0180               	clrf	0	;clear RAM location pointed to by FSR
  3376  051D  3101               	addfsr 0,1
  3377  051E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3378  051F  2D1C               	goto	clrloop0	;have we reached the end yet?
  3379  0520  3400               	retlw	0	;all done for this memory range, return
  3380                           
  3381                           	psect	cstackCOMMON
  3382  0077                     __pcstackCOMMON:	
  3383  0077                     ?_OSCILLATOR_Initialize:	
  3384  0077                     ?_I2C1_Initialize:	
  3385                           ; 1 bytes @ 0x0
  3386                           
  3387  0077                     ?_ADCC_Initialize:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390  0077                     ?_I2C1_Stop:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393  0077                     ??_I2C1_Stop:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396  0077                     ?_I2C1_FunctionComplete:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399  0077                     ??_I2C1_FunctionComplete:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0077                     ?_PIN_MANAGER_Initialize:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405  0077                     ?_SYSTEM_Initialize:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408  0077                     ?_I2C1_ISR:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0077                     ?_I2C1_BusCollisionISR:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0077                     ??_I2C1_BusCollisionISR:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0077                     ?_INTERRUPT_InterruptManager:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0077                     ?_main:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423                           
  3424                           ; 1 bytes @ 0x0
  3425  0077                     	ds	1
  3426  0078                     I2C1_Stop@completion_code:	
  3427                           
  3428                           ; 1 bytes @ 0x1
  3429  0078                     	ds	1
  3430  0079                     ??_I2C1_ISR:	
  3431                           
  3432                           ; 1 bytes @ 0x2
  3433  0079                     	ds	4
  3434  007D                     ??_INTERRUPT_InterruptManager:	
  3435                           
  3436                           ; 1 bytes @ 0x6
  3437  007D                     	ds	1
  3438                           
  3439                           	psect	cstackBANK0
  3440  0020                     __pcstackBANK0:	
  3441  0020                     ??_OSCILLATOR_Initialize:	
  3442  0020                     ??_I2C1_Initialize:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445  0020                     ??_ADCC_Initialize:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448  0020                     ?_I2C1_MasterWriteTRBBuild:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451  0020                     ?_I2C1_MasterTRBInsert:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454  0020                     ??_PIN_MANAGER_Initialize:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457  0020                     ?_ADCC_GetSingleConversion:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460  0020                     ?___wmul:	
  3461                           ; 2 bytes @ 0x0
  3462                           
  3463  0020                     PIN_MANAGER_Initialize@state:	
  3464                           ; 2 bytes @ 0x0
  3465                           
  3466  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472  0020                     ___wmul@multiplier:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475                           
  3476                           ; 2 bytes @ 0x0
  3477  0020                     	ds	1
  3478  0021                     ??_SYSTEM_Initialize:	
  3479  0021                     I2C1_MasterTRBInsert@pflag:	
  3480                           ; 1 bytes @ 0x1
  3481                           
  3482  0021                     I2C1_MasterWriteTRBBuild@length:	
  3483                           ; 1 bytes @ 0x1
  3484                           
  3485                           
  3486                           ; 1 bytes @ 0x1
  3487  0021                     	ds	1
  3488  0022                     ??_I2C1_MasterTRBInsert:	
  3489  0022                     I2C1_MasterWriteTRBBuild@address:	
  3490                           ; 1 bytes @ 0x2
  3491                           
  3492  0022                     ___wmul@multiplicand:	
  3493                           ; 2 bytes @ 0x2
  3494                           
  3495                           
  3496                           ; 2 bytes @ 0x2
  3497  0022                     	ds	1
  3498  0023                     ??_ADCC_GetSingleConversion:	
  3499  0023                     ADCC_GetSingleConversion@channel:	
  3500                           ; 1 bytes @ 0x3
  3501                           
  3502  0023                     I2C1_MasterTRBInsert@count:	
  3503                           ; 1 bytes @ 0x3
  3504                           
  3505                           
  3506                           ; 1 bytes @ 0x3
  3507  0023                     	ds	1
  3508  0024                     ??_I2C1_MasterWriteTRBBuild:	
  3509  0024                     ??___wmul:	
  3510                           ; 1 bytes @ 0x4
  3511                           
  3512  0024                     ___wmul@product:	
  3513                           ; 1 bytes @ 0x4
  3514                           
  3515                           
  3516                           ; 2 bytes @ 0x4
  3517  0024                     	ds	2
  3518  0026                     ?_delay:	
  3519  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  3520                           ; 1 bytes @ 0x6
  3521                           
  3522  0026                     delay@delaytime:	
  3523                           ; 1 bytes @ 0x6
  3524                           
  3525                           
  3526                           ; 2 bytes @ 0x6
  3527  0026                     	ds	1
  3528  0027                     ?_I2C1_MasterWrite:	
  3529  0027                     I2C1_MasterWrite@length:	
  3530                           ; 1 bytes @ 0x7
  3531                           
  3532                           
  3533                           ; 1 bytes @ 0x7
  3534  0027                     	ds	1
  3535  0028                     ??_delay:	
  3536  0028                     I2C1_MasterWrite@address:	
  3537                           ; 1 bytes @ 0x8
  3538                           
  3539                           
  3540                           ; 2 bytes @ 0x8
  3541  0028                     	ds	1
  3542  0029                     delay@adjustedDelaytime:	
  3543                           
  3544                           ; 4 bytes @ 0x9
  3545  0029                     	ds	1
  3546  002A                     I2C1_MasterWrite@pflag:	
  3547                           
  3548                           ; 1 bytes @ 0xA
  3549  002A                     	ds	1
  3550  002B                     ??_I2C1_MasterWrite:	
  3551                           
  3552                           ; 1 bytes @ 0xB
  3553  002B                     	ds	2
  3554  002D                     I2C1_MasterWrite@pdata:	
  3555  002D                     delay@counter:	
  3556                           ; 1 bytes @ 0xD
  3557                           
  3558                           
  3559                           ; 4 bytes @ 0xD
  3560  002D                     	ds	1
  3561  002E                     ?_MYI2C_Write2LEDBytes:	
  3562  002E                     MYI2C_Write2LEDBytes@MSBWriteByte:	
  3563                           ; 1 bytes @ 0xE
  3564                           
  3565                           
  3566                           ; 1 bytes @ 0xE
  3567  002E                     	ds	1
  3568  002F                     MYI2C_Write2LEDBytes@LSBWriteByte:	
  3569                           
  3570                           ; 1 bytes @ 0xF
  3571  002F                     	ds	1
  3572  0030                     ??_MYI2C_Write2LEDBytes:	
  3573                           
  3574                           ; 1 bytes @ 0x10
  3575  0030                     	ds	1
  3576  0031                     ?_blinkyLoop:	
  3577  0031                     blinkyLoop@maxLoops:	
  3578                           ; 1 bytes @ 0x11
  3579                           
  3580                           
  3581                           ; 2 bytes @ 0x11
  3582  0031                     	ds	2
  3583  0033                     ??_blinkyLoop:	
  3584                           
  3585                           ; 1 bytes @ 0x13
  3586  0033                     	ds	1
  3587  0034                     blinkyLoop@delayTime:	
  3588  0034                     MYI2C_Write2LEDBytes@sourceData:	
  3589                           ; 2 bytes @ 0x14
  3590                           
  3591                           
  3592                           ; 16 bytes @ 0x14
  3593  0034                     	ds	2
  3594  0036                     blinkyLoop@loopCount:	
  3595                           
  3596                           ; 2 bytes @ 0x16
  3597  0036                     	ds	14
  3598  0044                     MYI2C_Write2LEDBytes@dataAddress:	
  3599                           
  3600                           ; 2 bytes @ 0x24
  3601  0044                     	ds	2
  3602  0046                     MYI2C_Write2LEDBytes@pD:	
  3603                           
  3604                           ; 1 bytes @ 0x26
  3605  0046                     	ds	1
  3606  0047                     MYI2C_Write2LEDBytes@nCount:	
  3607                           
  3608                           ; 2 bytes @ 0x27
  3609  0047                     	ds	2
  3610  0049                     MYI2C_Write2LEDBytes@slaveDeviceAddress:	
  3611                           
  3612                           ; 1 bytes @ 0x29
  3613  0049                     	ds	1
  3614  004A                     MYI2C_Write2LEDBytes@counter:	
  3615                           
  3616                           ; 2 bytes @ 0x2A
  3617  004A                     	ds	2
  3618  004C                     MYI2C_Write2LEDBytes@timeOut:	
  3619                           
  3620                           ; 2 bytes @ 0x2C
  3621  004C                     	ds	2
  3622  004E                     MYI2C_Write2LEDBytes@pointerByte:	
  3623                           
  3624                           ; 1 bytes @ 0x2E
  3625  004E                     	ds	1
  3626  004F                     MYI2C_Write2LEDBytes@writeBuffer:	
  3627                           
  3628                           ; 3 bytes @ 0x2F
  3629  004F                     	ds	3
  3630  0052                     MYI2C_Write2LEDBytes@status:	
  3631                           
  3632                           ; 1 bytes @ 0x32
  3633  0052                     	ds	1
  3634  0053                     ??_main:	
  3635                           
  3636                           ; 1 bytes @ 0x33
  3637  0053                     	ds	3
  3638  0056                     main@prevFader8bitValue:	
  3639                           
  3640                           ; 1 bytes @ 0x36
  3641  0056                     	ds	1
  3642  0057                     main@iLSByte:	
  3643                           
  3644                           ; 2 bytes @ 0x37
  3645  0057                     	ds	2
  3646  0059                     main@I2C_ADDRESS_FADELED0:	
  3647                           
  3648                           ; 1 bytes @ 0x39
  3649  0059                     	ds	1
  3650  005A                     main@iMSByte:	
  3651                           
  3652                           ; 2 bytes @ 0x3A
  3653  005A                     	ds	2
  3654  005C                     main@fader8bitValue:	
  3655                           
  3656                           ; 1 bytes @ 0x3C
  3657  005C                     	ds	1
  3658  005D                     main@iCounter:	
  3659                           
  3660                           ; 2 bytes @ 0x3D
  3661  005D                     	ds	2
  3662  005F                     main@faderValue:	
  3663                           
  3664                           ; 2 bytes @ 0x3F
  3665  005F                     	ds	2
  3666                           
  3667                           	psect	maintext
  3668  0180                     __pmaintext:	
  3669 ;;
  3670 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3671 ;;
  3672 ;; *************** function _main *****************
  3673 ;; Defined at:
  3674 ;;		line 121 in file "main.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  faderValue      2   63[BANK0 ] int 
  3679 ;;  iCounter        2   61[BANK0 ] unsigned int 
  3680 ;;  iMSByte         2   58[BANK0 ] unsigned int 
  3681 ;;  iLSByte         2   55[BANK0 ] unsigned int 
  3682 ;;  fader8bitVal    1   60[BANK0 ] unsigned char 
  3683 ;;  I2C_ADDRESS_    1   57[BANK0 ] unsigned char 
  3684 ;;  prevFader8bi    1   54[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : B1F/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;Total ram usage:       14 bytes
  3699 ;; Hardware stack levels required when called:    6
  3700 ;; This function calls:
  3701 ;;		_ADCC_GetSingleConversion
  3702 ;;		_MYI2C_Write2LEDBytes
  3703 ;;		_SYSTEM_Initialize
  3704 ;;		_blinkyLoop
  3705 ;;		_delay
  3706 ;; This function is called by:
  3707 ;;		Startup code after reset
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           
  3712                           ;psect for function _main
  3713  0180                     _main:	
  3714                           
  3715                           ;main.c: 123: uint8_t I2C_ADDRESS_FADELED0 = 0x10;
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3719  0180  3010               	movlw	16
  3720  0181  0020               	movlb	0	; select bank0
  3721  0182  00D3               	movwf	??_main
  3722  0183  0853               	movf	??_main,w
  3723  0184  00D9               	movwf	main@I2C_ADDRESS_FADELED0
  3724                           
  3725                           ;main.c: 124: uint16_t iCounter=0;
  3726  0185  01DD               	clrf	main@iCounter
  3727  0186  01DE               	clrf	main@iCounter+1
  3728                           
  3729                           ;main.c: 125: uint16_t iMSByte;
  3730                           ;main.c: 126: uint16_t iLSByte;
  3731                           ;main.c: 127: int faderValue;
  3732                           ;main.c: 128: uint8_t fader8bitValue;
  3733                           ;main.c: 129: uint8_t prevFader8bitValue;
  3734                           ;main.c: 132: SYSTEM_Initialize();
  3735  0187  3185  2500  3181   	fcall	_SYSTEM_Initialize
  3736                           
  3737                           ;main.c: 138: (INTCONbits.GIE = 1);
  3738  018A  178B               	bsf	11,7	;volatile
  3739                           
  3740                           ;main.c: 141: (INTCONbits.PEIE = 1);
  3741  018B  170B               	bsf	11,6	;volatile
  3742                           
  3743                           ;main.c: 152: faderValue=ADCC_GetSingleConversion(FADER0);
  3744  018C  3000               	movlw	0
  3745  018D  3184  24CA  3181   	fcall	_ADCC_GetSingleConversion
  3746  0190  0020               	movlb	0	; select bank0
  3747  0191  0821               	movf	?_ADCC_GetSingleConversion+1,w
  3748  0192  00E0               	movwf	main@faderValue+1
  3749  0193  0820               	movf	?_ADCC_GetSingleConversion,w
  3750  0194  00DF               	movwf	main@faderValue
  3751                           
  3752                           ;main.c: 153: prevFader8bitValue=faderValue>>2;
  3753  0195  0860               	movf	main@faderValue+1,w
  3754  0196  00D4               	movwf	??_main+1
  3755  0197  085F               	movf	main@faderValue,w
  3756  0198  00D3               	movwf	??_main
  3757  0199  0D54               	rlf	??_main+1,w
  3758  019A  0CD4               	rrf	??_main+1,f
  3759  019B  0CD3               	rrf	??_main,f
  3760  019C  0D54               	rlf	??_main+1,w
  3761  019D  0CD4               	rrf	??_main+1,f
  3762  019E  0CD3               	rrf	??_main,f
  3763  019F  0853               	movf	??_main,w
  3764  01A0  00D5               	movwf	??_main+2
  3765  01A1  0855               	movf	??_main+2,w
  3766  01A2  00D6               	movwf	main@prevFader8bitValue
  3767                           
  3768                           ;main.c: 155: blinkyLoop(10);
  3769  01A3  300A               	movlw	10
  3770  01A4  00B1               	movwf	blinkyLoop@maxLoops
  3771  01A5  3000               	movlw	0
  3772  01A6  00B2               	movwf	blinkyLoop@maxLoops+1
  3773  01A7  3182  22CB  3181   	fcall	_blinkyLoop
  3774  01AA                     l2091:	
  3775                           ;main.c: 158: while (1) {
  3776                           
  3777                           
  3778                           ;main.c: 160: if((0==iCounter%4))
  3779  01AA  3003               	movlw	3
  3780  01AB  0020               	movlb	0	; select bank0
  3781  01AC  055D               	andwf	main@iCounter,w
  3782  01AD  00D3               	movwf	??_main
  3783  01AE  3000               	movlw	0
  3784  01AF  055E               	andwf	main@iCounter+1,w
  3785  01B0  00D4               	movwf	??_main+1
  3786  01B1  0853               	movf	??_main,w
  3787  01B2  0454               	iorwf	??_main+1,w
  3788  01B3  1D03               	btfss	3,2
  3789  01B4  29CC               	goto	l2097
  3790                           
  3791                           ;main.c: 161: {
  3792                           ;main.c: 162: faderValue=ADCC_GetSingleConversion(FADER0);
  3793  01B5  3000               	movlw	0
  3794  01B6  3184  24CA  3181   	fcall	_ADCC_GetSingleConversion
  3795  01B9  0020               	movlb	0	; select bank0
  3796  01BA  0821               	movf	?_ADCC_GetSingleConversion+1,w
  3797  01BB  00E0               	movwf	main@faderValue+1
  3798  01BC  0820               	movf	?_ADCC_GetSingleConversion,w
  3799  01BD  00DF               	movwf	main@faderValue
  3800                           
  3801                           ;main.c: 163: fader8bitValue=faderValue>>2;
  3802  01BE  0860               	movf	main@faderValue+1,w
  3803  01BF  00D4               	movwf	??_main+1
  3804  01C0  085F               	movf	main@faderValue,w
  3805  01C1  00D3               	movwf	??_main
  3806  01C2  0D54               	rlf	??_main+1,w
  3807  01C3  0CD4               	rrf	??_main+1,f
  3808  01C4  0CD3               	rrf	??_main,f
  3809  01C5  0D54               	rlf	??_main+1,w
  3810  01C6  0CD4               	rrf	??_main+1,f
  3811  01C7  0CD3               	rrf	??_main,f
  3812  01C8  0853               	movf	??_main,w
  3813  01C9  00D5               	movwf	??_main+2
  3814  01CA  0855               	movf	??_main+2,w
  3815  01CB  00DC               	movwf	main@fader8bitValue
  3816  01CC                     l2097:	
  3817                           
  3818                           ;main.c: 164: }
  3819                           ;main.c: 168: if (faderValue> 640){
  3820  01CC  0860               	movf	main@faderValue+1,w
  3821  01CD  3A80               	xorlw	128
  3822  01CE  00D3               	movwf	??_main
  3823  01CF  3082               	movlw	130
  3824  01D0  0253               	subwf	??_main,w
  3825  01D1  1D03               	skipz
  3826  01D2  29D5               	goto	u1165
  3827  01D3  3081               	movlw	129
  3828  01D4  025F               	subwf	main@faderValue,w
  3829  01D5                     u1165:	
  3830  01D5  1C03               	skipc
  3831  01D6  29E1               	goto	l2101
  3832                           
  3833                           ;main.c: 170: PORTB |= 0x1F;
  3834  01D7  301F               	movlw	31
  3835  01D8  0020               	movlb	0	; select bank0
  3836  01D9  00D3               	movwf	??_main
  3837  01DA  0853               	movf	??_main,w
  3838  01DB  048D               	iorwf	13,f	;volatile
  3839                           
  3840                           ;main.c: 171: PORTC |= 0xE0;
  3841  01DC  30E0               	movlw	224
  3842  01DD  00D3               	movwf	??_main
  3843  01DE  0853               	movf	??_main,w
  3844  01DF  048E               	iorwf	14,f	;volatile
  3845  01E0  2A0B               	goto	L1
  3846  01E1                     l2101:	
  3847                           ;main.c: 174: }else{
  3848                           
  3849                           ;main.c: 173: ODCONC &= 0x1F;
  3850                           
  3851                           ;main.c: 172: ODCONB &= 0xE0;
  3852                           
  3853                           
  3854                           ;main.c: 175: if (faderValue > 320) {
  3855  01E1  0020               	movlb	0	; select bank0
  3856  01E2  0860               	movf	main@faderValue+1,w
  3857  01E3  3A80               	xorlw	128
  3858  01E4  00D3               	movwf	??_main
  3859  01E5  3081               	movlw	129
  3860  01E6  0253               	subwf	??_main,w
  3861  01E7  1D03               	skipz
  3862  01E8  29EB               	goto	u1175
  3863  01E9  3041               	movlw	65
  3864  01EA  025F               	subwf	main@faderValue,w
  3865  01EB                     u1175:	
  3866  01EB  1C03               	skipc
  3867  01EC  2A02               	goto	l2105
  3868                           
  3869                           ;main.c: 179: PORTB |= 0x1F;
  3870  01ED  301F               	movlw	31
  3871  01EE  0020               	movlb	0	; select bank0
  3872  01EF  00D3               	movwf	??_main
  3873  01F0  0853               	movf	??_main,w
  3874  01F1  048D               	iorwf	13,f	;volatile
  3875                           
  3876                           ;main.c: 180: PORTC |= 0xE0;
  3877  01F2  30E0               	movlw	224
  3878  01F3  00D3               	movwf	??_main
  3879  01F4  0853               	movf	??_main,w
  3880  01F5  048E               	iorwf	14,f	;volatile
  3881                           
  3882                           ;main.c: 181: ODCONB |= 0x1F;
  3883  01F6  301F               	movlw	31
  3884  01F7  00D3               	movwf	??_main
  3885  01F8  0853               	movf	??_main,w
  3886  01F9  003E               	movlb	30	; select bank30
  3887  01FA  04C5               	iorwf	69,f	;volatile
  3888                           
  3889                           ;main.c: 182: ODCONC |= 0xE0;
  3890  01FB  30E0               	movlw	224
  3891  01FC  0020               	movlb	0	; select bank0
  3892  01FD  00D3               	movwf	??_main
  3893  01FE  0853               	movf	??_main,w
  3894  01FF  003E               	movlb	30	; select bank30
  3895  0200  04D0               	iorwf	80,f	;volatile
  3896                           
  3897                           ;main.c: 183: }else{
  3898  0201  2A16               	goto	l2107
  3899  0202                     l2105:	
  3900                           
  3901                           ;main.c: 186: PORTB &= 0xE0;
  3902  0202  30E0               	movlw	224
  3903  0203  0020               	movlb	0	; select bank0
  3904  0204  00D3               	movwf	??_main
  3905  0205  0853               	movf	??_main,w
  3906  0206  058D               	andwf	13,f	;volatile
  3907                           
  3908                           ;main.c: 187: PORTC &= 0x1F;
  3909  0207  301F               	movlw	31
  3910  0208  00D3               	movwf	??_main
  3911  0209  0853               	movf	??_main,w
  3912  020A  058E               	andwf	14,f	;volatile
  3913  020B                     L1:	
  3914                           
  3915                           ;main.c: 188: ODCONB &= 0xE0;
  3916  020B  30E0               	movlw	224
  3917  020C  00D3               	movwf	??_main
  3918  020D  0853               	movf	??_main,w
  3919  020E  003E               	movlb	30	; select bank30
  3920  020F  05C5               	andwf	69,f	;volatile
  3921                           
  3922                           ;main.c: 189: ODCONC &= 0x1F;
  3923  0210  301F               	movlw	31
  3924  0211  0020               	movlb	0	; select bank0
  3925  0212  00D3               	movwf	??_main
  3926  0213  0853               	movf	??_main,w
  3927  0214  003E               	movlb	30	; select bank30
  3928  0215  05D0               	andwf	80,f	;volatile
  3929  0216                     l2107:	
  3930                           
  3931                           ;main.c: 190: }
  3932                           ;main.c: 191: }
  3933                           ;main.c: 195: iMSByte = iCounter;
  3934  0216  0020               	movlb	0	; select bank0
  3935  0217  085E               	movf	main@iCounter+1,w
  3936  0218  00DB               	movwf	main@iMSByte+1
  3937  0219  085D               	movf	main@iCounter,w
  3938  021A  00DA               	movwf	main@iMSByte
  3939                           
  3940                           ;main.c: 196: iMSByte = iMSByte>>8;
  3941  021B  085B               	movf	main@iMSByte+1,w
  3942  021C  00D4               	movwf	??_main+1
  3943  021D  085A               	movf	main@iMSByte,w
  3944  021E  00D3               	movwf	??_main
  3945  021F  0854               	movf	??_main+1,w
  3946  0220  00D3               	movwf	??_main
  3947  0221  01D4               	clrf	??_main+1
  3948  0222  0853               	movf	??_main,w
  3949  0223  00DA               	movwf	main@iMSByte
  3950  0224  0854               	movf	??_main+1,w
  3951  0225  00DB               	movwf	main@iMSByte+1
  3952                           
  3953                           ;main.c: 197: iLSByte = iCounter&0xFF;
  3954  0226  30FF               	movlw	255
  3955  0227  055D               	andwf	main@iCounter,w
  3956  0228  00D7               	movwf	main@iLSByte
  3957  0229  3000               	movlw	0
  3958  022A  055E               	andwf	main@iCounter+1,w
  3959  022B  00D8               	movwf	main@iLSByte+1
  3960                           
  3961                           ;main.c: 198: MYI2C_Write2LEDBytes(I2C_ADDRESS_FADELED0,iMSByte,iLSByte);
  3962  022C  085A               	movf	main@iMSByte,w
  3963  022D  00D3               	movwf	??_main
  3964  022E  0853               	movf	??_main,w
  3965  022F  00AE               	movwf	MYI2C_Write2LEDBytes@MSBWriteByte
  3966  0230  0857               	movf	main@iLSByte,w
  3967  0231  00D4               	movwf	??_main+1
  3968  0232  0854               	movf	??_main+1,w
  3969  0233  00AF               	movwf	MYI2C_Write2LEDBytes@LSBWriteByte
  3970  0234  0859               	movf	main@I2C_ADDRESS_FADELED0,w
  3971  0235  3182  2257  3181   	fcall	_MYI2C_Write2LEDBytes
  3972                           
  3973                           ;main.c: 200: prevFader8bitValue=fader8bitValue;
  3974  0238  0020               	movlb	0	; select bank0
  3975  0239  085C               	movf	main@fader8bitValue,w
  3976  023A  00D3               	movwf	??_main
  3977  023B  0853               	movf	??_main,w
  3978  023C  00D6               	movwf	main@prevFader8bitValue
  3979                           
  3980                           ;main.c: 203: iCounter++;
  3981  023D  3001               	movlw	1
  3982  023E  07DD               	addwf	main@iCounter,f
  3983  023F  3000               	movlw	0
  3984  0240  3DDE               	addwfc	main@iCounter+1,f
  3985                           
  3986                           ;main.c: 204: if (fader8bitValue<252)
  3987  0241  30FC               	movlw	252
  3988  0242  025C               	subwf	main@fader8bitValue,w
  3989  0243  1803               	skipnc
  3990  0244  29AA               	goto	l2091
  3991                           
  3992                           ;main.c: 205: delay(1*(255-fader8bitValue));
  3993  0245  085C               	movf	main@fader8bitValue,w
  3994  0246  00D3               	movwf	??_main
  3995  0247  01D4               	clrf	??_main+1
  3996  0248  09D3               	comf	??_main,f
  3997  0249  09D4               	comf	??_main+1,f
  3998  024A  0AD3               	incf	??_main,f
  3999  024B  1903               	skipnz
  4000  024C  0AD4               	incf	??_main+1,f
  4001  024D  0853               	movf	??_main,w
  4002  024E  3EFF               	addlw	255
  4003  024F  00A6               	movwf	delay@delaytime
  4004  0250  3000               	movlw	0
  4005  0251  3D54               	addwfc	??_main+1,w
  4006  0252  00A7               	movwf	delay@delaytime+1
  4007  0253  3183  232D  3181   	fcall	_delay
  4008  0256  29AA               	goto	l2091
  4009  0257                     __end_of_main:	
  4010                           
  4011                           	psect	text1
  4012  02CB                     __ptext1:	
  4013 ;; *************** function _blinkyLoop *****************
  4014 ;; Defined at:
  4015 ;;		line 86 in file "main.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  maxLoops        2   17[BANK0 ] int 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  loopCount       2   22[BANK0 ] int 
  4020 ;;  delayTime       2   20[BANK0 ] int 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;Total ram usage:        7 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    5
  4037 ;; This function calls:
  4038 ;;		___wmul
  4039 ;;		_delay
  4040 ;; This function is called by:
  4041 ;;		_main
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _blinkyLoop
  4047  02CB                     _blinkyLoop:	
  4048                           
  4049                           ;main.c: 87: int loopCount=maxLoops;
  4050                           
  4051                           ;incstack = 0
  4052                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4053  02CB  0020               	movlb	0	; select bank0
  4054  02CC  0832               	movf	blinkyLoop@maxLoops+1,w
  4055  02CD  00B7               	movwf	blinkyLoop@loopCount+1
  4056  02CE  0831               	movf	blinkyLoop@maxLoops,w
  4057  02CF  00B6               	movwf	blinkyLoop@loopCount
  4058                           
  4059                           ;main.c: 88: int delayTime;
  4060                           ;main.c: 90: ODCONB &= 0xE0;
  4061  02D0  30E0               	movlw	224
  4062  02D1  00B3               	movwf	??_blinkyLoop
  4063  02D2  0833               	movf	??_blinkyLoop,w
  4064  02D3  003E               	movlb	30	; select bank30
  4065  02D4  05C5               	andwf	69,f	;volatile
  4066                           
  4067                           ;main.c: 91: ODCONC &= 0x1F;
  4068  02D5  301F               	movlw	31
  4069  02D6  0020               	movlb	0	; select bank0
  4070  02D7  00B3               	movwf	??_blinkyLoop
  4071  02D8  0833               	movf	??_blinkyLoop,w
  4072  02D9  003E               	movlb	30	; select bank30
  4073  02DA  05D0               	andwf	80,f	;volatile
  4074  02DB                     l2067:	
  4075                           ;main.c: 92: while(loopCount>0){
  4076                           
  4077  02DB  0020               	movlb	0	; select bank0
  4078  02DC  0837               	movf	blinkyLoop@loopCount+1,w
  4079  02DD  3A80               	xorlw	128
  4080  02DE  00B3               	movwf	??_blinkyLoop
  4081  02DF  3080               	movlw	128
  4082  02E0  0233               	subwf	??_blinkyLoop,w
  4083  02E1  1D03               	skipz
  4084  02E2  2AE5               	goto	u1145
  4085  02E3  3001               	movlw	1
  4086  02E4  0236               	subwf	blinkyLoop@loopCount,w
  4087  02E5                     u1145:	
  4088  02E5  1C03               	btfss	3,0
  4089  02E6  2B1D               	goto	l2069
  4090                           
  4091                           ;main.c: 93: delayTime=loopCount*400;
  4092  02E7  0020               	movlb	0	; select bank0
  4093  02E8  0837               	movf	blinkyLoop@loopCount+1,w
  4094  02E9  00A1               	movwf	___wmul@multiplier+1
  4095  02EA  0836               	movf	blinkyLoop@loopCount,w
  4096  02EB  00A0               	movwf	___wmul@multiplier
  4097  02EC  3090               	movlw	144
  4098  02ED  00A2               	movwf	___wmul@multiplicand
  4099  02EE  3001               	movlw	1
  4100  02EF  00A3               	movwf	___wmul@multiplicand+1
  4101  02F0  3184  244C  3182   	fcall	___wmul
  4102  02F3  0020               	movlb	0	; select bank0
  4103  02F4  0821               	movf	?___wmul+1,w
  4104  02F5  00B5               	movwf	blinkyLoop@delayTime+1
  4105  02F6  0820               	movf	?___wmul,w
  4106  02F7  00B4               	movwf	blinkyLoop@delayTime
  4107                           
  4108                           ;main.c: 96: PORTB |= 0x1F;
  4109  02F8  301F               	movlw	31
  4110  02F9  00B3               	movwf	??_blinkyLoop
  4111  02FA  0833               	movf	??_blinkyLoop,w
  4112  02FB  048D               	iorwf	13,f	;volatile
  4113                           
  4114                           ;main.c: 97: PORTC |= 0xE0;
  4115  02FC  30E0               	movlw	224
  4116  02FD  00B3               	movwf	??_blinkyLoop
  4117  02FE  0833               	movf	??_blinkyLoop,w
  4118  02FF  048E               	iorwf	14,f	;volatile
  4119                           
  4120                           ;main.c: 99: delay(delayTime);
  4121  0300  0835               	movf	blinkyLoop@delayTime+1,w
  4122  0301  00A7               	movwf	delay@delaytime+1
  4123  0302  0834               	movf	blinkyLoop@delayTime,w
  4124  0303  00A6               	movwf	delay@delaytime
  4125  0304  3183  232D  3182   	fcall	_delay
  4126                           
  4127                           ;main.c: 101: PORTB &= 0xE0;
  4128  0307  30E0               	movlw	224
  4129  0308  0020               	movlb	0	; select bank0
  4130  0309  00B3               	movwf	??_blinkyLoop
  4131  030A  0833               	movf	??_blinkyLoop,w
  4132  030B  058D               	andwf	13,f	;volatile
  4133                           
  4134                           ;main.c: 102: PORTC &= 0x1F;
  4135  030C  301F               	movlw	31
  4136  030D  00B3               	movwf	??_blinkyLoop
  4137  030E  0833               	movf	??_blinkyLoop,w
  4138  030F  058E               	andwf	14,f	;volatile
  4139                           
  4140                           ;main.c: 104: delay(delayTime);
  4141  0310  0835               	movf	blinkyLoop@delayTime+1,w
  4142  0311  00A7               	movwf	delay@delaytime+1
  4143  0312  0834               	movf	blinkyLoop@delayTime,w
  4144  0313  00A6               	movwf	delay@delaytime
  4145  0314  3183  232D  3182   	fcall	_delay
  4146                           
  4147                           ;main.c: 106: loopCount--;
  4148  0317  30FF               	movlw	255
  4149  0318  0020               	movlb	0	; select bank0
  4150  0319  07B6               	addwf	blinkyLoop@loopCount,f
  4151  031A  30FF               	movlw	255
  4152  031B  3DB7               	addwfc	blinkyLoop@loopCount+1,f
  4153  031C  2ADB               	goto	l2067
  4154  031D                     l2069:	
  4155                           
  4156                           ;main.c: 107: }
  4157                           ;main.c: 108: PORTB |= 0x1F;
  4158  031D  301F               	movlw	31
  4159  031E  0020               	movlb	0	; select bank0
  4160  031F  00B3               	movwf	??_blinkyLoop
  4161  0320  0833               	movf	??_blinkyLoop,w
  4162  0321  048D               	iorwf	13,f	;volatile
  4163                           
  4164                           ;main.c: 109: PORTC |= 0xE0;
  4165  0322  30E0               	movlw	224
  4166  0323  00B3               	movwf	??_blinkyLoop
  4167  0324  0833               	movf	??_blinkyLoop,w
  4168  0325  048E               	iorwf	14,f	;volatile
  4169                           
  4170                           ;main.c: 110: delay(5000);
  4171  0326  3088               	movlw	136
  4172  0327  00A6               	movwf	delay@delaytime
  4173  0328  3013               	movlw	19
  4174  0329  00A7               	movwf	delay@delaytime+1
  4175  032A  3183  232D         	fcall	_delay
  4176  032C  0008               	return
  4177  032D                     __end_of_blinkyLoop:	
  4178                           ;main.c: 111: return;
  4179                           
  4180                           
  4181                           	psect	text2
  4182  032D                     __ptext2:	
  4183 ;; *************** function _delay *****************
  4184 ;; Defined at:
  4185 ;;		line 78 in file "main.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  delaytime       2    6[BANK0 ] int 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  counter         4   13[BANK0 ] long 
  4190 ;;  adjustedDela    4    9[BANK0 ] long 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:       11 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    4
  4207 ;; This function calls:
  4208 ;;		___wmul
  4209 ;; This function is called by:
  4210 ;;		_blinkyLoop
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _delay
  4217  032D                     _delay:	
  4218                           
  4219                           ;main.c: 79: long counter = 0;
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4223  032D  3000               	movlw	0
  4224  032E  0020               	movlb	0	; select bank0
  4225  032F  00B0               	movwf	delay@counter+3
  4226  0330  3000               	movlw	0
  4227  0331  00AF               	movwf	delay@counter+2
  4228  0332  3000               	movlw	0
  4229  0333  00AE               	movwf	delay@counter+1
  4230  0334  3000               	movlw	0
  4231  0335  00AD               	movwf	delay@counter
  4232                           
  4233                           ;main.c: 80: long adjustedDelaytime=delaytime*cMstrClkAdjust;
  4234  0336  0827               	movf	delay@delaytime+1,w
  4235  0337  00A1               	movwf	___wmul@multiplier+1
  4236  0338  0826               	movf	delay@delaytime,w
  4237  0339  00A0               	movwf	___wmul@multiplier
  4238  033A  3021               	movlw	low (_cMstrClkAdjust| (0+32768))
  4239  033B  0084               	movwf	4
  4240  033C  3085               	movlw	high (_cMstrClkAdjust| (0+32768))
  4241  033D  0085               	movwf	5
  4242  033E  3F00               	moviw [0]fsr0
  4243  033F  00A2               	movwf	___wmul@multiplicand
  4244  0340  3F01               	moviw [1]fsr0
  4245  0341  00A3               	movwf	___wmul@multiplicand+1
  4246  0342  3184  244C  3183   	fcall	___wmul
  4247  0345  0020               	movlb	0	; select bank0
  4248  0346  0820               	movf	?___wmul,w
  4249  0347  00A9               	movwf	delay@adjustedDelaytime
  4250  0348  0821               	movf	?___wmul+1,w
  4251  0349  00AA               	movwf	delay@adjustedDelaytime+1
  4252  034A  0D89               	rlf	9,f
  4253  034B  3B89               	subwfb	9,f
  4254  034C  0989               	comf	9,f
  4255  034D  00AB               	movwf	delay@adjustedDelaytime+2
  4256  034E  00AC               	movwf	delay@adjustedDelaytime+3
  4257                           
  4258                           ;main.c: 81: if (0<delaytime)
  4259  034F  0827               	movf	delay@delaytime+1,w
  4260  0350  3A80               	xorlw	128
  4261  0351  00A8               	movwf	??_delay
  4262  0352  3080               	movlw	128
  4263  0353  0228               	subwf	??_delay,w
  4264  0354  1D03               	skipz
  4265  0355  2B58               	goto	u1115
  4266  0356  3001               	movlw	1
  4267  0357  0226               	subwf	delay@delaytime,w
  4268  0358                     u1115:	
  4269  0358  1C03               	skipc
  4270  0359  0008               	return
  4271                           
  4272                           ;main.c: 82: for (counter = 0; counter<adjustedDelaytime; counter++);
  4273  035A  3000               	movlw	0
  4274  035B  0020               	movlb	0	; select bank0
  4275  035C  00B0               	movwf	delay@counter+3
  4276  035D  3000               	movlw	0
  4277  035E  00AF               	movwf	delay@counter+2
  4278  035F  3000               	movlw	0
  4279  0360  00AE               	movwf	delay@counter+1
  4280  0361  3000               	movlw	0
  4281  0362  00AD               	movwf	delay@counter
  4282  0363                     l422:	
  4283  0363  0830               	movf	delay@counter+3,w
  4284  0364  3A80               	xorlw	128
  4285  0365  00A8               	movwf	??_delay
  4286  0366  082C               	movf	delay@adjustedDelaytime+3,w
  4287  0367  3A80               	xorlw	128
  4288  0368  0228               	subwf	??_delay,w
  4289  0369  1D03               	skipz
  4290  036A  2B75               	goto	u1123
  4291  036B  082B               	movf	delay@adjustedDelaytime+2,w
  4292  036C  022F               	subwf	delay@counter+2,w
  4293  036D  1D03               	skipz
  4294  036E  2B75               	goto	u1123
  4295  036F  082A               	movf	delay@adjustedDelaytime+1,w
  4296  0370  022E               	subwf	delay@counter+1,w
  4297  0371  1D03               	skipz
  4298  0372  2B75               	goto	u1123
  4299  0373  0829               	movf	delay@adjustedDelaytime,w
  4300  0374  022D               	subwf	delay@counter,w
  4301  0375                     u1123:	
  4302  0375  1803               	btfsc	3,0
  4303  0376  0008               	return
  4304  0377  3001               	movlw	1
  4305  0378  07AD               	addwf	delay@counter,f
  4306  0379  3000               	movlw	0
  4307  037A  3DAE               	addwfc	delay@counter+1,f
  4308  037B  3000               	movlw	0
  4309  037C  3DAF               	addwfc	delay@counter+2,f
  4310  037D  3000               	movlw	0
  4311  037E  3DB0               	addwfc	delay@counter+3,f
  4312  037F  2B63               	goto	l422
  4313  0380                     __end_of_delay:	
  4314                           
  4315                           	psect	text3
  4316  044C                     __ptext3:	
  4317 ;; *************** function ___wmul *****************
  4318 ;; Defined at:
  4319 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4322 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  product         2    4[BANK0 ] unsigned int 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  2    0[BANK0 ] unsigned int 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4334 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;Total ram usage:        6 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    3
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_delay
  4345 ;;		_blinkyLoop
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function ___wmul
  4351  044C                     ___wmul:	
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4355  044C  0020               	movlb	0	; select bank0
  4356  044D  01A4               	clrf	___wmul@product
  4357  044E  01A5               	clrf	___wmul@product+1
  4358  044F                     l1951:	
  4359  044F  1C20               	btfss	___wmul@multiplier,0
  4360  0450  2C55               	goto	l545
  4361  0451  0822               	movf	___wmul@multiplicand,w
  4362  0452  07A4               	addwf	___wmul@product,f
  4363  0453  0823               	movf	___wmul@multiplicand+1,w
  4364  0454  3DA5               	addwfc	___wmul@product+1,f
  4365  0455                     l545:	
  4366  0455  3001               	movlw	1
  4367  0456                     u1065:	
  4368  0456  35A2               	lslf	___wmul@multiplicand,f
  4369  0457  0DA3               	rlf	___wmul@multiplicand+1,f
  4370  0458  0B89               	decfsz	9,f
  4371  0459  2C56               	goto	u1065
  4372  045A  3001               	movlw	1
  4373  045B                     u1075:	
  4374  045B  36A1               	lsrf	___wmul@multiplier+1,f
  4375  045C  0CA0               	rrf	___wmul@multiplier,f
  4376  045D  0B89               	decfsz	9,f
  4377  045E  2C5B               	goto	u1075
  4378  045F  0820               	movf	___wmul@multiplier,w
  4379  0460  0421               	iorwf	___wmul@multiplier+1,w
  4380  0461  1D03               	btfss	3,2
  4381  0462  2C4F               	goto	l1951
  4382  0463  0825               	movf	___wmul@product+1,w
  4383  0464  00A1               	movwf	?___wmul+1
  4384  0465  0824               	movf	___wmul@product,w
  4385  0466  00A0               	movwf	?___wmul
  4386  0467  0008               	return
  4387  0468                     __end_of___wmul:	
  4388                           
  4389                           	psect	text4
  4390  0500                     __ptext4:	
  4391 ;; *************** function _SYSTEM_Initialize *****************
  4392 ;; Defined at:
  4393 ;;		line 83 in file "mcc_generated_files/mcc.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0, pclath, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    4
  4414 ;; This function calls:
  4415 ;;		_ADCC_Initialize
  4416 ;;		_I2C1_Initialize
  4417 ;;		_OSCILLATOR_Initialize
  4418 ;;		_PIN_MANAGER_Initialize
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function _SYSTEM_Initialize
  4426  0500                     _SYSTEM_Initialize:	
  4427                           
  4428                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  4429                           
  4430                           ;incstack = 0
  4431                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4432  0500  3183  23C6  3185   	fcall	_PIN_MANAGER_Initialize
  4433                           
  4434                           ;mcc.c: 87: OSCILLATOR_Initialize();
  4435  0503  3185  250C  3185   	fcall	_OSCILLATOR_Initialize
  4436                           
  4437                           ;mcc.c: 88: I2C1_Initialize();
  4438  0506  3184  24B3  3185   	fcall	_I2C1_Initialize
  4439                           
  4440                           ;mcc.c: 89: ADCC_Initialize();
  4441  0509  3184  2468         	fcall	_ADCC_Initialize
  4442  050B  0008               	return
  4443  050C                     __end_of_SYSTEM_Initialize:	
  4444                           
  4445                           	psect	text5
  4446  03C6                     __ptext5:	
  4447 ;; *************** function _PIN_MANAGER_Initialize *****************
  4448 ;; Defined at:
  4449 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  state           1    0[BANK0 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;Total ram usage:        1 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    3
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_SYSTEM_Initialize
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           
  4478                           ;psect for function _PIN_MANAGER_Initialize
  4479  03C6                     _PIN_MANAGER_Initialize:	
  4480                           
  4481                           ;pin_manager.c: 57: LATA = 0x00;
  4482                           
  4483                           ;incstack = 0
  4484                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4485  03C6  0020               	movlb	0	; select bank0
  4486  03C7  0196               	clrf	22	;volatile
  4487                           
  4488                           ;pin_manager.c: 58: LATB = 0x00;
  4489  03C8  0197               	clrf	23	;volatile
  4490                           
  4491                           ;pin_manager.c: 59: LATC = 0x00;
  4492  03C9  0198               	clrf	24	;volatile
  4493                           
  4494                           ;pin_manager.c: 64: TRISA = 0xFF;
  4495  03CA  30FF               	movlw	255
  4496  03CB  0091               	movwf	17	;volatile
  4497                           
  4498                           ;pin_manager.c: 65: TRISB = 0xE0;
  4499  03CC  30E0               	movlw	224
  4500  03CD  0092               	movwf	18	;volatile
  4501                           
  4502                           ;pin_manager.c: 66: TRISC = 0x1D;
  4503  03CE  301D               	movlw	29
  4504  03CF  0093               	movwf	19	;volatile
  4505                           
  4506                           ;pin_manager.c: 71: ANSELC = 0xE7;
  4507  03D0  30E7               	movlw	231
  4508  03D1  003E               	movlb	30	; select bank30
  4509  03D2  00CE               	movwf	78	;volatile
  4510                           
  4511                           ;pin_manager.c: 72: ANSELB = 0x1F;
  4512  03D3  301F               	movlw	31
  4513  03D4  00C3               	movwf	67	;volatile
  4514                           
  4515                           ;pin_manager.c: 73: ANSELA = 0xFF;
  4516  03D5  30FF               	movlw	255
  4517  03D6  00B8               	movwf	56	;volatile
  4518                           
  4519                           ;pin_manager.c: 78: WPUE = 0x00;
  4520  03D7  01E5               	clrf	101	;volatile
  4521                           
  4522                           ;pin_manager.c: 79: WPUB = 0x00;
  4523  03D8  01C4               	clrf	68	;volatile
  4524                           
  4525                           ;pin_manager.c: 80: WPUA = 0x00;
  4526  03D9  01B9               	clrf	57	;volatile
  4527                           
  4528                           ;pin_manager.c: 81: WPUC = 0x00;
  4529  03DA  01CF               	clrf	79	;volatile
  4530                           
  4531                           ;pin_manager.c: 86: ODCONA = 0x00;
  4532  03DB  01BA               	clrf	58	;volatile
  4533                           
  4534                           ;pin_manager.c: 87: ODCONB = 0x00;
  4535  03DC  01C5               	clrf	69	;volatile
  4536                           
  4537                           ;pin_manager.c: 88: ODCONC = 0x00;
  4538  03DD  01D0               	clrf	80	;volatile
  4539                           
  4540                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  4541  03DE  3000               	movlw	0
  4542  03DF  1B8B               	btfsc	11,7	;volatile
  4543  03E0  3001               	movlw	1
  4544  03E1  0020               	movlb	0	; select bank0
  4545  03E2  00A0               	movwf	PIN_MANAGER_Initialize@state
  4546                           
  4547                           ;pin_manager.c: 96: GIE = 0;
  4548  03E3  138B               	bcf	11,7	;volatile
  4549                           
  4550                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  4551  03E4  3055               	movlw	85
  4552  03E5  003D               	movlb	29	; select bank29
  4553  03E6  008F               	movwf	15	;volatile
  4554                           
  4555                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  4556  03E7  30AA               	movlw	170
  4557  03E8  008F               	movwf	15	;volatile
  4558                           
  4559                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  4560  03E9  100F               	bcf	15,0	;volatile
  4561                           
  4562                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  4563  03EA  0846               	movf	70,w	;volatile
  4564  03EB  39E0               	andlw	-32
  4565  03EC  3813               	iorlw	19
  4566  03ED  00C6               	movwf	70	;volatile
  4567                           
  4568                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  4569  03EE  0845               	movf	69,w	;volatile
  4570  03EF  39E0               	andlw	-32
  4571  03F0  3814               	iorlw	20
  4572  03F1  00C5               	movwf	69	;volatile
  4573                           
  4574                           ;pin_manager.c: 103: RC3PPS = 0x15;
  4575  03F2  3015               	movlw	21
  4576  03F3  003E               	movlb	30	; select bank30
  4577  03F4  00A3               	movwf	35	;volatile
  4578                           
  4579                           ;pin_manager.c: 104: RC4PPS = 0x14;
  4580  03F5  3014               	movlw	20
  4581  03F6  00A4               	movwf	36	;volatile
  4582                           
  4583                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  4584  03F7  3055               	movlw	85
  4585  03F8  003D               	movlb	29	; select bank29
  4586  03F9  008F               	movwf	15	;volatile
  4587                           
  4588                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  4589  03FA  30AA               	movlw	170
  4590  03FB  008F               	movwf	15	;volatile
  4591                           
  4592                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  4593  03FC  140F               	bsf	15,0	;volatile
  4594                           
  4595                           ;pin_manager.c: 110: GIE = state;
  4596  03FD  0020               	movlb	0	; select bank0
  4597  03FE  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  4598  03FF  2C02               	goto	u1090
  4599  0400  178B               	bsf	11,7	;volatile
  4600  0401  0008               	return
  4601  0402                     u1090:	
  4602  0402  138B               	bcf	11,7	;volatile
  4603  0403  0008               	return
  4604  0404                     __end_of_PIN_MANAGER_Initialize:	
  4605                           
  4606                           	psect	text6
  4607  050C                     __ptext6:	
  4608 ;; *************** function _OSCILLATOR_Initialize *****************
  4609 ;; Defined at:
  4610 ;;		line 92 in file "mcc_generated_files/mcc.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    3
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_SYSTEM_Initialize
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           
  4639                           ;psect for function _OSCILLATOR_Initialize
  4640  050C                     _OSCILLATOR_Initialize:	
  4641                           
  4642                           ;mcc.c: 95: OSCCON1 = 0x60;
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4646  050C  3060               	movlw	96
  4647  050D  0031               	movlb	17	; select bank17
  4648  050E  008D               	movwf	13	;volatile
  4649                           
  4650                           ;mcc.c: 97: OSCCON3 = 0x00;
  4651  050F  018F               	clrf	15	;volatile
  4652                           
  4653                           ;mcc.c: 99: OSCEN = 0x00;
  4654  0510  0191               	clrf	17	;volatile
  4655                           
  4656                           ;mcc.c: 101: OSCFRQ = 0x06;
  4657  0511  3006               	movlw	6
  4658  0512  0093               	movwf	19	;volatile
  4659                           
  4660                           ;mcc.c: 103: OSCTUNE = 0x00;
  4661  0513  0192               	clrf	18	;volatile
  4662  0514  0008               	return
  4663  0515                     __end_of_OSCILLATOR_Initialize:	
  4664                           
  4665                           	psect	text7
  4666  04B3                     __ptext7:	
  4667 ;; *************** function _I2C1_Initialize *****************
  4668 ;; Defined at:
  4669 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;Total ram usage:        1 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    3
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_SYSTEM_Initialize
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function _I2C1_Initialize
  4699  04B3                     _I2C1_Initialize:	
  4700                           
  4701                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  4705  04B3  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  4706  04B4  0020               	movlb	0	; select bank0
  4707  04B5  00A0               	movwf	??_I2C1_Initialize
  4708  04B6  0820               	movf	??_I2C1_Initialize,w
  4709  04B7  00E2               	movwf	low ((_i2c1_object| 0+1))
  4710                           
  4711                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  4712  04B8  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  4713  04B9  00A0               	movwf	??_I2C1_Initialize
  4714  04BA  0820               	movf	??_I2C1_Initialize,w
  4715  04BB  00E1               	movwf	_i2c1_object
  4716                           
  4717                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  4718  04BC  14E3               	bsf	_i2c1_object+2,1
  4719                           
  4720                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  4721  04BD  1063               	bcf	_i2c1_object+2,0
  4722                           
  4723                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  4724  04BE  01E5               	clrf	_i2c1_object+4
  4725                           
  4726                           ;i2c1.c: 208: SSP1STAT = 0x00;
  4727  04BF  0023               	movlb	3	; select bank3
  4728  04C0  018F               	clrf	15	;volatile
  4729                           
  4730                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  4731  04C1  3028               	movlw	40
  4732  04C2  0090               	movwf	16	;volatile
  4733                           
  4734                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  4735  04C3  0192               	clrf	18	;volatile
  4736                           
  4737                           ;i2c1.c: 214: SSP1ADD = 0x13;
  4738  04C4  3013               	movlw	19
  4739  04C5  008D               	movwf	13	;volatile
  4740                           
  4741                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  4742  04C6  002E               	movlb	14	; select bank14
  4743  04C7  100F               	bcf	15,0	;volatile
  4744                           
  4745                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  4746  04C8  1419               	bsf	25,0	;volatile
  4747  04C9  0008               	return
  4748  04CA                     __end_of_I2C1_Initialize:	
  4749                           
  4750                           	psect	text8
  4751  0468                     __ptext8:	
  4752 ;; *************** function _ADCC_Initialize *****************
  4753 ;; Defined at:
  4754 ;;		line 62 in file "mcc_generated_files/adcc.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;		None
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  1    wreg      void 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;Total ram usage:        0 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    3
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_SYSTEM_Initialize
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _ADCC_Initialize
  4784  0468                     _ADCC_Initialize:	
  4785                           
  4786                           ;adcc.c: 66: ADCON1 = 0x00;
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  4790  0468  0021               	movlb	1	; select bank1
  4791  0469  0194               	clrf	20	;volatile
  4792                           
  4793                           ;adcc.c: 68: ADCON2 = 0x03;
  4794  046A  3003               	movlw	3
  4795  046B  0095               	movwf	21	;volatile
  4796                           
  4797                           ;adcc.c: 70: ADCON3 = 0x00;
  4798  046C  0196               	clrf	22	;volatile
  4799                           
  4800                           ;adcc.c: 72: ADACT = 0x00;
  4801  046D  0199               	clrf	25	;volatile
  4802                           
  4803                           ;adcc.c: 74: ADSTAT = 0x00;
  4804  046E  0197               	clrf	23	;volatile
  4805                           
  4806                           ;adcc.c: 76: ADCLK = 0x0F;
  4807  046F  300F               	movlw	15
  4808  0470  0098               	movwf	24	;volatile
  4809                           
  4810                           ;adcc.c: 78: ADREF = 0x00;
  4811  0471  019A               	clrf	26	;volatile
  4812                           
  4813                           ;adcc.c: 80: ADCAP = 0x00;
  4814  0472  019B               	clrf	27	;volatile
  4815                           
  4816                           ;adcc.c: 82: ADPRE = 0x00;
  4817  0473  019C               	clrf	28	;volatile
  4818                           
  4819                           ;adcc.c: 84: ADACQ = 0x04;
  4820  0474  3004               	movlw	4
  4821  0475  009D               	movwf	29	;volatile
  4822                           
  4823                           ;adcc.c: 86: ADPCH = 0x00;
  4824  0476  019E               	clrf	30	;volatile
  4825                           
  4826                           ;adcc.c: 88: ADRPT = 0x00;
  4827  0477  0022               	movlb	2	; select bank2
  4828  0478  018D               	clrf	13	;volatile
  4829                           
  4830                           ;adcc.c: 90: ADLTHL = 0x00;
  4831  0479  018E               	clrf	14	;volatile
  4832                           
  4833                           ;adcc.c: 92: ADLTHH = 0x00;
  4834  047A  018F               	clrf	15	;volatile
  4835                           
  4836                           ;adcc.c: 94: ADUTHL = 0x00;
  4837  047B  0190               	clrf	16	;volatile
  4838                           
  4839                           ;adcc.c: 96: ADUTHH = 0x00;
  4840  047C  0191               	clrf	17	;volatile
  4841                           
  4842                           ;adcc.c: 98: ADSTPTL = 0x00;
  4843  047D  0192               	clrf	18	;volatile
  4844                           
  4845                           ;adcc.c: 100: ADSTPTH = 0x00;
  4846  047E  0193               	clrf	19	;volatile
  4847                           
  4848                           ;adcc.c: 103: ADCON0 = 0x84;
  4849  047F  3084               	movlw	132
  4850  0480  0021               	movlb	1	; select bank1
  4851  0481  0093               	movwf	19	;volatile
  4852  0482  0008               	return
  4853  0483                     __end_of_ADCC_Initialize:	
  4854                           
  4855                           	psect	text9
  4856  0257                     __ptext9:	
  4857 ;; *************** function _MYI2C_Write2LEDBytes *****************
  4858 ;; Defined at:
  4859 ;;		line 209 in file "main.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  slaveDeviceA    1    wreg     unsigned char 
  4862 ;;  MSBWriteByte    1   14[BANK0 ] unsigned char 
  4863 ;;  LSBWriteByte    1   15[BANK0 ] unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  slaveDeviceA    1   41[BANK0 ] unsigned char 
  4866 ;;  sourceData     16   20[BANK0 ] unsigned char [16]
  4867 ;;  writeBuffer     3   47[BANK0 ] unsigned char [3]
  4868 ;;  timeOut         2   44[BANK0 ] unsigned int 
  4869 ;;  counter         2   42[BANK0 ] unsigned int 
  4870 ;;  nCount          2   39[BANK0 ] unsigned int 
  4871 ;;  dataAddress     2   36[BANK0 ] unsigned int 
  4872 ;;  pData           2    0        PTR unsigned char 
  4873 ;;  status          1   50[BANK0 ] enum E14261
  4874 ;;  pointerByte     1   46[BANK0 ] unsigned char 
  4875 ;;  pD              1   38[BANK0 ] PTR unsigned char 
  4876 ;;		 -> MYI2C_Write2LEDBytes@sourceData(16), 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4886 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;Total ram usage:       37 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    5
  4893 ;; This function calls:
  4894 ;;		_I2C1_MasterWrite
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function _MYI2C_Write2LEDBytes
  4902  0257                     _MYI2C_Write2LEDBytes:	
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in _MYI2C_Write2LEDBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4906                           ;MYI2C_Write2LEDBytes@slaveDeviceAddress stored from wreg
  4907  0257  0020               	movlb	0	; select bank0
  4908  0258  00C9               	movwf	MYI2C_Write2LEDBytes@slaveDeviceAddress
  4909                           
  4910                           ;main.c: 220: uint16_t dataAddress;
  4911                           ;main.c: 221: uint8_t sourceData[16] = { 0xA0, 0xA1, 0xA2, 0xA3,
  4912                           ;main.c: 222: 0xA4, 0xA5, 0xA6, 0xA7,
  4913                           ;main.c: 223: 0xA8, 0xA9, 0xAA, 0xAB,
  4914                           ;main.c: 224: 0xAC, 0xAD, 0xAE, 0xAF };
  4915  0259  30A0               	movlw	low MYI2C_Write2LEDBytes@F14421
  4916  025A  0086               	movwf	6
  4917  025B  3000               	movlw	high MYI2C_Write2LEDBytes@F14421
  4918  025C  0087               	movwf	7
  4919  025D  3034               	movlw	low MYI2C_Write2LEDBytes@sourceData
  4920  025E  0084               	movwf	4
  4921  025F  3000               	movlw	high MYI2C_Write2LEDBytes@sourceData
  4922  0260  0085               	movwf	5
  4923  0261  3010               	movlw	16
  4924  0262  00B0               	movwf	??_MYI2C_Write2LEDBytes
  4925  0263                     u870:	
  4926  0263  0016               	moviw fsr1++
  4927  0264  001A               	movwi fsr0++
  4928  0265  0BB0               	decfsz	??_MYI2C_Write2LEDBytes,f
  4929  0266  2A63               	goto	u870
  4930                           
  4931                           ;main.c: 225: uint8_t *pData;
  4932                           ;main.c: 226: uint16_t nCount;
  4933                           ;main.c: 228: uint8_t writeBuffer[3];
  4934                           ;main.c: 229: uint8_t *pD;
  4935                           ;main.c: 230: uint16_t counter, timeOut;
  4936                           ;main.c: 231: uint8_t pointerByte = 0b00100000;
  4937  0267  3020               	movlw	32
  4938  0268  00B0               	movwf	??_MYI2C_Write2LEDBytes
  4939  0269  0830               	movf	??_MYI2C_Write2LEDBytes,w
  4940  026A  00CE               	movwf	MYI2C_Write2LEDBytes@pointerByte
  4941                           
  4942                           ;main.c: 233: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  4943  026B  3002               	movlw	2
  4944  026C  00B0               	movwf	??_MYI2C_Write2LEDBytes
  4945  026D  0830               	movf	??_MYI2C_Write2LEDBytes,w
  4946  026E  00D2               	movwf	MYI2C_Write2LEDBytes@status
  4947                           
  4948                           ;main.c: 235: dataAddress = 0x00;
  4949  026F  01C4               	clrf	MYI2C_Write2LEDBytes@dataAddress
  4950  0270  01C5               	clrf	MYI2C_Write2LEDBytes@dataAddress+1
  4951                           
  4952                           ;main.c: 236: pD = sourceData;
  4953  0271  3034               	movlw	(low (MYI2C_Write2LEDBytes@sourceData| 0))& (0+255)
  4954  0272  00B0               	movwf	??_MYI2C_Write2LEDBytes
  4955  0273  0830               	movf	??_MYI2C_Write2LEDBytes,w
  4956  0274  00C6               	movwf	MYI2C_Write2LEDBytes@pD
  4957                           
  4958                           ;main.c: 237: nCount = 1;
  4959  0275  3001               	movlw	1
  4960  0276  00C7               	movwf	MYI2C_Write2LEDBytes@nCount
  4961  0277  3000               	movlw	0
  4962  0278  00C8               	movwf	MYI2C_Write2LEDBytes@nCount+1
  4963                           
  4964                           ;main.c: 241: PORTC |= 0x02;
  4965  0279  148E               	bsf	14,1	;volatile
  4966                           
  4967                           ;main.c: 243: for (counter = 0; counter < nCount; counter++)
  4968  027A  01CA               	clrf	MYI2C_Write2LEDBytes@counter
  4969  027B  01CB               	clrf	MYI2C_Write2LEDBytes@counter+1
  4970  027C                     l450:	
  4971  027C  0848               	movf	MYI2C_Write2LEDBytes@nCount+1,w
  4972  027D  024B               	subwf	MYI2C_Write2LEDBytes@counter+1,w
  4973  027E  1D03               	skipz
  4974  027F  2A82               	goto	u935
  4975  0280  0847               	movf	MYI2C_Write2LEDBytes@nCount,w
  4976  0281  024A               	subwf	MYI2C_Write2LEDBytes@counter,w
  4977  0282                     u935:	
  4978  0282  1803               	btfsc	3,0
  4979  0283  2AC6               	goto	l1857
  4980                           
  4981                           ;main.c: 244: {
  4982                           ;main.c: 247: writeBuffer[0] = pointerByte;
  4983  0284  084E               	movf	MYI2C_Write2LEDBytes@pointerByte,w
  4984  0285  00B0               	movwf	??_MYI2C_Write2LEDBytes
  4985  0286  0830               	movf	??_MYI2C_Write2LEDBytes,w
  4986  0287  00CF               	movwf	MYI2C_Write2LEDBytes@writeBuffer
  4987                           
  4988                           ;main.c: 249: writeBuffer[1] = (MSBWriteByte);
  4989  0288  082E               	movf	MYI2C_Write2LEDBytes@MSBWriteByte,w
  4990  0289  00B0               	movwf	??_MYI2C_Write2LEDBytes
  4991  028A  0830               	movf	??_MYI2C_Write2LEDBytes,w
  4992  028B  00D0               	movwf	MYI2C_Write2LEDBytes@writeBuffer+1
  4993                           
  4994                           ;main.c: 250: writeBuffer[2] = (LSBWriteByte);
  4995  028C  082F               	movf	MYI2C_Write2LEDBytes@LSBWriteByte,w
  4996  028D  00B0               	movwf	??_MYI2C_Write2LEDBytes
  4997  028E  0830               	movf	??_MYI2C_Write2LEDBytes,w
  4998  028F  00D1               	movwf	MYI2C_Write2LEDBytes@writeBuffer+2
  4999                           
  5000                           ;main.c: 255: timeOut = 0;
  5001  0290  01CC               	clrf	MYI2C_Write2LEDBytes@timeOut
  5002  0291  01CD               	clrf	MYI2C_Write2LEDBytes@timeOut+1
  5003  0292                     l1849:	
  5004                           ;main.c: 256: while(status != I2C1_MESSAGE_FAIL)
  5005                           
  5006  0292  0352               	decf	MYI2C_Write2LEDBytes@status,w
  5007  0293  1903               	btfsc	3,2
  5008  0294  2ABA               	goto	l1851
  5009                           
  5010                           ;main.c: 257: {
  5011                           ;main.c: 259: I2C1_MasterWrite( writeBuffer,
  5012                           ;main.c: 260: 3,
  5013                           ;main.c: 261: slaveDeviceAddress,
  5014                           ;main.c: 262: &status);
  5015  0295  3003               	movlw	3
  5016  0296  00B0               	movwf	??_MYI2C_Write2LEDBytes
  5017  0297  0830               	movf	??_MYI2C_Write2LEDBytes,w
  5018  0298  00A7               	movwf	I2C1_MasterWrite@length
  5019  0299  0849               	movf	MYI2C_Write2LEDBytes@slaveDeviceAddress,w
  5020  029A  00B1               	movwf	??_MYI2C_Write2LEDBytes+1
  5021  029B  01B2               	clrf	??_MYI2C_Write2LEDBytes+2
  5022  029C  0831               	movf	??_MYI2C_Write2LEDBytes+1,w
  5023  029D  00A8               	movwf	I2C1_MasterWrite@address
  5024  029E  0832               	movf	??_MYI2C_Write2LEDBytes+2,w
  5025  029F  00A9               	movwf	I2C1_MasterWrite@address+1
  5026  02A0  3052               	movlw	(low (MYI2C_Write2LEDBytes@status| 0))& (0+255)
  5027  02A1  00B3               	movwf	??_MYI2C_Write2LEDBytes+3
  5028  02A2  0833               	movf	??_MYI2C_Write2LEDBytes+3,w
  5029  02A3  00AA               	movwf	I2C1_MasterWrite@pflag
  5030  02A4  304F               	movlw	(low (MYI2C_Write2LEDBytes@writeBuffer| 0))& (0+255)
  5031  02A5  3184  2404  3182   	fcall	_I2C1_MasterWrite
  5032  02A8                     l1835:	
  5033                           ;main.c: 265: while(status == I2C1_MESSAGE_PENDING);
  5034                           
  5035  02A8  3002               	movlw	2
  5036  02A9  0020               	movlb	0	; select bank0
  5037  02AA  0652               	xorwf	MYI2C_Write2LEDBytes@status,w
  5038  02AB  1903               	btfsc	3,2
  5039  02AC  2AA8               	goto	l1835
  5040                           
  5041                           ;main.c: 267: if (status == I2C1_MESSAGE_COMPLETE)
  5042  02AD  0852               	movf	MYI2C_Write2LEDBytes@status,w
  5043  02AE  1903               	btfsc	3,2
  5044  02AF  2ABA               	goto	l1851
  5045                           
  5046                           ;main.c: 277: if (timeOut == 100)
  5047                           
  5048                           ;main.c: 268: break;
  5049  02B0  3064               	movlw	100
  5050  02B1  064C               	xorwf	MYI2C_Write2LEDBytes@timeOut,w
  5051  02B2  044D               	iorwf	MYI2C_Write2LEDBytes@timeOut+1,w
  5052  02B3  1903               	btfsc	3,2
  5053  02B4  2ABA               	goto	l1851
  5054                           
  5055                           ;main.c: 279: else
  5056                           ;main.c: 280: timeOut++;
  5057                           
  5058                           ;main.c: 278: break;
  5059  02B5  3001               	movlw	1
  5060  02B6  07CC               	addwf	MYI2C_Write2LEDBytes@timeOut,f
  5061  02B7  3000               	movlw	0
  5062  02B8  3DCD               	addwfc	MYI2C_Write2LEDBytes@timeOut+1,f
  5063  02B9  2A92               	goto	l1849
  5064  02BA                     l1851:	
  5065                           
  5066                           ;main.c: 281: }
  5067                           ;main.c: 283: if (status == I2C1_MESSAGE_FAIL)
  5068  02BA  0352               	decf	MYI2C_Write2LEDBytes@status,w
  5069  02BB  1903               	btfsc	3,2
  5070  02BC  2AC6               	goto	l1857
  5071                           
  5072                           ;main.c: 286: }
  5073                           ;main.c: 287: dataAddress++;
  5074                           
  5075                           ;main.c: 284: {
  5076                           ;main.c: 285: break;
  5077  02BD  3001               	movlw	1
  5078  02BE  07C4               	addwf	MYI2C_Write2LEDBytes@dataAddress,f
  5079  02BF  3000               	movlw	0
  5080  02C0  3DC5               	addwfc	MYI2C_Write2LEDBytes@dataAddress+1,f
  5081  02C1  3001               	movlw	1
  5082  02C2  07CA               	addwf	MYI2C_Write2LEDBytes@counter,f
  5083  02C3  3000               	movlw	0
  5084  02C4  3DCB               	addwfc	MYI2C_Write2LEDBytes@counter+1,f
  5085  02C5  2A7C               	goto	l450
  5086  02C6                     l1857:	
  5087                           
  5088                           ;main.c: 288: }
  5089                           ;main.c: 289: PORTC &= 0xFD;
  5090  02C6  30FD               	movlw	253
  5091  02C7  00B0               	movwf	??_MYI2C_Write2LEDBytes
  5092  02C8  0830               	movf	??_MYI2C_Write2LEDBytes,w
  5093  02C9  058E               	andwf	14,f	;volatile
  5094  02CA  0008               	return
  5095  02CB                     __end_of_MYI2C_Write2LEDBytes:	
  5096                           
  5097                           	psect	text10
  5098  0404                     __ptext10:	
  5099 ;; *************** function _I2C1_MasterWrite *****************
  5100 ;; Defined at:
  5101 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  pdata           1    wreg     PTR unsigned char 
  5104 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), 
  5105 ;;  length          1    7[BANK0 ] unsigned char 
  5106 ;;  address         2    8[BANK0 ] unsigned int 
  5107 ;;  pflag           1   10[BANK0 ] PTR enum E14254
  5108 ;;		 -> MYI2C_Write2LEDBytes@status(1), 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  5111 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5121 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;Total ram usage:        7 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    4
  5128 ;; This function calls:
  5129 ;;		_I2C1_MasterTRBInsert
  5130 ;;		_I2C1_MasterWriteTRBBuild
  5131 ;; This function is called by:
  5132 ;;		_MYI2C_Write2LEDBytes
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           
  5137                           ;psect for function _I2C1_MasterWrite
  5138  0404                     _I2C1_MasterWrite:	
  5139                           
  5140                           ;incstack = 0
  5141                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5142                           ;I2C1_MasterWrite@pdata stored from wreg
  5143  0404  0020               	movlb	0	; select bank0
  5144  0405  00AD               	movwf	I2C1_MasterWrite@pdata
  5145                           
  5146                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  5147                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  5148  0406  1863               	btfsc	_i2c1_object+2,0
  5149  0407  2C25               	goto	l1613
  5150                           
  5151                           ;i2c1.c: 608: {
  5152                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  5153  0408  082D               	movf	I2C1_MasterWrite@pdata,w
  5154  0409  00AB               	movwf	??_I2C1_MasterWrite
  5155  040A  082B               	movf	??_I2C1_MasterWrite,w
  5156  040B  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  5157  040C  0827               	movf	I2C1_MasterWrite@length,w
  5158  040D  00AC               	movwf	??_I2C1_MasterWrite+1
  5159  040E  082C               	movf	??_I2C1_MasterWrite+1,w
  5160  040F  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  5161  0410  0829               	movf	I2C1_MasterWrite@address+1,w
  5162  0411  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  5163  0412  0828               	movf	I2C1_MasterWrite@address,w
  5164  0413  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  5165  0414  3068               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  5166  0415  3184  242C  3184   	fcall	_I2C1_MasterWriteTRBBuild
  5167                           
  5168                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  5169  0418  3068               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  5170  0419  0020               	movlb	0	; select bank0
  5171  041A  00AB               	movwf	??_I2C1_MasterWrite
  5172  041B  082B               	movf	??_I2C1_MasterWrite,w
  5173  041C  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  5174  041D  082A               	movf	I2C1_MasterWrite@pflag,w
  5175  041E  00AC               	movwf	??_I2C1_MasterWrite+1
  5176  041F  082C               	movf	??_I2C1_MasterWrite+1,w
  5177  0420  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  5178  0421  3001               	movlw	1
  5179  0422  3183  2380         	fcall	_I2C1_MasterTRBInsert
  5180                           
  5181                           ;i2c1.c: 611: }
  5182  0424  0008               	return
  5183  0425                     l1613:	
  5184                           
  5185                           ;i2c1.c: 612: else
  5186                           ;i2c1.c: 613: {
  5187                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  5188  0425  0020               	movlb	0	; select bank0
  5189  0426  082A               	movf	I2C1_MasterWrite@pflag,w
  5190  0427  0086               	movwf	6
  5191  0428  0187               	clrf	7
  5192  0429  0181               	clrf	1
  5193  042A  0A81               	incf	1,f
  5194  042B  0008               	return
  5195  042C                     __end_of_I2C1_MasterWrite:	
  5196                           
  5197                           	psect	text11
  5198  042C                     __ptext11:	
  5199 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  5200 ;; Defined at:
  5201 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  ptrb            1    wreg     PTR struct .
  5204 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  5205 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  5206 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), 
  5207 ;;  length          1    1[BANK0 ] unsigned char 
  5208 ;;  address         2    2[BANK0 ] unsigned int 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  ptrb            1    6[BANK0 ] PTR struct .
  5211 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;Total ram usage:        7 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    3
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_I2C1_MasterWrite
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _I2C1_MasterWriteTRBBuild
  5237  042C                     _I2C1_MasterWriteTRBBuild:	
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  5241                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  5242  042C  0020               	movlb	0	; select bank0
  5243  042D  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  5244                           
  5245                           ;i2c1.c: 713: ptrb->address = address << 1;
  5246  042E  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  5247  042F  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  5248  0430  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  5249  0431  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  5250  0432  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  5251  0433  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  5252  0434  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  5253  0435  0086               	movwf	6
  5254  0436  0187               	clrf	7
  5255  0437  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  5256  0438  3FC0               	movwi [0]fsr1
  5257  0439  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  5258  043A  3FC1               	movwi [1]fsr1
  5259                           
  5260                           ;i2c1.c: 714: ptrb->length = length;
  5261  043B  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  5262  043C  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  5263  043D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  5264  043E  3E02               	addlw	2
  5265  043F  0086               	movwf	6
  5266  0440  0187               	clrf	7
  5267  0441  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  5268  0442  0081               	movwf	1
  5269                           
  5270                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  5271  0443  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  5272  0444  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  5273  0445  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  5274  0446  3E03               	addlw	3
  5275  0447  0086               	movwf	6
  5276  0448  0187               	clrf	7
  5277  0449  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  5278  044A  0081               	movwf	1
  5279  044B  0008               	return
  5280  044C                     __end_of_I2C1_MasterWriteTRBBuild:	
  5281                           
  5282                           	psect	text12
  5283  0380                     __ptext12:	
  5284 ;; *************** function _I2C1_MasterTRBInsert *****************
  5285 ;; Defined at:
  5286 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  count           1    wreg     unsigned char 
  5289 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  5290 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
  5291 ;;  pflag           1    1[BANK0 ] PTR enum E14254
  5292 ;;		 -> MYI2C_Write2LEDBytes@status(1), 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  count           1    3[BANK0 ] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;Total ram usage:        4 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    3
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_I2C1_MasterWrite
  5315 ;;		_I2C1_MasterRead
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           
  5320                           ;psect for function _I2C1_MasterTRBInsert
  5321  0380                     _I2C1_MasterTRBInsert:	
  5322                           
  5323                           ;incstack = 0
  5324                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  5325                           ;I2C1_MasterTRBInsert@count stored from wreg
  5326  0380  0020               	movlb	0	; select bank0
  5327  0381  00A3               	movwf	I2C1_MasterTRBInsert@count
  5328                           
  5329                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  5330  0382  1863               	btfsc	_i2c1_object+2,0
  5331  0383  2BB4               	goto	l1501
  5332                           
  5333                           ;i2c1.c: 649: {
  5334                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  5335  0384  3002               	movlw	2
  5336  0385  00A2               	movwf	??_I2C1_MasterTRBInsert
  5337  0386  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  5338  0387  0086               	movwf	6
  5339  0388  0187               	clrf	7
  5340  0389  0822               	movf	??_I2C1_MasterTRBInsert,w
  5341  038A  0081               	movwf	1
  5342                           
  5343                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  5344  038B  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  5345  038C  00A2               	movwf	??_I2C1_MasterTRBInsert
  5346  038D  0A61               	incf	_i2c1_object,w
  5347  038E  0086               	movwf	6
  5348  038F  0187               	clrf	7
  5349  0390  0822               	movf	??_I2C1_MasterTRBInsert,w
  5350  0391  0081               	movwf	1
  5351                           
  5352                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  5353  0392  0823               	movf	I2C1_MasterTRBInsert@count,w
  5354  0393  00A2               	movwf	??_I2C1_MasterTRBInsert
  5355  0394  0861               	movf	_i2c1_object,w
  5356  0395  0086               	movwf	6
  5357  0396  0187               	clrf	7
  5358  0397  0822               	movf	??_I2C1_MasterTRBInsert,w
  5359  0398  0081               	movwf	1
  5360                           
  5361                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  5362  0399  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  5363  039A  00A2               	movwf	??_I2C1_MasterTRBInsert
  5364  039B  0861               	movf	_i2c1_object,w
  5365  039C  3E02               	addlw	2
  5366  039D  0086               	movwf	6
  5367  039E  0187               	clrf	7
  5368  039F  0822               	movf	??_I2C1_MasterTRBInsert,w
  5369  03A0  0081               	movwf	1
  5370                           
  5371                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  5372  03A1  3003               	movlw	3
  5373  03A2  00A2               	movwf	??_I2C1_MasterTRBInsert
  5374  03A3  0822               	movf	??_I2C1_MasterTRBInsert,w
  5375  03A4  07E1               	addwf	_i2c1_object,f
  5376                           
  5377                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  5378  03A5  0861               	movf	_i2c1_object,w
  5379  03A6  3A6F               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  5380  03A7  1D03               	skipz
  5381  03A8  2BAD               	goto	l1497
  5382                           
  5383                           ;i2c1.c: 659: {
  5384                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  5385  03A9  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  5386  03AA  00A2               	movwf	??_I2C1_MasterTRBInsert
  5387  03AB  0822               	movf	??_I2C1_MasterTRBInsert,w
  5388  03AC  00E1               	movwf	_i2c1_object
  5389  03AD                     l1497:	
  5390                           
  5391                           ;i2c1.c: 662: }
  5392                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  5393  03AD  10E3               	bcf	_i2c1_object+2,1
  5394                           
  5395                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  5396  03AE  0862               	movf	low ((_i2c1_object| 0+1)),w
  5397  03AF  0661               	xorwf	_i2c1_object,w
  5398  03B0  1D03               	skipz
  5399  03B1  2BB9               	goto	l1503
  5400                           
  5401                           ;i2c1.c: 670: {
  5402                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  5403  03B2  1463               	bsf	_i2c1_object+2,0
  5404                           
  5405                           ;i2c1.c: 673: }
  5406                           ;i2c1.c: 675: }
  5407  03B3  2BB9               	goto	l1503
  5408  03B4                     l1501:	
  5409                           
  5410                           ;i2c1.c: 676: else
  5411                           ;i2c1.c: 677: {
  5412                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  5413  03B4  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  5414  03B5  0086               	movwf	6
  5415  03B6  0187               	clrf	7
  5416  03B7  0181               	clrf	1
  5417  03B8  0A81               	incf	1,f
  5418  03B9                     l1503:	
  5419                           
  5420                           ;i2c1.c: 679: }
  5421                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  5422  03B9  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  5423  03BA  0086               	movwf	6
  5424  03BB  0187               	clrf	7
  5425  03BC  3002               	movlw	2
  5426  03BD  0601               	xorwf	1,w
  5427  03BE  1D03               	btfss	3,2
  5428  03BF  0008               	return
  5429  03C0                     l1507:	
  5430                           ;i2c1.c: 683: {
  5431                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
  5432                           
  5433  03C0  0867               	movf	_i2c1_state,w
  5434  03C1  1D03               	btfss	3,2
  5435  03C2  2BC0               	goto	l1507
  5436                           
  5437                           ;i2c1.c: 685: {
  5438                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
  5439  03C3  002E               	movlb	14	; select bank14
  5440  03C4  140F               	bsf	15,0	;volatile
  5441  03C5  0008               	return
  5442  03C6                     __end_of_I2C1_MasterTRBInsert:	
  5443                           
  5444                           	psect	text13
  5445  04CA                     __ptext13:	
  5446 ;; *************** function _ADCC_GetSingleConversion *****************
  5447 ;; Defined at:
  5448 ;;		line 132 in file "mcc_generated_files/adcc.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  channel         1    wreg     enum E14254
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  channel         1    3[BANK0 ] enum E14254
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  2    0[BANK0 ] unsigned int 
  5455 ;; Registers used:
  5456 ;;		wreg
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5462 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;Total ram usage:        4 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    3
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_main
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function _ADCC_GetSingleConversion
  5478  04CA                     _ADCC_GetSingleConversion:	
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  5482                           ;ADCC_GetSingleConversion@channel stored from wreg
  5483  04CA  0020               	movlb	0	; select bank0
  5484  04CB  00A3               	movwf	ADCC_GetSingleConversion@channel
  5485                           
  5486                           ;adcc.c: 135: ADPCH = channel;
  5487  04CC  0823               	movf	ADCC_GetSingleConversion@channel,w
  5488  04CD  0021               	movlb	1	; select bank1
  5489  04CE  009E               	movwf	30	;volatile
  5490                           
  5491                           ;adcc.c: 138: ADCON0bits.ADON = 1;
  5492  04CF  1793               	bsf	19,7	;volatile
  5493                           
  5494                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
  5495  04D0  1313               	bcf	19,6	;volatile
  5496                           
  5497                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
  5498  04D1  1413               	bsf	19,0	;volatile
  5499                           
  5500                           ;adcc.c: 147: __nop();
  5501  04D2  0000               	nop
  5502  04D3                     l163:	
  5503                           ;adcc.c: 151: {
  5504                           
  5505                           ;adcc.c: 150: while (ADCON0bits.ADGO)
  5506                           
  5507  04D3  0021               	movlb	1	; select bank1
  5508  04D4  1813               	btfsc	19,0	;volatile
  5509  04D5  2CD3               	goto	l163
  5510                           
  5511                           ;adcc.c: 152: }
  5512                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5513  04D6  080D               	movf	13,w	;volatile
  5514  04D7  0020               	movlb	0	; select bank0
  5515  04D8  00A1               	movwf	?_ADCC_GetSingleConversion+1
  5516  04D9  0021               	movlb	1	; select bank1
  5517  04DA  080C               	movf	12,w	;volatile
  5518  04DB  0020               	movlb	0	; select bank0
  5519  04DC  00A0               	movwf	?_ADCC_GetSingleConversion
  5520  04DD  0008               	return
  5521  04DE                     __end_of_ADCC_GetSingleConversion:	
  5522                           
  5523                           	psect	intentry
  5524  0004                     __pintentry:	
  5525 ;; *************** function _INTERRUPT_InterruptManager *****************
  5526 ;; Defined at:
  5527 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;Total ram usage:        1 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    2
  5548 ;; This function calls:
  5549 ;;		_I2C1_BusCollisionISR
  5550 ;;		_I2C1_ISR
  5551 ;; This function is called by:
  5552 ;;		Interrupt level 1
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556  0004                     _INTERRUPT_InterruptManager:	
  5557                           
  5558                           ;incstack = 0
  5559  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5560                           
  5561                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5562  0005  3180               	pagesel	$
  5563  0006  0020               	movlb	0	; select bank0
  5564  0007  087F               	movf	127,w
  5565  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  5566                           
  5567                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
  5568  0009  1F0B               	btfss	11,6	;volatile
  5569  000A  2813               	goto	i1l394
  5570  000B  002E               	movlb	14	; select bank14
  5571  000C  1899               	btfsc	25,1	;volatile
  5572  000D  1C8F               	btfss	15,1	;volatile
  5573  000E  2813               	goto	i1l394
  5574                           
  5575                           ;interrupt_manager.c: 55: {
  5576                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
  5577  000F  3185  2523  3180   	fcall	_I2C1_BusCollisionISR
  5578                           
  5579                           ;interrupt_manager.c: 57: }
  5580  0012  281B               	goto	i1l398
  5581  0013                     i1l394:	
  5582                           
  5583                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
  5584  0013  1F0B               	btfss	11,6	;volatile
  5585  0014  281B               	goto	i1l398
  5586  0015  002E               	movlb	14	; select bank14
  5587  0016  1819               	btfsc	25,0	;volatile
  5588  0017  1C0F               	btfss	15,0	;volatile
  5589  0018  281B               	goto	i1l398
  5590                           
  5591                           ;interrupt_manager.c: 59: {
  5592                           ;interrupt_manager.c: 60: I2C1_ISR();
  5593  0019  3180  2045         	fcall	_I2C1_ISR
  5594  001B                     i1l398:	
  5595                           ;interrupt_manager.c: 62: else
  5596                           ;interrupt_manager.c: 63: {
  5597                           
  5598                           ;interrupt_manager.c: 61: }
  5599                           
  5600  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  5601  001C  0020               	movlb	0	; select bank0
  5602  001D  00FF               	movwf	127
  5603  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5604  001F  0009               	retfie
  5605  0020                     __end_of_INTERRUPT_InterruptManager:	
  5606                           
  5607                           	psect	text15
  5608  0045                     __ptext15:	
  5609 ;; *************** function _I2C1_ISR *****************
  5610 ;; Defined at:
  5611 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;Total ram usage:        4 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    1
  5632 ;; This function calls:
  5633 ;;		_I2C1_FunctionComplete
  5634 ;;		_I2C1_Stop
  5635 ;; This function is called by:
  5636 ;;		_INTERRUPT_InterruptManager
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _I2C1_ISR
  5642  0045                     _I2C1_ISR:	
  5643                           
  5644                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  5645                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  5646                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  5647                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  5648                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5652  0045  002E               	movlb	14	; select bank14
  5653  0046  100F               	bcf	15,0	;volatile
  5654                           
  5655                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  5656  0047  0023               	movlb	3	; select bank3
  5657  0048  1F90               	btfss	16,7	;volatile
  5658  0049  2974               	goto	i1l1777
  5659                           
  5660                           ;i2c1.c: 246: {
  5661                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  5662  004A  1390               	bcf	16,7	;volatile
  5663                           
  5664                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  5665  004B  0020               	movlb	0	; select bank0
  5666  004C  01E7               	clrf	_i2c1_state
  5667                           
  5668                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  5669  004D  0872               	movf	_p_i2c1_current,w
  5670  004E  3E02               	addlw	2
  5671  004F  0086               	movwf	6
  5672  0050  0187               	clrf	7
  5673  0051  0801               	movf	1,w
  5674  0052  0086               	movwf	6
  5675  0053  0187               	clrf	7
  5676  0054  0181               	clrf	1
  5677  0055  0A81               	incf	1,f
  5678                           
  5679                           ;i2c1.c: 253: p_i2c1_current = (0);
  5680  0056  01F2               	clrf	_p_i2c1_current
  5681                           
  5682                           ;i2c1.c: 255: return;
  5683  0057  0008               	return
  5684  0058                     i1l292:	
  5685                           ;i2c1.c: 260: {
  5686                           ;i2c1.c: 261: case S_MASTER_IDLE:
  5687                           
  5688                           ;i2c1.c: 256: }
  5689                           ;i2c1.c: 259: switch(i2c1_state)
  5690                           
  5691                           
  5692                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  5693  0058  18E3               	btfsc	_i2c1_object+2,1
  5694  0059  0008               	return
  5695                           
  5696                           ;i2c1.c: 264: {
  5697                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  5698  005A  0862               	movf	low ((_i2c1_object| 0+1)),w
  5699  005B  00F9               	movwf	??_I2C1_ISR
  5700  005C  0879               	movf	??_I2C1_ISR,w
  5701  005D  00F2               	movwf	_p_i2c1_current
  5702                           
  5703                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  5704  005E  0862               	movf	low ((_i2c1_object| 0+1)),w
  5705  005F  0086               	movwf	6
  5706  0060  0187               	clrf	7
  5707  0061  0801               	movf	1,w
  5708  0062  00F9               	movwf	??_I2C1_ISR
  5709  0063  0879               	movf	??_I2C1_ISR,w
  5710  0064  00F4               	movwf	_i2c1_trb_count
  5711                           
  5712                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  5713  0065  0862               	movf	low ((_i2c1_object| 0+1)),w
  5714  0066  0086               	movwf	6
  5715  0067  0187               	clrf	7
  5716  0068  3F41               	moviw [1]fsr1
  5717  0069  00F3               	movwf	_p_i2c1_trb_current
  5718                           
  5719                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  5720  006A  3003               	movlw	3
  5721  006B  00F9               	movwf	??_I2C1_ISR
  5722  006C  0879               	movf	??_I2C1_ISR,w
  5723  006D  07E2               	addwf	low ((_i2c1_object| 0+1)),f
  5724                           
  5725                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  5726  006E  0862               	movf	low ((_i2c1_object| 0+1)),w
  5727  006F  3A6F               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  5728  0070  1D03               	skipz
  5729  0071  2876               	goto	i1l1665
  5730                           
  5731                           ;i2c1.c: 274: {
  5732                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  5733  0072  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  5734  0073  00F9               	movwf	??_I2C1_ISR
  5735  0074  0879               	movf	??_I2C1_ISR,w
  5736  0075  00E2               	movwf	low ((_i2c1_object| 0+1))
  5737  0076                     i1l1665:	
  5738                           
  5739                           ;i2c1.c: 277: }
  5740                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  5741  0076  1063               	bcf	_i2c1_object+2,0
  5742                           
  5743                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  5744  0077  0862               	movf	low ((_i2c1_object| 0+1)),w
  5745  0078  0661               	xorwf	_i2c1_object,w
  5746  0079  1903               	btfsc	3,2
  5747                           
  5748                           ;i2c1.c: 285: {
  5749                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  5750  007A  14E3               	bsf	_i2c1_object+2,1
  5751                           
  5752                           ;i2c1.c: 288: }
  5753                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  5754  007B  0023               	movlb	3	; select bank3
  5755  007C  1411               	bsf	17,0	;volatile
  5756                           
  5757                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  5758  007D  3002               	movlw	2
  5759  007E  00F9               	movwf	??_I2C1_ISR
  5760  007F  0879               	movf	??_I2C1_ISR,w
  5761  0080  0020               	movlb	0	; select bank0
  5762  0081  00E7               	movwf	_i2c1_state
  5763                           
  5764                           ;i2c1.c: 295: }
  5765                           ;i2c1.c: 297: break;
  5766  0082  0008               	return
  5767  0083                     i1l297:	
  5768                           ;i2c1.c: 299: case S_MASTER_RESTART:
  5769                           
  5770                           
  5771                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  5772  0083  0023               	movlb	3	; select bank3
  5773  0084  1491               	bsf	17,1	;volatile
  5774                           
  5775                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  5776  0085  3002               	movlw	2
  5777  0086  00F9               	movwf	??_I2C1_ISR
  5778  0087  0879               	movf	??_I2C1_ISR,w
  5779  0088  0020               	movlb	0	; select bank0
  5780  0089  00E7               	movwf	_i2c1_state
  5781                           
  5782                           ;i2c1.c: 309: break;
  5783  008A  0008               	return
  5784  008B                     i1l298:	
  5785                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  5786                           
  5787                           
  5788                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  5789  008B  0023               	movlb	3	; select bank3
  5790  008C  1F11               	btfss	17,6	;volatile
  5791  008D  2897               	goto	i1l1677
  5792                           
  5793                           ;i2c1.c: 314: {
  5794                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  5795  008E  3001               	movlw	1
  5796  008F  00F9               	movwf	??_I2C1_ISR
  5797  0090  0879               	movf	??_I2C1_ISR,w
  5798  0091  0020               	movlb	0	; select bank0
  5799  0092  07E5               	addwf	_i2c1_object+4,f
  5800                           
  5801                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5802  0093  3004               	movlw	4
  5803  0094  3184  249B         	fcall	_I2C1_Stop
  5804                           
  5805                           ;i2c1.c: 317: }
  5806  0096  0008               	return
  5807  0097                     i1l1677:	
  5808                           
  5809                           ;i2c1.c: 318: else
  5810                           ;i2c1.c: 319: {
  5811                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  5812  0097  0876               	movf	I2C1_ISR@i2c_address+1,w
  5813  0098  00FA               	movwf	??_I2C1_ISR+1
  5814  0099  0875               	movf	I2C1_ISR@i2c_address,w
  5815  009A  00F9               	movwf	??_I2C1_ISR
  5816  009B  36FA               	lsrf	??_I2C1_ISR+1,f
  5817  009C  0CF9               	rrf	??_I2C1_ISR,f
  5818  009D  0879               	movf	??_I2C1_ISR,w
  5819  009E  0023               	movlb	3	; select bank3
  5820  009F  008C               	movwf	12	;volatile
  5821                           
  5822                           ;i2c1.c: 324: if(i2c_address & 0x01)
  5823  00A0  1C75               	btfss	I2C1_ISR@i2c_address,0
  5824  00A1  28A8               	goto	i1l1683
  5825                           
  5826                           ;i2c1.c: 325: {
  5827                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  5828  00A2  300B               	movlw	11
  5829  00A3  00F9               	movwf	??_I2C1_ISR
  5830  00A4  0879               	movf	??_I2C1_ISR,w
  5831  00A5  0020               	movlb	0	; select bank0
  5832  00A6  00E7               	movwf	_i2c1_state
  5833                           
  5834                           ;i2c1.c: 329: }
  5835  00A7  0008               	return
  5836  00A8                     i1l1683:	
  5837                           
  5838                           ;i2c1.c: 330: else
  5839                           ;i2c1.c: 331: {
  5840                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  5841  00A8  3003               	movlw	3
  5842  00A9  00F9               	movwf	??_I2C1_ISR
  5843  00AA  0879               	movf	??_I2C1_ISR,w
  5844  00AB  0020               	movlb	0	; select bank0
  5845  00AC  00E7               	movwf	_i2c1_state
  5846                           
  5847                           ;i2c1.c: 334: }
  5848                           ;i2c1.c: 335: }
  5849                           ;i2c1.c: 337: break;
  5850  00AD  0008               	return
  5851  00AE                     i1l303:	
  5852                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  5853                           
  5854                           
  5855                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  5856  00AE  0023               	movlb	3	; select bank3
  5857  00AF  1F11               	btfss	17,6	;volatile
  5858  00B0  28BA               	goto	i1l304
  5859                           
  5860                           ;i2c1.c: 342: {
  5861                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  5862  00B1  3001               	movlw	1
  5863  00B2  00F9               	movwf	??_I2C1_ISR
  5864  00B3  0879               	movf	??_I2C1_ISR,w
  5865  00B4  0020               	movlb	0	; select bank0
  5866  00B5  07E5               	addwf	_i2c1_object+4,f
  5867                           
  5868                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5869  00B6  3004               	movlw	4
  5870  00B7  3184  249B         	fcall	_I2C1_Stop
  5871                           
  5872                           ;i2c1.c: 345: }
  5873  00B9  0008               	return
  5874  00BA                     i1l304:	
  5875                           
  5876                           ;i2c1.c: 346: else
  5877                           ;i2c1.c: 347: {
  5878                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  5879  00BA  1491               	bsf	17,1	;volatile
  5880                           
  5881                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5882  00BB  0876               	movf	I2C1_ISR@i2c_address+1,w
  5883  00BC  00FA               	movwf	??_I2C1_ISR+1
  5884  00BD  0875               	movf	I2C1_ISR@i2c_address,w
  5885  00BE  00F9               	movwf	??_I2C1_ISR
  5886  00BF  087A               	movf	??_I2C1_ISR+1,w
  5887  00C0  00F9               	movwf	??_I2C1_ISR
  5888  00C1  01FA               	clrf	??_I2C1_ISR+1
  5889  00C2  3006               	movlw	6
  5890  00C3  0579               	andwf	??_I2C1_ISR,w
  5891  00C4  00FB               	movwf	??_I2C1_ISR+2
  5892  00C5  3000               	movlw	0
  5893  00C6  057A               	andwf	??_I2C1_ISR+1,w
  5894  00C7  00FC               	movwf	??_I2C1_ISR+3
  5895  00C8  30F0               	movlw	240
  5896  00C9  047B               	iorwf	??_I2C1_ISR+2,w
  5897  00CA  00F5               	movwf	I2C1_ISR@i2c_address
  5898  00CB  3000               	movlw	0
  5899  00CC  047C               	iorwf	??_I2C1_ISR+3,w
  5900  00CD  00F6               	movwf	I2C1_ISR@i2c_address+1
  5901                           
  5902                           ;i2c1.c: 357: i2c_address |= 0x0001;
  5903  00CE  1475               	bsf	I2C1_ISR@i2c_address,0
  5904                           
  5905                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  5906  00CF  0020               	movlb	0	; select bank0
  5907  00D0  01E6               	clrf	I2C1_ISR@i2c_10bit_address_restart
  5908  00D1  0AE6               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  5909                           
  5910                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  5911  00D2  3002               	movlw	2
  5912  00D3  00F9               	movwf	??_I2C1_ISR
  5913  00D4  0879               	movf	??_I2C1_ISR,w
  5914  00D5  00E7               	movwf	_i2c1_state
  5915                           
  5916                           ;i2c1.c: 364: }
  5917                           ;i2c1.c: 366: break;
  5918  00D6  0008               	return
  5919  00D7                     i1l1697:	
  5920                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  5921                           
  5922                           
  5923                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  5924  00D7  0366               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  5925  00D8  1903               	btfsc	3,2
  5926  00D9  28EB               	goto	i1l1717
  5927                           
  5928                           ;i2c1.c: 382: {
  5929                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  5930  00DA  0873               	movf	_p_i2c1_trb_current,w
  5931  00DB  0086               	movwf	6
  5932  00DC  0187               	clrf	7
  5933  00DD  3F40               	moviw [0]fsr1
  5934  00DE  00F5               	movwf	I2C1_ISR@i2c_address
  5935  00DF  3F41               	moviw [1]fsr1
  5936  00E0  00F6               	movwf	I2C1_ISR@i2c_address+1
  5937                           
  5938                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  5939  00E1  0873               	movf	_p_i2c1_trb_current,w
  5940  00E2  0086               	movwf	6
  5941  00E3  0187               	clrf	7
  5942  00E4  3F43               	moviw [3]fsr1
  5943  00E5  00F1               	movwf	I2C1_ISR@pi2c_buf_ptr
  5944                           
  5945                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  5946  00E6  0873               	movf	_p_i2c1_trb_current,w
  5947  00E7  0086               	movwf	6
  5948  00E8  0187               	clrf	7
  5949  00E9  3F42               	moviw [2]fsr1
  5950  00EA  00F0               	movwf	I2C1_ISR@i2c_bytes_left
  5951  00EB                     i1l1717:	
  5952                           ;i2c1.c: 407: }
  5953                           ;i2c1.c: 408: }
  5954                           
  5955                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  5956                           
  5957                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  5958                           
  5959                           ;i2c1.c: 400: else
  5960                           ;i2c1.c: 401: {
  5961                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  5962                           
  5963                           ;i2c1.c: 399: }
  5964                           
  5965                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  5966                           
  5967                           ;i2c1.c: 393: {
  5968                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  5969                           
  5970                           ;i2c1.c: 391: {
  5971                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  5972                           
  5973                           ;i2c1.c: 387: }
  5974                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  5975                           
  5976                           
  5977                           ;i2c1.c: 409: else
  5978                           ;i2c1.c: 410: {
  5979                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  5980  00EB  0875               	movf	I2C1_ISR@i2c_address,w
  5981  00EC  0023               	movlb	3	; select bank3
  5982  00ED  008C               	movwf	12	;volatile
  5983                           
  5984                           ;i2c1.c: 413: if(i2c_address & 0x01)
  5985  00EE  1C75               	btfss	I2C1_ISR@i2c_address,0
  5986  00EF  28F6               	goto	i1l1723
  5987                           
  5988                           ;i2c1.c: 414: {
  5989                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  5990  00F0  3005               	movlw	5
  5991  00F1  00F9               	movwf	??_I2C1_ISR
  5992  00F2  0879               	movf	??_I2C1_ISR,w
  5993  00F3  0020               	movlb	0	; select bank0
  5994  00F4  00E7               	movwf	_i2c1_state
  5995                           
  5996                           ;i2c1.c: 417: }
  5997  00F5  0008               	return
  5998  00F6                     i1l1723:	
  5999                           
  6000                           ;i2c1.c: 418: else
  6001                           ;i2c1.c: 419: {
  6002                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  6003  00F6  3003               	movlw	3
  6004  00F7  00F9               	movwf	??_I2C1_ISR
  6005  00F8  0879               	movf	??_I2C1_ISR,w
  6006  00F9  0020               	movlb	0	; select bank0
  6007  00FA  00E7               	movwf	_i2c1_state
  6008                           
  6009                           ;i2c1.c: 422: }
  6010                           ;i2c1.c: 423: }
  6011                           ;i2c1.c: 424: break;
  6012  00FB  0008               	return
  6013  00FC                     i1l314:	
  6014                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  6015                           
  6016                           
  6017                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  6018  00FC  0023               	movlb	3	; select bank3
  6019  00FD  1F11               	btfss	17,6	;volatile
  6020  00FE  290A               	goto	i1l1731
  6021                           
  6022                           ;i2c1.c: 430: {
  6023                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  6024  00FF  3001               	movlw	1
  6025  0100  00F9               	movwf	??_I2C1_ISR
  6026  0101  0879               	movf	??_I2C1_ISR,w
  6027  0102  0020               	movlb	0	; select bank0
  6028  0103  07E5               	addwf	_i2c1_object+4,f
  6029                           
  6030                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  6031  0104  0023               	movlb	3	; select bank3
  6032  0105  1311               	bcf	17,6	;volatile
  6033                           
  6034                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  6035  0106  3005               	movlw	5
  6036  0107  3184  249B         	fcall	_I2C1_Stop
  6037                           
  6038                           ;i2c1.c: 440: }
  6039  0109  0008               	return
  6040  010A                     i1l1731:	
  6041                           
  6042                           ;i2c1.c: 441: else
  6043                           ;i2c1.c: 442: {
  6044                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  6045  010A  3001               	movlw	1
  6046  010B  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
  6047  010C  0A70               	incf	I2C1_ISR@i2c_bytes_left,w
  6048  010D  1D03               	btfss	3,2
  6049  010E  2923               	goto	i1l1739
  6050                           
  6051                           ;i2c1.c: 445: {
  6052                           ;i2c1.c: 449: p_i2c1_trb_current++;
  6053  010F  3004               	movlw	4
  6054  0110  00F9               	movwf	??_I2C1_ISR
  6055  0111  0879               	movf	??_I2C1_ISR,w
  6056  0112  07F3               	addwf	_p_i2c1_trb_current,f
  6057                           
  6058                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  6059  0113  3001               	movlw	1
  6060  0114  02F4               	subwf	_i2c1_trb_count,f
  6061  0115  1D03               	btfss	3,2
  6062  0116  291B               	goto	i1l318
  6063                           
  6064                           ;i2c1.c: 453: {
  6065                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  6066  0117  3000               	movlw	0
  6067  0118  3184  249B         	fcall	_I2C1_Stop
  6068                           
  6069                           ;i2c1.c: 455: }
  6070  011A  0008               	return
  6071  011B                     i1l318:	
  6072                           
  6073                           ;i2c1.c: 456: else
  6074                           ;i2c1.c: 457: {
  6075                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  6076  011B  0023               	movlb	3	; select bank3
  6077  011C  1491               	bsf	17,1	;volatile
  6078                           
  6079                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  6080  011D  3002               	movlw	2
  6081  011E  00F9               	movwf	??_I2C1_ISR
  6082  011F  0879               	movf	??_I2C1_ISR,w
  6083  0120  0020               	movlb	0	; select bank0
  6084  0121  00E7               	movwf	_i2c1_state
  6085                           
  6086                           ;i2c1.c: 469: }
  6087                           ;i2c1.c: 470: }
  6088  0122  0008               	return
  6089  0123                     i1l1739:	
  6090                           
  6091                           ;i2c1.c: 471: else
  6092                           ;i2c1.c: 472: {
  6093                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  6094  0123  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
  6095  0124  0086               	movwf	6
  6096  0125  0187               	clrf	7
  6097  0126  0801               	movf	1,w
  6098  0127  0023               	movlb	3	; select bank3
  6099  0128  008C               	movwf	12	;volatile
  6100  0129  3001               	movlw	1
  6101  012A  00F9               	movwf	??_I2C1_ISR
  6102  012B  0879               	movf	??_I2C1_ISR,w
  6103  012C  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  6104                           
  6105                           ;i2c1.c: 475: }
  6106                           ;i2c1.c: 476: }
  6107                           ;i2c1.c: 477: break;
  6108  012D  0008               	return
  6109  012E                     i1l321:	
  6110                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  6111                           
  6112                           
  6113                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  6114  012E  0023               	movlb	3	; select bank3
  6115  012F  1F11               	btfss	17,6	;volatile
  6116  0130  293C               	goto	i1l322
  6117                           
  6118                           ;i2c1.c: 483: {
  6119                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  6120  0131  3001               	movlw	1
  6121  0132  00F9               	movwf	??_I2C1_ISR
  6122  0133  0879               	movf	??_I2C1_ISR,w
  6123  0134  0020               	movlb	0	; select bank0
  6124  0135  07E5               	addwf	_i2c1_object+4,f
  6125                           
  6126                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  6127  0136  3004               	movlw	4
  6128  0137  3184  249B         	fcall	_I2C1_Stop
  6129                           
  6130                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  6131  0139  0023               	movlb	3	; select bank3
  6132  013A  1311               	bcf	17,6	;volatile
  6133                           
  6134                           ;i2c1.c: 493: }
  6135  013B  0008               	return
  6136  013C                     i1l322:	
  6137                           
  6138                           ;i2c1.c: 494: else
  6139                           ;i2c1.c: 495: {
  6140                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  6141  013C  1591               	bsf	17,3	;volatile
  6142                           
  6143                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  6144  013D  3008               	movlw	8
  6145  013E  00F9               	movwf	??_I2C1_ISR
  6146  013F  0879               	movf	??_I2C1_ISR,w
  6147  0140  0020               	movlb	0	; select bank0
  6148  0141  00E7               	movwf	_i2c1_state
  6149                           
  6150                           ;i2c1.c: 498: }
  6151                           ;i2c1.c: 499: break;
  6152  0142  0008               	return
  6153  0143                     i1l1751:	
  6154                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  6155                           
  6156                           
  6157                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  6158  0143  3008               	movlw	8
  6159  0144  00F9               	movwf	??_I2C1_ISR
  6160  0145  0879               	movf	??_I2C1_ISR,w
  6161  0146  00E7               	movwf	_i2c1_state
  6162                           
  6163                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  6164  0147  0023               	movlb	3	; select bank3
  6165  0148  1591               	bsf	17,3	;volatile
  6166                           
  6167                           ;i2c1.c: 511: break;
  6168  0149  0008               	return
  6169  014A                     i1l1755:	
  6170                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  6171                           
  6172                           
  6173                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  6174  014A  0023               	movlb	3	; select bank3
  6175  014B  080C               	movf	12,w	;volatile
  6176  014C  00F9               	movwf	??_I2C1_ISR
  6177  014D  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
  6178  014E  0086               	movwf	6
  6179  014F  0187               	clrf	7
  6180  0150  0879               	movf	??_I2C1_ISR,w
  6181  0151  0081               	movwf	1
  6182  0152  3001               	movlw	1
  6183  0153  00F9               	movwf	??_I2C1_ISR
  6184  0154  0879               	movf	??_I2C1_ISR,w
  6185  0155  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  6186                           
  6187                           ;i2c1.c: 519: if(--i2c_bytes_left)
  6188  0156  3001               	movlw	1
  6189  0157  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
  6190  0158  1903               	btfsc	3,2
  6191  0159  2961               	goto	i1l326
  6192                           
  6193                           ;i2c1.c: 520: {
  6194                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  6195  015A  1291               	bcf	17,5	;volatile
  6196                           
  6197                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  6198  015B  3006               	movlw	6
  6199  015C  00F9               	movwf	??_I2C1_ISR
  6200  015D  0879               	movf	??_I2C1_ISR,w
  6201  015E  0020               	movlb	0	; select bank0
  6202  015F  00E7               	movwf	_i2c1_state
  6203                           
  6204                           ;i2c1.c: 530: }
  6205  0160  2964               	goto	i1l1767
  6206  0161                     i1l326:	
  6207                           
  6208                           ;i2c1.c: 531: else
  6209                           ;i2c1.c: 532: {
  6210                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  6211  0161  1691               	bsf	17,5	;volatile
  6212                           
  6213                           ;i2c1.c: 538: I2C1_FunctionComplete();
  6214  0162  3184  24DE         	fcall	_I2C1_FunctionComplete
  6215  0164                     i1l1767:	
  6216                           
  6217                           ;i2c1.c: 539: }
  6218                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  6219  0164  0023               	movlb	3	; select bank3
  6220  0165  1611               	bsf	17,4	;volatile
  6221                           
  6222                           ;i2c1.c: 543: break;
  6223  0166  0008               	return
  6224  0167                     i1l1769:	
  6225                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  6226                           
  6227                           
  6228                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  6229                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  6230  0167  3000               	movlw	0
  6231  0168  3184  249B         	fcall	_I2C1_Stop
  6232                           
  6233                           ;i2c1.c: 550: break;
  6234  016A  0008               	return
  6235  016B                     i1l1771:	
  6236                           ;i2c1.c: 552: default:
  6237                           
  6238                           
  6239                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  6240  016B  3001               	movlw	1
  6241  016C  00F9               	movwf	??_I2C1_ISR
  6242  016D  0879               	movf	??_I2C1_ISR,w
  6243  016E  0020               	movlb	0	; select bank0
  6244  016F  07E5               	addwf	_i2c1_object+4,f
  6245                           
  6246                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  6247  0170  3006               	movlw	6
  6248  0171  3184  249B         	fcall	_I2C1_Stop
  6249                           
  6250                           ;i2c1.c: 560: }
  6251                           
  6252                           ;i2c1.c: 558: break;
  6253  0173  0008               	return
  6254  0174                     i1l1777:	
  6255  0174  0020               	movlb	0	; select bank0
  6256  0175  0867               	movf	_i2c1_state,w
  6257                           
  6258                           ; Switch size 1, requested type "space"
  6259                           ; Number of cases is 11, Range of values is 0 to 11
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; direct_byte           30     6 (fixed)
  6263                           ; simple_byte           34    18 (average)
  6264                           ; jumptable            260     6 (fixed)
  6265                           ;	Chosen strategy is direct_byte
  6266  0176  0084               	movwf	4
  6267  0177  300C               	movlw	12
  6268  0178  0204               	subwf	4,w
  6269  0179  1803               	skipnc
  6270  017A  296B               	goto	i1l1771
  6271  017B  3184               	movlp	high i1S2141
  6272  017C  3504               	lslf	4,w
  6273  017D  3E83               	addlw	low i1S2141
  6274  017E  0082               	movwf	2
  6275  017F  0008               	return
  6276  0180                     __end_of_I2C1_ISR:	
  6277                           
  6278                           	psect	swtext1
  6279  0483                     __pswtext1:	
  6280  0483                     i1S2141:	
  6281  0483  3180  2858         	ljmp	i1l292
  6282  0485  3180  2883         	ljmp	i1l297
  6283  0487  3180  28D7         	ljmp	i1l1697
  6284  0489  3180  28FC         	ljmp	i1l314
  6285  048B  3181  2967         	ljmp	i1l1769
  6286  048D  3181  292E         	ljmp	i1l321
  6287  048F  3181  2943         	ljmp	i1l1751
  6288  0491  3181  2967         	ljmp	i1l1769
  6289  0493  3181  294A         	ljmp	i1l1755
  6290  0495  3181  296B         	ljmp	i1l1771
  6291  0497  3180  288B         	ljmp	i1l298
  6292  0499  3180  28AE         	ljmp	i1l303
  6293                           
  6294                           	psect	text16
  6295  049B                     __ptext16:	
  6296 ;; *************** function _I2C1_Stop *****************
  6297 ;; Defined at:
  6298 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  completion_c    1    wreg     enum E14254
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  completion_c    1    1[COMMON] enum E14254
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;Total ram usage:        2 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_I2C1_ISR
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _I2C1_Stop
  6327  049B                     _I2C1_Stop:	
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6331                           ;I2C1_Stop@completion_code stored from wreg
  6332  049B  00F8               	movwf	I2C1_Stop@completion_code
  6333                           
  6334                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  6335  049C  0023               	movlb	3	; select bank3
  6336  049D  1511               	bsf	17,2	;volatile
  6337                           
  6338                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  6339  049E  0872               	movf	_p_i2c1_current,w
  6340  049F  3E02               	addlw	2
  6341  04A0  0086               	movwf	6
  6342  04A1  0187               	clrf	7
  6343  04A2  0801               	movf	1,w
  6344  04A3  1903               	btfsc	3,2
  6345  04A4  2CB0               	goto	i1l1603
  6346                           
  6347                           ;i2c1.c: 588: {
  6348                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  6349  04A5  0878               	movf	I2C1_Stop@completion_code,w
  6350  04A6  00F7               	movwf	??_I2C1_Stop
  6351  04A7  0872               	movf	_p_i2c1_current,w
  6352  04A8  3E02               	addlw	2
  6353  04A9  0086               	movwf	6
  6354  04AA  0187               	clrf	7
  6355  04AB  0801               	movf	1,w
  6356  04AC  0086               	movwf	6
  6357  04AD  0187               	clrf	7
  6358  04AE  0877               	movf	??_I2C1_Stop,w
  6359  04AF  0081               	movwf	1
  6360  04B0                     i1l1603:	
  6361                           
  6362                           ;i2c1.c: 591: }
  6363                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  6364  04B0  0020               	movlb	0	; select bank0
  6365  04B1  01E7               	clrf	_i2c1_state
  6366  04B2  0008               	return
  6367  04B3                     __end_of_I2C1_Stop:	
  6368                           
  6369                           	psect	text17
  6370  04DE                     __ptext17:	
  6371 ;; *************** function _I2C1_FunctionComplete *****************
  6372 ;; Defined at:
  6373 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      void 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;Total ram usage:        1 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_I2C1_ISR
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           
  6401                           ;psect for function _I2C1_FunctionComplete
  6402  04DE                     _I2C1_FunctionComplete:	
  6403                           
  6404                           ;i2c1.c: 567: p_i2c1_trb_current++;
  6405                           
  6406                           ;incstack = 0
  6407                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  6408  04DE  3004               	movlw	4
  6409  04DF  00F7               	movwf	??_I2C1_FunctionComplete
  6410  04E0  0877               	movf	??_I2C1_FunctionComplete,w
  6411  04E1  07F3               	addwf	_p_i2c1_trb_current,f
  6412                           
  6413                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  6414  04E2  3001               	movlw	1
  6415  04E3  02F4               	subwf	_i2c1_trb_count,f
  6416  04E4  1D03               	btfss	3,2
  6417  04E5  2CEC               	goto	i1l333
  6418                           
  6419                           ;i2c1.c: 571: {
  6420                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  6421  04E6  3004               	movlw	4
  6422  04E7  00F7               	movwf	??_I2C1_FunctionComplete
  6423  04E8  0877               	movf	??_I2C1_FunctionComplete,w
  6424  04E9  0020               	movlb	0	; select bank0
  6425  04EA  00E7               	movwf	_i2c1_state
  6426                           
  6427                           ;i2c1.c: 573: }
  6428  04EB  0008               	return
  6429  04EC                     i1l333:	
  6430                           
  6431                           ;i2c1.c: 574: else
  6432                           ;i2c1.c: 575: {
  6433                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  6434  04EC  0020               	movlb	0	; select bank0
  6435  04ED  01E7               	clrf	_i2c1_state
  6436  04EE  0AE7               	incf	_i2c1_state,f
  6437  04EF  0008               	return
  6438  04F0                     __end_of_I2C1_FunctionComplete:	
  6439                           
  6440                           	psect	text18
  6441  0523                     __ptext18:	
  6442 ;; *************** function _I2C1_BusCollisionISR *****************
  6443 ;; Defined at:
  6444 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		None
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		_INTERRUPT_InterruptManager
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _I2C1_BusCollisionISR
  6473  0523                     _I2C1_BusCollisionISR:	
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in _I2C1_BusCollisionISR: []
  6477  0523  0008               	return
  6478  0524                     __end_of_I2C1_BusCollisionISR:	
  6479  007E                     btemp	set	126	;btemp
  6480  007E                     int$flags	set	126
  6481  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    2
    Data        16
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     65      79
    BANK1            80      0      20
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14254 size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    MYI2C_Write2LEDBytes@pD	PTR unsigned char  size(1) Largest target is 16
		 -> MYI2C_Write2LEDBytes@sourceData(BANK0[16]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK0[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14254 size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E14254 size(1) Largest target is 1
		 -> MYI2C_Write2LEDBytes@status(BANK0[1]), 

    F14366.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E14254 size(1) Largest target is 1
		 -> MYI2C_Write2LEDBytes@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), 

    F14361.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14254 size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    S375$pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    S387$pTrFlag	PTR enum E14254 size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E14254 size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), 

    S387$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S398$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S398$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_MYI2C_Write2LEDBytes
    _blinkyLoop->_delay
    _delay->___wmul
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _MYI2C_Write2LEDBytes->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    4194
                                             51 BANK0     14    14      0
           _ADCC_GetSingleConversion
               _MYI2C_Write2LEDBytes
                  _SYSTEM_Initialize
                         _blinkyLoop
                              _delay
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    1417
                                             17 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2     792
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MYI2C_Write2LEDBytes                                39    37      2    1453
                                             14 BANK0     37    35      2
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     3      4     958
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             7     3      4     318
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 4     2      2     344
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _MYI2C_Write2LEDBytes
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _blinkyLoop
     ___wmul
     _delay
       ___wmul
   _delay
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      71      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      71      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 09 16:53:27 2017

                                     pc 0002                             __CFG_CP$OFF 0000  
            MYI2C_Write2LEDBytes@F14421 00A0                     ___wmul@multiplicand 0022  
                           main@iLSByte 0057         MYI2C_Write2LEDBytes@dataAddress 0044  
                           main@iMSByte 005A                                     l163 04D3  
                                   l422 0363                                     l450 027C  
                                   l545 0455                                     _GIE 005F  
                          __CFG_CPD$OFF 0000                                     u870 0263  
                                   u935 0282                            __CFG_BORV$LO 0000  
                                   wreg 0009                            __CFG_LVP$OFF 0000  
                          __CFG_ZCD$OFF 0000                        __end_of_I2C1_ISR 0180  
                                  l2101 01E1                                    l2105 0202  
                                  l2107 0216                                    l1501 03B4  
                                  l1503 03B9                                    l1507 03C0  
                                  l2067 02DB                                    l2091 01AA  
                                  l1613 0425                                    l2069 031D  
                                  l2097 01CC                                    l1497 03AD  
                                  l1851 02BA                                    l1835 02A8  
                                  l1951 044F                                    l1857 02C6  
                                  l1849 0292           __size_of_MYI2C_Write2LEDBytes 0074  
                                  u1123 0375                                    u1115 0358  
                                  u1065 0456                                    u1145 02E5  
                                  u1090 0402                                    u1075 045B  
                                  u1165 01D5                                    _LATA 0016  
                                  _LATB 0017                                    u1175 01EB  
                                  _LATC 0018                                    _WPUA 0F39  
                                  _WPUB 0F44                                    _WPUC 0F4F  
                                  _WPUE 0F65                            __CFG_WRT$OFF 0000  
                         __CFG_FCMEN$ON 0000                                    _main 0180  
            MYI2C_Write2LEDBytes@nCount 0047                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                  ??_I2C1_MasterTRBInsert 0022  
                                  btemp 007E                            main@iCounter 005D  
                         __CFG_BOREN$ON 0000                                    start 0020  
                         __CFG_CSWEN$ON 0000                           __CFG_MCLRE$ON 0000  
            MYI2C_Write2LEDBytes@status 0052          I2C1_MasterWriteTRBBuild@length 0021  
MYI2C_Write2LEDBytes@slaveDeviceAddress 0049                              _i2c1_state 0067  
        __size_of_OSCILLATOR_Initialize 0009               I2C1_MasterTRBInsert@count 0023  
         __end_of_OSCILLATOR_Initialize 0515               I2C1_MasterTRBInsert@pflag 0021  
                                 _ADACQ 009D                                   _ADACT 0099  
                                 _ADCAP 009B                                   ?_main 0077  
                                 _ADCLK 0098                                   _ADCNT 010C  
                                 _ADPCH 009E                                   _ADREF 009A  
                     __end_of_I2C1_Stop 04B3                                   _ADPRE 009C  
                         __CFG_WDTE$OFF 0000                                   _ADRPT 010D  
                        __CFG_DEBUG$OFF 0000                                   i1l303 00AE  
                                 i1l304 00BA                                   i1l321 012E  
                                 i1l322 013C                                   i1l314 00FC  
                                 i1l333 04EC                                   i1l326 0161  
                                 i1l318 011B                                   i1l292 0058  
                                 i1l297 0083                                   i1l298 008B  
                                 i1l394 0013                                   i1l398 001B  
                                 _OSCEN 0891                                   _PORTB 000D  
                                 _PORTC 000E                                   _TRISA 0011  
                                 _TRISB 0012                                   _TRISC 0013  
          __end_of_I2C1_BusCollisionISR 0524                       ??_I2C1_Initialize 0020  
                                 _delay 032D                                   status 0003  
                                 wtemp0 007E             MYI2C_Write2LEDBytes@counter 004A  
       I2C1_MasterWriteTRBBuild@address 0022             MYI2C_Write2LEDBytes@timeOut 004C  
                       __initialization 0022                   I2C1_MasterWrite@pdata 002D  
                 I2C1_MasterWrite@pflag 002A                            __end_of_main 0257  
           ?_INTERRUPT_InterruptManager 0077                             _i2c1_object 0061  
                                ??_main 0053                                  ?_delay 0026  
                                _ADACCH 0091                                  _ADACCL 0090  
                                _ADCON0 0093                                  _ADCON1 0094  
                                _ADCON2 0095                                  _ADCON3 0096  
                                _ADERRH 0117                                  i1S2141 0483  
                                _ADERRL 0116                                  _ADLTHH 010F  
                                _ADLTHL 010E                                  _ADRESH 008D  
                                _ADRESL 008C                                  _ADSTAT 0097  
                                _ADUTHH 0111                                  _ADUTHL 0110  
                                _ANSELA 0F38                                  _ANSELB 0F43  
                                _ANSELC 0F4E                      __CFG_RSTOSC$HFINT1 0000  
                                _RC3PPS 0F23                                  _RC4PPS 0F24  
                                _ODCONA 0F3A                                  _ODCONB 0F45  
                                i1l1603 04B0                                  _ODCONC 0F50  
                                i1l1731 010A                                  i1l1723 00F6  
                                i1l1717 00EB                                  i1l1751 0143  
                                i1l1665 0076                                  i1l1771 016B  
                                i1l1755 014A                                  i1l1739 0123  
                                i1l1683 00A8                                  i1l1677 0097  
                                i1l1767 0164                                  i1l1769 0167  
                                i1l1697 00D7                                  i1l1777 0174  
                        __CFG_WDTCCS$SC 0000                                  _OSCFRQ 0893  
                     ?_I2C1_MasterWrite 0027                          __CFG_PWRTE$OFF 0000  
                    ??_I2C1_MasterWrite 002B                          _p_i2c1_current 0072  
                                ___wmul 044C                          __CFG_STVREN$ON 0000  
            ??_I2C1_MasterWriteTRBBuild 0024                               ?_I2C1_ISR 0077  
                       _ADCC_Initialize 0468          MYI2C_Write2LEDBytes@sourceData 0034  
     __size_of_ADCC_GetSingleConversion 0014               ?_ADCC_GetSingleConversion 0020  
         I2C1_MasterWriteTRBBuild@pdata 0020                       _SYSTEM_Initialize 0500  
               __end_of__initialization 0041                      ?_SYSTEM_Initialize 0077  
                        _i2c1_trb_count 0074                   _I2C1_FunctionComplete 04DE  
                  _I2C1_BusCollisionISR 0523                          __pcstackCOMMON 0077  
                I2C1_MasterWrite@length 0027                            __pidataBANK1 04F0  
                   ??_SYSTEM_Initialize 0021                main@I2C_ADDRESS_FADELED0 0059  
                         __end_of_delay 0380                          main@faderValue 005F  
                            ??_I2C1_ISR 0079                      main@fader8bitValue 005C  
                               ??_delay 0028               __end_of_SYSTEM_Initialize 050C  
                            __pbssBANK0 0061                              __pbssBANK1 00B0  
                 ?_I2C1_BusCollisionISR 0077                          _SSP1DATPPSbits 0EC6  
                            __pmaintext 0180                                 ?___wmul 0020  
          __end_of_MYI2C_Write2LEDBytes 02CB                         __CFG_PPS1WAY$ON 0000  
               __end_of_ADCC_Initialize 0483                              __pintentry 0004  
                       _I2C1_Initialize 04B3                                 _ADFLTRH 0115  
                               _ADFLTRL 0114                              _blinkyLoop 02CB  
                               _ADPREVH 008F                                 _ADPREVL 008E  
                               _ADSTPTH 0113                                 _ADSTPTL 0112  
                        _SSP1CLKPPSbits 0EC5                                 _OSCCON1 088D  
                               _OSCCON3 088F                               _I2C1_Stop 049B  
                MYI2C_Write2LEDBytes@pD 0046                                 _OSCTUNE 0892  
                               _SSP1ADD 018D                                 _PPSLOCK 0E8F  
                               _SSP1BUF 018C         MYI2C_Write2LEDBytes@pointerByte 004E  
         I2C1_MasterTRBInsert@ptrb_list 0020                  ?_I2C1_FunctionComplete 0077  
         __size_of_I2C1_MasterTRBInsert 0046                      _p_i2c1_trb_current 0073  
                  __CFG_SCANE$available 0000                         __size_of___wmul 001C  
                               __ptext1 02CB                                 __ptext2 032D  
                               __ptext3 044C                                 __ptext4 0500  
                               __ptext5 03C6                                 __ptext6 050C  
                               __ptext7 04B3                                 __ptext8 0468  
                               __ptext9 0257                   _OSCILLATOR_Initialize 050C  
              ??_PIN_MANAGER_Initialize 0020                              ?_I2C1_Stop 0077  
            __size_of_SYSTEM_Initialize 000C                    I2C1_ISR@pi2c_buf_ptr 0071  
                               clrloop0 051C                    end_of_initialization 0041  
                               init_ram 0515                                 initloop 0516  
                ??_I2C1_BusCollisionISR 0077                 __end_of_I2C1_Initialize 04CA  
                      ?_ADCC_Initialize 0077        __end_of_ADCC_GetSingleConversion 04DE  
                           ?_blinkyLoop 0031                   __CFG_WDTCPS$WDTCPS_31 0000  
             __size_of_I2C1_MasterWrite 0028                       __size_of_I2C1_ISR 013B  
       MYI2C_Write2LEDBytes@writeBuffer 004F                        __CFG_FEXTOSC$OFF 0000  
                  _MYI2C_Write2LEDBytes 0257       I2C1_ISR@i2c_10bit_address_restart 0066  
               I2C1_MasterWrite@address 0028                  delay@adjustedDelaytime 0029  
                        __end_of___wmul 0468                 I2C1_MasterWrite@trBlock 0068  
              I2C1_Stop@completion_code 0078                  ?_OSCILLATOR_Initialize 0077  
                   start_initialization 0022                             ??_I2C1_Stop 0077  
       __size_of_PIN_MANAGER_Initialize 003E                   ?_MYI2C_Write2LEDBytes 002E  
     __size_of_I2C1_MasterWriteTRBBuild 0020               ?_I2C1_MasterWriteTRBBuild 0020  
                   __size_of_blinkyLoop 0062                        ?_I2C1_Initialize 0077  
                      __CFG_LPBOREN$OFF 0000                                ??___wmul 0024  
                           __pdataBANK1 00A0            I2C1_MasterWriteTRBBuild@ptrb 0026  
              _ADCC_GetSingleConversion 04CA                             __pbssCOMMON 0070  
                             ___latbits 0002                           __pcstackBANK0 0020  
      MYI2C_Write2LEDBytes@LSBWriteByte 002F                           _i2c1_tr_queue 006C  
                   blinkyLoop@delayTime 0034                 ??_I2C1_FunctionComplete 0077  
                _PIN_MANAGER_Initialize 03C6        MYI2C_Write2LEDBytes@MSBWriteByte 002E  
       ADCC_GetSingleConversion@channel 0023                                _I2C1_ISR 0045  
          ??_INTERRUPT_InterruptManager 007D                               __pswtext1 0483  
                      _I2C1_MasterWrite 0404            __end_of_I2C1_MasterTRBInsert 03C6  
                main@prevFader8bitValue 0056                     blinkyLoop@loopCount 0036  
                ??_MYI2C_Write2LEDBytes 0030                          __size_of_delay 0053  
                          delay@counter 002D                  I2C1_MasterRead@trBlock 00B0  
                        ___wmul@product 0024                               clear_ram0 051B  
                              _PIE3bits 0719     __size_of_INTERRUPT_InterruptManager 001C  
                              _PIR3bits 070F                                _SSP1CON1 0190  
                              _SSP1CON3 0192                                _SSP1STAT 018F  
                          ??_blinkyLoop 0033                              _ADCON0bits 0093  
                            _ADCON1bits 0094                              _ADCON2bits 0095  
                            _ADCON3bits 0096                       ___wmul@multiplier 0020  
                    __end_of_blinkyLoop 032D                              _ADSTATbits 0097  
         __size_of_I2C1_BusCollisionISR 0001                  I2C1_ISR@i2c_bytes_left 0070  
               ??_OSCILLATOR_Initialize 0020                          delay@delaytime 0026  
      __end_of_I2C1_MasterWriteTRBBuild 044C                __size_of_ADCC_Initialize 001B  
                   I2C1_ISR@i2c_address 0075                                __ptext10 0404  
                              __ptext11 042C                                __ptext12 0380  
                              __ptext13 04CA                                __ptext15 0045  
                              __ptext16 049B                                __ptext17 04DE  
                              __ptext18 0523                      blinkyLoop@maxLoops 0031  
                          _SSP1CON1bits 0190                            _SSP1CON2bits 0191  
                         __size_of_main 00D7                    __CFG_WDTCWS$WDTCWS_7 0000  
                  _I2C1_MasterTRBInsert 0380              ??_ADCC_GetSingleConversion 0023  
                              int$flags 007E      __end_of_INTERRUPT_InterruptManager 0020  
            _INTERRUPT_InterruptManager 0004             PIN_MANAGER_Initialize@state 0020  
                        _cMstrClkAdjust 0521                              _INTCONbits 000B  
                              intlevel1 0000                 ?_PIN_MANAGER_Initialize 0077  
              __end_of_I2C1_MasterWrite 042C                       __CFG_CLKOUTEN$OFF 0000  
        __size_of_I2C1_FunctionComplete 0012           __end_of_I2C1_FunctionComplete 04F0  
                           _PPSLOCKbits 0E8F                   ?_I2C1_MasterTRBInsert 0020  
                __end_of_cMstrClkAdjust 0523                __size_of_I2C1_Initialize 0017  
                         __pstringtext1 0521                _I2C1_MasterWriteTRBBuild 042C  
        __end_of_PIN_MANAGER_Initialize 0404                       ??_ADCC_Initialize 0020  
                    __size_of_I2C1_Stop 0018  
